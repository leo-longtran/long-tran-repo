openapi: 3.0.0
paths:
  /v2/corporations:
    get:
      operationId: CorporationsController_getCorporationList
      x-hidden-in: internal
      summary: List Corporation
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a list of companies accessible by the user in operation.

            * Companies to which they belong

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              corporation.read
        jpn: |-
          * 操作しているユーザーがアクセス可能な企業一覧を取得する

            * 自身の所属している企業

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              corporation.read

      parameters:
        - name: name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Company name, partial match
            jpn: |-
              企業名、部分一致
          schema:
            maxLength: 255
            pattern: .{1,255}
            type: string
        - name: domain
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Domain name, perfect match
            jpn: |-
              ドメイン、完全一致
          schema:
            maxLength: 255
            pattern: .{1,255}
            type: string
        - name: label
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Key of ```custom_fields```, perfect match
            jpn: |-
              自由記述項目のキー、完全一致
          schema:
            maxLength: 255
            pattern: .{1,255}
            type: string
        - name: page
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of page

              ※ If pass ```offset```, ```offset``` has priority
            jpn: |-
              ページネーション

              ※```offset```が設定されている場合、```offset```が優先される
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Offset used getting items
            jpn: |-
              取得を開始する位置
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items per page
            jpn: |-
              ページあたりの返却件数
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: order_by
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Attribute used by sort. If not set this, sort by internal ID
            jpn: |-
              ソート項目。未指定の場合、内部管理ID順
          schema:
            enum:
              - display_name
            type: string
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort order.

              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順。

              * ```asc```：昇順
              * ```desc```：降順
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetCorporations'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_0
        - Corporation API
      security:
        - BearerAuth: []
    post:
      operationId: CorporationsController_postCorporation
      x-internal: true
      summary: Create Corporation And User
      description: |-

        :::x-description-i18n:
        eng: |-
          * Create a company and users belonging to that company.

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              corporation.write.internal
        jpn: |-
          * 企業とその企業に所属するユーザを作成する

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              corporation.write.internal

      parameters:
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostCorporationsBodyDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostCorporations'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: conflict_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_0
      security:
        - BearerAuth: []
  /v2/corporations/all:
    get:
      operationId: CorporationsController_getCorporationListAll
      x-internal: true
      summary: List Corporation All
      description: |

        :::x-description-i18n:
        eng: |-
          * Get a list of companies accessible by the user in operation.

            * Companies to which they belong

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              corporation.read.all
        jpn: |-
          * 操作しているユーザーがアクセス可能な企業一覧を取得する

            * 自身の所属している企業

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              corporation.read.all
      parameters:
        - name: name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Company name, partial match
            jpn: |-
              企業名、部分一致
          schema:
            maxLength: 255
            pattern: .{1,255}
            type: string
        - name: domain
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Domain name, perfect match
            jpn: |-
              ドメイン、完全一致
          schema:
            maxLength: 255
            pattern: .{1,255}
            type: string
        - name: label
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Key of ```custom_fields```, perfect match
            jpn: |-
              自由記述項目のキー、完全一致
          schema:
            maxLength: 255
            pattern: .{1,255}
            type: string
        - name: page
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of page

              ※ If pass ```offset```, ```offset``` has priority
            jpn: |-
              ページネーション

              ※```offset```が設定されている場合、```offset```が優先される
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Offset used getting items
            jpn: |-
              取得を開始する位置
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items per page
            jpn: |-
              ページあたりの返却件数
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: order_by
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Attribute used by sort. If not set this, sort by internal ID
            jpn: |-
              ソート項目。未指定の場合、内部管理ID順
          schema:
            enum:
              - display_name
            type: string
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort order.

              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順。

              * ```asc```：昇順
              * ```desc```：降順
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetCorporations'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_0
      security:
        - BearerAuth: []
  /v2/corporations/{corporation_id}:
    get:
      operationId: CorporationsController_getCorporationById
      x-hidden-in: internal
      summary: Read Corporation
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a specified corporation.

          ### EXECUTION PERMISSION

            * Being a member/participating company

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              corporation.read
        jpn: |-
          * 指定したidの企業情報を取得する

          ### EXECUTION PERMISSION

            * 所属/参加企業であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              corporation.read

      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID(UUID format)
            jpn: |-
              企業ID(UUID)
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetCorporationsCorporationId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_0
      security:
        - BearerAuth: []
    put:
      operationId: CorporationsController_updateCorporationById
      x-hidden-in: internal
      summary: Replace Corporation
      description: |-

        :::x-description-i18n:
        eng: |-
          * Update corporation information for the specified ID

          ### EXECUTION PERMISSION

            * The role of the affiliation/participating company is ```super_admin```

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              corporation.write
        jpn: |-
          * 指定したidの企業情報を更新する

          ### EXECUTION PERMISSION

            * 所属/参加企業の role が ```super_admin``` であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              corporation.write

      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID(UUID format)
            jpn: |-
              企業ID(UUID)
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PutCorporationsCorporationIdBodyDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PutCorporationsCorporationId'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: conflict_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_0
      security:
        - BearerAuth: []
    patch:
      operationId: CorporationsController_patchCorporationById
      x-hidden-in: internal
      summary: Update Corporation
      description: |-

        :::x-description-i18n:
        eng: |-
          * Update specified Corporation partially.

          ### EXECUTION PERMISSION

            * The role of the affiliation/participating company is ```super_admin```

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              corporation.write
        jpn: |-
          * 指定したidの企業情報を更新する

          ### EXECUTION PERMISSION

            * 所属/参加企業の role が ```super_admin``` であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              corporation.write

      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID(UUID format)
            jpn: |-
              企業ID(UUID)
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchCorporationsCorporationIdBodyDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PatchCorporationsCorporationId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: conflict_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_0
      security:
        - BearerAuth: []
    delete:
      operationId: CorporationsController_deleteCorporationById
      x-internal: true
      summary: Delete Corporation
      description: |-

        :::x-description-i18n:
        eng: |-
          * Delete the company with the specified ID
          * Groups and users belonging to the company will also be deleted

          ### EXECUTION PERMISSION

            * The role of the affiliation/participating company is ```super_admin```

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              corporation.write.internal
        jpn: |-
          * 指定したidの企業を削除する
          * 企業に所属しているGroup, Userも削除される

          ### EXECUTION PERMISSION

            * 所属/参加企業の role が ```super_admin``` であること

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              corporation.write.internal

      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID(UUID format)
            jpn: |-
              企業ID(UUID)
          example: 77743f25-5362-4f09-b9ff-57e42031daee
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_0
      security:
        - BearerAuth: []
  /v2/corporations/{corporation_id}/all:
    patch:
      operationId: CorporationsController_patchCorporationByIdAll
      x-internal: true
      summary: Update Corporation All
      description: |-

        :::x-description-i18n:
        eng: |-
          * Update specified Corporation partially.

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              corporation.write.all
        jpn: |-
          * 指定したidの企業情報を更新する

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              corporation.write.all

      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID(UUID format)
            jpn: |-
              企業ID(UUID)
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchCorporationsCorporationIdBodyDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PatchCorporationsCorporationId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: conflict_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_0
      security:
        - BearerAuth: []
    get:
      operationId: CorporationsController_getCorporationByIdAppliClient
      x-internal: true
      summary: Read Corporation All
      description: |

        :::x-description-i18n:
        eng: |-
          * Get a specified corporation.

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              corporation.read.all
        jpn: |-
          * 指定したidの企業情報を取得する

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              corporation.read.all
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID(UUID format)
            jpn: |-
              企業ID(UUID)
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetCorporationsCorporationId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_0
      security:
        - BearerAuth: []
    delete:
      operationId: CorporationsController_deleteCorporationByIdAll
      x-internal: true
      summary: Delete Corporation All
      description: |-

        :::x-description-i18n:
        eng: |-
          * Delete the company with the specified ID
          * Groups and users belonging to the company will also be deleted

          ### EXECUTION PERMISSION

            * The role of the affiliation/participating company is ```super_admin```

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              corporation.write.internal.all
        jpn: |-
          * 指定したidの企業を削除する
          * 企業に所属しているGroup, Userも削除される

          ### EXECUTION PERMISSION

            * 所属/参加企業の role が ```super_admin``` であること

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              corporation.write.internal.all

      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID(UUID format)
            jpn: |-
              企業ID(UUID)
          example: 77743f25-5362-4f09-b9ff-57e42031daee
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_0
      security:
        - BearerAuth: []
  /v2/corporations/{corporation_id}/recovery:
    post:
      operationId: CorporationsController_recoveryCorporationById
      x-internal: true
      summary: Recovery Corporation
      description: |-

        :::x-description-i18n:
        eng: |-
          * Recovery the corporation with the specified ID
          * Groups, users and other belonging to the company will also be recovered

          ### EXECUTION PERMISSION

            * The role of the affiliation/participating company is ```super_admin```

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              corporation.write.internal
        jpn: |-
          * 指定したidの企業を復元する
          * 企業に所属しているGroup, Userも復元される

          ### EXECUTION PERMISSION

            * 所属/参加企業の role が ```super_admin``` であること

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              corporation.write.internal

      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID(UUID format)
            jpn: |-
              企業ID(UUID)
          example: 77743f25-5362-4f09-b9ff-57e42031daee
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '201':
          description: Created
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_0
      security:
        - BearerAuth: []
  /v2/corporations/{corporation_id}/recovery/all:
    post:
      operationId: CorporationsController_recoveryCorporationByIdAll
      x-internal: true
      summary: Recovery Corporation All
      description: |-

        :::x-description-i18n:
        eng: |-
          * Recovery the corporation with the specified ID
          * Groups, users and other belonging to the company will also be recovered

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              corporation.write.internal.all
        jpn: |-
          * 指定したidの企業を復元する
          * 企業に所属しているGroup, Userも復元される

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              corporation.write.internal.all

      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID(UUID format)
            jpn: |-
              企業ID(UUID)
          example: 77743f25-5362-4f09-b9ff-57e42031daee
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '201':
          description: Created
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_0
      security:
        - BearerAuth: []
  /v2/corporations/{corporation_id}/filesize/all:
    get:
      operationId: CorporationsController_getCorporationsCorporationIdFilesize
      x-internal: true
      summary: Read Corporation Filesize All
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get the file size of the specified parameter corporation

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              corporation.read.filesize.all
        jpn: |-
          * 指定するパラメタ企業のファイルサイズを取得する

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              corporation.read.filesize.all

      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID(UUID format)
            jpn: |-
              企業ID(UUID)
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2GetCorporationsCorporationIdFilesizeEntity
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_0
      security:
        - BearerAuth: []
  /v2/corporations/{corporation_id}/users:
    get:
      operationId: CorporationUsersController_getUserList
      x-hidden-in: internal
      summary: List Corporation User
      description: |

        :::x-description-i18n:
        eng: |-
          * Get a list of corporation users

          ### EXECUTION PERMISSION

            * Being a member/participating company

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              corporation.user.read

        jpn: |-
          * 企業に所属するメンバーの一覧を取得する

          ### EXECUTION PERMISSION

            * 所属/参加企業であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              corporation.user.read
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          example: 93ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            format: uuid
            type: string
        - name: name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Name. Partial match on Name. Less than 255 characters
            jpn: |-
              ユーザー名、部分一致、255文字以下
          example: John Doe
          schema:
            minLength: 1
            maxLength: 255
            pattern: .{1,255}
            type: string
        - name: phonetic_family_name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name. Partial match on phonetic family name. Less than 255 characters (Double-byte or single-byte characters and any types of character are supported.)
            jpn: |-
              姓（振り仮名）、部分一致、255文字以下（全角や半角は問わない）
          example: Doe
          schema:
            minLength: 1
            maxLength: 255
            pattern: .{1,255}
            type: string
        - name: phonetic_given_name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name. Partial match on phonetic given name. Less than 255 characters (Double-byte or single-byte characters and any types of character are supported.)
            jpn: |-
              名（振り仮名）、部分一致、255文字以下（全角や半角は問わない）
          example: John
          schema:
            minLength: 1
            maxLength: 255
            pattern: .{1,255}
            type: string
        - name: email
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Email address. Partial match on email address
            jpn: |-
              メールアドレス、部分一致
          example: john.doe@landlog.co.jp
          schema:
            type: string
        - name: primary
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Type of email address
              * primary: ```true```
              * secondary: ```false```
              * MUST use with query parameter ```email```
            jpn: |-
              都道府県。メールアドレスの種類（メイン、サブ）
              * メイン：```true```
              * サブ：```false```
              * Query Parameterに```email```指定時のみ有効
          example: true
          schema:
            default: false
            type: boolean
        - name: role
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Role. Role in the group: ```super_admin```, ```admin```, ```manager```, or ```staff```
            jpn: |-
              ロール、ユーザーの権限: ```super_admin```, ```admin```, ```manager```, or ```staff```
          example: admin
          schema:
            enum:
              - super_admin
              - admin
              - manager
              - staff
            type: string
        - name: label
          required: false
          in: query
          description: |+

            :::x-description-i18n:
            eng: |-
              Label. Perfect match on Label. Less than 255 characters
            jpn: |-
              自由記述項目のキー、完全一致、255文字以下

          example: label
          schema:
            minLength: 1
            maxLength: 255
            pattern: .{1,255}
            type: string
        - name: tag
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Tag. Less than 255 characters
            jpn: |-
              グループタグ、255文字以下
          example:
            - tag1
            - tag2
          schema:
            minLength: 1
            maxLength: 255
            type: string
        - name: invited
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation status.
              * ```true```: Pending
              * ```false```: Accepted invitation
            jpn: |-
              招待の有無
              * ```true```: 招待中のとき
              * ```false```: 招待承諾済み
          example: true
          schema:
            default: false
            type: boolean
        - name: category
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Group joining form
              * ```member```: when a user belongs to a corporation
              * ```guest```: when a user joins a corporation or a group
            jpn: |-
              ユーザーの参加形態
              * ```member```：ユーザーが企業に所属している場合
              * ```guest```：ユーザーが企業またはグループに参加している場合
          example: guest
          schema:
            enum:
              - member
              - guest
            type: string
        - name: page
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of pages. 1 or more. ```offset``` will be checked first
            jpn: |-
              ページネーション 1以上、```offset```が設定されている場合、```offset```が優先される
          example: 1
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items to be skipped. 0 or more
            jpn: |-
              取得を開始する位置、0以上
          example: 1
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items to be included in the result. From 1 through 1000
            jpn: |-
              ページあたりの返却件数、1以上1000以下
          example: 100
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: order_by
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Field to be sorted. Only ```name```, ```family_name```, ```given_name```, ```role``` can be specified
            jpn: |-
              ソート項目、name、family_name、given_name、roleのみ指定可
          example: name
          schema:
            enum:
              - name
              - family_name
              - given_name
              - role
            type: string
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort order.

              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順。

              * ```asc```：昇順
              * ```desc```：降順
          example: asc
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetCorporationUsers'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_1
        - Corporation API
      security:
        - BearerAuth: []
    post:
      operationId: CorporationUsersController_createCorporationUser
      x-hidden-in: internal
      summary: Create Corporation User
      description: |

        :::x-description-i18n:
        eng: |-
          * Add a new corporation user

          ### EXECUTION PERMISSION

            * The role of the participating company is ```admin``` or higher
            * The user to be created must be less than his own role

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              corporation.user.write

        jpn: |-
          * 企業に所属するユーザーを作成する

          ### EXECUTION PERMISSION

            * 所属/参加企業の role が ```admin```以上 であること
            * 作成対象の user は 自身のrole以下 であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              corporation.user.write
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          example: cf221ab7-9272-48e9-b8ce-433397744185
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostCorporationsCorporationIdUsersBodyDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostCorporationsCorporationIdUsers'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_1
      security:
        - BearerAuth: []
  /v2/corporations/{corporation_id}/users/all:
    get:
      operationId: CorporationUsersController_getUserListAll
      x-internal: true
      summary: List Corporation User All
      description: |

        :::x-description-i18n:
        eng: |-
          * Get a list of corporation users

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              corporation.user.read.all
        jpn: |-
          * 企業に所属するメンバーの一覧を取得する

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              corporation.user.read.all
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          example: 93ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            format: uuid
            type: string
        - name: name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Name. Partial match on Name. Less than 255 characters
            jpn: |-
              ユーザー名、部分一致、255文字以下
          example: John Doe
          schema:
            minLength: 1
            maxLength: 255
            pattern: .{1,255}
            type: string
        - name: phonetic_family_name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name. Partial match on phonetic family name. Less than 255 characters (Double-byte or single-byte characters and any types of character are supported.)
            jpn: |-
              姓（振り仮名）、部分一致、255文字以下（全角や半角は問わない）
          example: Doe
          schema:
            minLength: 1
            maxLength: 255
            pattern: .{1,255}
            type: string
        - name: phonetic_given_name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name. Partial match on phonetic given name. Less than 255 characters (Double-byte or single-byte characters and any types of character are supported.)
            jpn: |-
              名（振り仮名）、部分一致、255文字以下（全角や半角は問わない）
          example: John
          schema:
            minLength: 1
            maxLength: 255
            pattern: .{1,255}
            type: string
        - name: email
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Email address. Partial match on email address
            jpn: |-
              メールアドレス、部分一致
          example: john.doe@landlog.co.jp
          schema:
            type: string
        - name: primary
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Type of email address
              * primary: ```true```
              * secondary: ```false```
              * MUST use with query parameter ```email```
            jpn: |-
              都道府県。メールアドレスの種類（メイン、サブ）
              * メイン：```true```
              * サブ：```false```
              * Query Parameterに```email```指定時のみ有効
          example: true
          schema:
            default: false
            type: boolean
        - name: role
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Role. Role in the group: ```super_admin```, ```admin```, ```manager```, or ```staff```
            jpn: |-
              ロール、ユーザーの権限: ```super_admin```, ```admin```, ```manager```, or ```staff```
          example: admin
          schema:
            enum:
              - super_admin
              - admin
              - manager
              - staff
            type: string
        - name: label
          required: false
          in: query
          description: |+

            :::x-description-i18n:
            eng: |-
              Label. Perfect match on Label. Less than 255 characters
            jpn: |-
              自由記述項目のキー、完全一致、255文字以下

          example: label
          schema:
            minLength: 1
            maxLength: 255
            pattern: .{1,255}
            type: string
        - name: tag
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Tag. Less than 255 characters
            jpn: |-
              グループタグ、255文字以下
          example:
            - tag1
            - tag2
          schema:
            minLength: 1
            maxLength: 255
            type: string
        - name: invited
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation status.
              * ```true```: Pending
              * ```false```: Accepted invitation
            jpn: |-
              招待の有無
              * ```true```: 招待中のとき
              * ```false```: 招待承諾済み
          example: true
          schema:
            default: false
            type: boolean
        - name: category
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Group joining form
              * ```member```: when a user belongs to a corporation
              * ```guest```: when a user joins a corporation or a group
            jpn: |-
              ユーザーの参加形態
              * ```member```：ユーザーが企業に所属している場合
              * ```guest```：ユーザーが企業またはグループに参加している場合
          example: guest
          schema:
            enum:
              - member
              - guest
            type: string
        - name: page
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of pages. 1 or more. ```offset``` will be checked first
            jpn: |-
              ページネーション 1以上、```offset```が設定されている場合、```offset```が優先される
          example: 1
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items to be skipped. 0 or more
            jpn: |-
              取得を開始する位置、0以上
          example: 1
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items to be included in the result. From 1 through 1000
            jpn: |-
              ページあたりの返却件数、1以上1000以下
          example: 100
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: order_by
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Field to be sorted. Only ```name```, ```family_name```, ```given_name```, ```role``` can be specified
            jpn: |-
              ソート項目、name、family_name、given_name、roleのみ指定可
          example: name
          schema:
            enum:
              - name
              - family_name
              - given_name
              - role
            type: string
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort order.

              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順。

              * ```asc```：昇順
              * ```desc```：降順
          example: asc
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetCorporationUsers'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_1
      security:
        - BearerAuth: []
    post:
      operationId: CorporationUsersController_createCorporationUserAll
      x-internal: true
      summary: Create Corporation User All
      description: |

        :::x-description-i18n:
        eng: |-
          * Add a new corporation user

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              corporation.user.write.all
        jpn: |-
          * 企業に所属するユーザーを作成する

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              corporation.user.write.all
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          example: cf221ab7-9272-48e9-b8ce-433397744185
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostCorporationsCorporationIdUsersBodyDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostCorporationsCorporationIdUsers'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_1
      security:
        - BearerAuth: []
  /v2/corporations/{corporation_id}/users/{user_id}:
    get:
      operationId: CorporationUsersController_getUser
      x-hidden-in: internal
      summary: Read Corporation User
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get user information of specified ID

          ### EXECUTION PERMISSION

            * Being a member/participating company

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              corporation.user.read
        jpn: |-
          * 指定したidのユーザー情報を取得する

          ### EXECUTION PERMISSION

            * 所属/参加企業であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              corporation.user.read

      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Corporation ID (UUID)
            jpn: |-
              企業ID (UUID)

          example: k5i87645-ngjt-3847-k6k8-ba38690a223p
          schema:
            format: uuid
            type: string
        - name: user_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              User ID (UUID)
            jpn: |-
              ユーザーID (UUID)

          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      responses:
        '200':
          description: |-

            :::x-description-i18n:
            eng: |-
              > 📘 Info
              >
              > Only id, email, role, category, invited, joined_from, tags, and custom_fields are returned when a user is being invited.
            jpn: |-
              > 📘 Info
              >
              > 招待中ユーザーの場合は、id、email、role、category、invited、joined_from、tags、custom_fieldsのみ返却されます。

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetCorporationUsersUser'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_1
      security:
        - BearerAuth: []
    put:
      operationId: CorporationUsersController_putCorporationUser
      x-hidden-in: internal
      summary: Replace Corporation User
      description: |

        :::x-description-i18n:
        eng: |-
          * Update user information for the specified ID

          ### EXECUTION PERMISSION

            * The role of the participating company is ```admin``` or higher
            * User to be updated must be less than his own role
            * User to be updated must belong to a company

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              corporation.user.write

        jpn: |-
          * 指定したIDのユーザー情報を更新する

          ### EXECUTION PERMISSION

            * 所属/参加企業の role が ```admin```以上 であること
            * 更新対象の user は 自身のrole以下 であること
            * 更新対象の user は 企業に所属していること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              corporation.user.write
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Company ID
            jpn: |-
              企業ID
          schema:
            format: uuid
            type: string
        - name: user_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PutCorporationUsersUserIdBodyDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PutCorporationUsersUserId'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: conflict_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_1
      security:
        - BearerAuth: []
    patch:
      operationId: CorporationUsersController_patchCorporationUser
      x-hidden-in: internal
      summary: Update Corporation User
      description: |

        :::x-description-i18n:
        eng: |-
          * Update a specified corporation user partially

          ### EXECUTION PERMISSION

            * The role of the participating company is ```admin``` or higher
            * User to be updated must be less than his own role
            * User to be updated must belong to a company

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              corporation.read

        jpn: |-
          * 指定したidのユーザー情報を更新する

          ### EXECUTION PERMISSION

            * 所属/参加企業の role が ```admin```以上 であること
            * 更新対象の user は 自身のrole以下 であること
            * 更新対象の user は 企業に所属していること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              corporation.read
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            format: uuid
            type: string
        - name: user_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID
          example: 00ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2PatchCorporationsCorporationIdUsersUserIdBodyDto
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2PatchCorporationsCorporationIdUsersUserId
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: conflict_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_1
      security:
        - BearerAuth: []
    delete:
      operationId: CorporationUsersController_deleteCorporationUser
      x-hidden-in: internal
      summary: Delete Corporation User
      description: |-

        :::x-description-i18n:
        eng: |-
          * Delete a specified corporation user

          ### EXECUTION PERMISSION

            * The role of the participating company is ```admin``` or higher
            * The user to be deleted must be below your own role
            * The user to be deleted belongs to a company

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              corporation.user.write
        jpn: |-
          * 指定したidのユーザー情報を削除する

          ### EXECUTION PERMISSION

            * 所属/参加企業の role が ```admin```以上 であること
            * 削除対象の user は 自身のrole以下 であること
            * 削除対象の user は 企業に所属していること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              corporation.user.write

      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          example: 5aac3829-0ff4-4b9f-83b3-ee9204663d48
          schema:
            format: uuid
            type: string
        - name: user_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID
          example: 47d331bc-383a-4d7a-98b8-a499e16e504c
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_1
      security:
        - BearerAuth: []
  /v2/corporations/{corporation_id}/users/{user_id}/all:
    get:
      operationId: CorporationUsersController_getUserAll
      x-internal: true
      summary: Read Corporation User All
      description: |

        :::x-description-i18n:
        eng: |-
          * Get user information of specified ID

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              corporation.user.read.all
        jpn: |-
          * 指定したidのユーザー情報を取得する

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              corporation.user.read.all
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Corporation ID (UUID)
            jpn: |-
              企業ID (UUID)

          example: k5i87645-ngjt-3847-k6k8-ba38690a223p
          schema:
            format: uuid
            type: string
        - name: user_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              User ID (UUID)
            jpn: |-
              ユーザーID (UUID)

          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetCorporationUsersUser'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_1
      security:
        - BearerAuth: []
    patch:
      operationId: CorporationUsersController_patchCorporationUserAll
      x-internal: true
      summary: Update Corporation User All
      description: |

        :::x-description-i18n:
        eng: |-
          * Update a specified corporation user partially

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              corporation.user.write.all
        jpn: |-
          * 指定したidのユーザー情報を更新する

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              corporation.user.write.all
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            format: uuid
            type: string
        - name: user_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID
          example: 00ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2PatchCorporationsCorporationIdUsersUserIdBodyDto
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2PatchCorporationsCorporationIdUsersUserId
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: conflict_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_1
      security:
        - BearerAuth: []
    delete:
      operationId: CorporationUsersController_deleteCorporationUserAll
      x-internal: true
      summary: Delete Corporation User All
      description: |

        :::x-description-i18n:
        eng: |-
          * Delete a specified corporation user

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              corporation.user.write.all
        jpn: |-
          * 指定したidのユーザー情報を削除する

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              corporation.user.write.all
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          example: 5aac3829-0ff4-4b9f-83b3-ee9204663d48
          schema:
            format: uuid
            type: string
        - name: user_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID
          example: 47d331bc-383a-4d7a-98b8-a499e16e504c
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_1
      security:
        - BearerAuth: []
  /v2/corporations/{corporation_id}/users/{user_id}/password:
    post:
      operationId: CorporationUsersPasswordController_createUserSettingPasswordMail
      x-internal: true
      summary: Send Password Setting Mail
      description: |-

        :::x-description-i18n:
        eng: |-
          * Send password setting email
          * Only for users belonging to a company

          ### EXECUTION PERMISSION

            * The role of the participating company is ```admin``` or higher
            * The target user must be less than his own role
            * The target user belongs to a company

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              corporation.user.write
        jpn: |-
          * パスワード設定メールを送信する
          * 企業に所属しているユーザーのみ対象

          ### EXECUTION PERMISSION

            * 所属/参加企業の role が ```admin```以上 であること
            * 対象の user は 自身のrole以下 であること
            * 対象の user は 企業に所属していること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              corporation.user.write

      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID (UUID format)
            jpn: |-
              企業ID(UUID 形式)
          example: 89f987f9-4abf-4595-9d17-7d8e06beffd3
          schema:
            format: uuid
            type: string
        - name: user_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the user to add as a member of the group (UUID format)
            jpn: |-
              グループのメンバーとして追加するユーザーのID (UUID形式)
          example: 32e01418-ba57-43b1-be27-6f361c012c44
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '201':
          description: Created
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_2
        - Corporation API
      security:
        - BearerAuth: []
  /v2/corporations/{corporation_id}/users/{user_id}/password/all:
    post:
      operationId: CorporationUsersPasswordController_createUserSettingPasswordMailAll
      x-internal: true
      summary: Send Password Setting Mail All
      description: |

        :::x-description-i18n:
        eng: |-
          * Send password setting email

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              corporation.user.write.all

        jpn: |-
          * パスワード設定メールを送信する

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              corporation.user.write.all
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID (UUID format)
            jpn: |-
              企業ID(UUID 形式)
          example: 89f987f9-4abf-4595-9d17-7d8e06beffd3
          schema:
            format: uuid
            type: string
        - name: user_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the user to add as a member of the group (UUID format)
            jpn: |-
              グループのメンバーとして追加するユーザーのID (UUID形式)
          example: 32e01418-ba57-43b1-be27-6f361c012c44
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '201':
          description: Created
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_2
      security:
        - BearerAuth: []
  /v2/corporations/{corporation_id}/people:
    get:
      operationId: CorporationPeopleController_getPeopleList
      x-internal: true
      summary: List Corporation Person
      description: |

        :::x-description-i18n:
        eng: |-
          * Get a list of corporation people

          ### EXECUTION PERMISSION

            * Being a member/participating company

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              corporation.person.read

        jpn: |-
          * 企業に所属する人の一覧を取得する

          ### EXECUTION PERMISSION

            * 所属/参加企業であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              corporation.person.read
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          example: 93ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            format: uuid
            type: string
        - name: name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Name. Partial match on Name. Less than 255 characters
            jpn: |-
              氏名、部分一致、255文字以下
          example: John Doe
          schema:
            minLength: 1
            maxLength: 255
            pattern: .{1,255}
            type: string
        - name: phonetic_family_name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name. Partial match on phonetic family name. Less than 255 characters (Double-byte or single-byte characters and any types of character are supported.)
            jpn: |-
              姓（振り仮名）、部分一致、255文字以下（全角や半角は問わない）
          example: Doe
          schema:
            minLength: 1
            maxLength: 255
            pattern: .{1,255}
            type: string
        - name: phonetic_given_name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name. Partial match on phonetic given name. Less than 255 characters (Double-byte or single-byte characters and any types of character are supported.)
            jpn: |-
              名（振り仮名）、部分一致、255文字以下（全角や半角は問わない）
          example: John
          schema:
            minLength: 1
            maxLength: 255
            pattern: .{1,255}
            type: string
        - name: belonging
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Company’s name or department name and such where person belongs to
            jpn: |-
              所属する企業名や部署名など
          example: |

            :::x-example-i18n:
            eng: |-
              Construction Section 2
            jpn: |-
              建設２課
          schema:
            type: string
        - name: email
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Email address. Partial match on email address
            jpn: |-
              メールアドレス、部分一致
          example: john.doe@landlog.co.jp
          schema:
            type: string
        - name: phone_number
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number
            jpn: |-
              電話番号
          example: '09012345678'
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of pages. 1 or more. ```offset``` will be checked first
            jpn: |-
              ページネーション 1以上、```offset```が設定されている場合、```offset```が優先される
          example: 1
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items to be skipped. 0 or more
            jpn: |-
              取得を開始する位置、0以上
          example: 1
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items to be included in the result. From 1 through 1000
            jpn: |-
              ページあたりの返却件数、1以上1000以下
          example: 100
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: order_by
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Field to be sorted. Only ```name```, ```family_name```, ```given_name``` can be specified
            jpn: |-
              ソート項目、name、family_name、given_nameのみ指定可
          example: name
          schema:
            enum:
              - name
              - family_name
              - given_name
            type: string
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort order

              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順

              * ```asc```：昇順
              * ```desc```：降順
          example: asc
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetCorporationPeople'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_3
        - Corporation API
      security:
        - BearerAuth: []
    post:
      operationId: CorporationPeopleController_createCorporationPerson
      x-internal: true
      summary: Create Corporation Person
      description: |

        :::x-description-i18n:
        eng: |-
          * Add a new corporation person
          ### EXECUTION PERMISSION
            The role of the participating company is ```admin``` or higher
          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              corporation.person.write
        jpn: |-
          * 企業に所属する人を作成する
          ### EXECUTION PERMISSION
            * 所属/参加企業の role が ```admin```以上 であること
          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              corporation.person.write
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          example: cf221ab7-9272-48e9-b8ce-433397744185
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2PostCorporationsCorporationIdPeopleBodyDto
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostCorporationsCorporationIdPeople'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_3
      security:
        - BearerAuth: []
  /v2/corporations/{corporation_id}/people/{person_id}:
    patch:
      operationId: CorporationPeopleController_patchCorporationPerson
      x-internal: true
      summary: Update Corporation Person
      description: |

        :::x-description-i18n:
        eng: |-
          * Update a specified corporation person partially
          ### EXECUTION PERMISSION
            The role of the participating company is ```admin``` or higher
          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              corporation.person.write
        jpn: |-
          * 指定したidの人情報を更新する
          ### EXECUTION PERMISSION
            * 所属/参加企業の role が ```admin```以上 であること
          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              corporation.person.write
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          example: cf221ab7-9272-48e9-b8ce-433397744185
          schema:
            format: uuid
            type: string
        - name: person_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Person ID
            jpn: |-
              人ID
          example: 00ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2PatchCorporationsCorporationIdPeoplePersonIdBodyDto
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2PatchCorporationsCorporationIdPeoplePersonId
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_3
      security:
        - BearerAuth: []
    delete:
      operationId: CorporationPeopleController_deleteCorporationPerson
      x-internal: true
      summary: Delete Corporation Person
      description: |

        :::x-description-i18n:
        eng: |-
          * Delete Corporation Person
          ### EXECUTION PERMISSION
            The role of the participating company is ```admin``` or higher
          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              corporation.person.write
        jpn: |-
          * 指定したidの人情報を削除する
          ### EXECUTION PERMISSION
            * 所属/参加企業の role が ```admin```以上 であること
          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              corporation.person.write
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          example: cf221ab7-9272-48e9-b8ce-433397744185
          schema:
            format: uuid
            type: string
        - name: person_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Person ID
            jpn: |-
              人ID
          example: 00ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_3
      security:
        - BearerAuth: []
    get:
      operationId: CorporationPeopleController_readCorporationPerson
      x-internal: true
      summary: Read Corporation Person
      description: |

        :::x-description-i18n:
        eng: |-
          * Get person information of specified ID
          ### EXECUTION PERMISSION
            * Being a member/participating company
          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              corporation.person.read
        jpn: |-
          * 指定したidの人情報を取得する
          ### EXECUTION PERMISSION
            * 所属/参加企業であること
          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              corporation.person.read
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Corporation ID (UUID)
            jpn: |-
              企業ID (UUID)

          example: k5i87645-ngjt-3847-k6k8-ba38690a223p
          schema:
            format: uuid
            type: string
        - name: person_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Person ID
            jpn: |-
              人ID
          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetCorporationPersonPersonId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_3
      security:
        - BearerAuth: []
  /v2/corporations/{corporation_id}/groups:
    get:
      operationId: GroupsController_getCorporationGroupList
      x-hidden-in: internal
      summary: List Corporation Group
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a list of Groups which belongs to the Corporation

          ### EXECUTION PERMISSION

            * Being a participating group

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              corporation.group.read
        jpn: |-
          * 企業に所属するグループの一覧を取得する

          ### EXECUTION PERMISSION

            * 参加グループであること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              corporation.group.read

      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID

          example: 25607d8a-b636-48bb-974a-345626601267
          schema:
            format: uuid
            type: string
        - name: name
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Name, partial match, less than 255 characters
            jpn: |-
              企業名、部分一致、255文字以下

          example: Sales
          schema:
            minLength: 1
            maxLength: 255
            type: string
        - name: state
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              State, partial match, less than 255 characters
            jpn: |-
              都道府県、部分一致、255文字以下

          example: Tokyo
          schema:
            minLength: 1
            maxLength: 255
            type: string
        - name: city
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              City/Town/Village, partial match, less than 255 characters
            jpn: |-
              市区町村、部分一致、255文字以下

          example: Minato-ku
          schema:
            minLength: 1
            maxLength: 255
            type: string
        - name: address_1
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Town name, street number, partial match, less than 255 characters
            jpn: |-
              町名、番地、部分一致、255文字以下

          example: Kaigan
          schema:
            minLength: 1
            maxLength: 255
            type: string
        - name: address_2
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Building name, partial match, less than 255 characters
            jpn: |-
              建物名、部分一致、255文字以下

          example: Shiodome
          schema:
            minLength: 1
            maxLength: 255
            type: string
        - name: type
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Type of Group

              * ```Corporation```：Corporation
              * ```Group```：Group
            jpn: |-
              グループ種別

              * ```Corporation```：企業
              * ```Group```：グループ

          example: Group
          schema:
            enum:
              - Corporation
              - Group
            type: string
        - name: tags
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Tag, less than 255 characters
            jpn: |-
              タグ、255文字以下

          example: foo
          schema:
            minLength: 1
            maxLength: 255
            type: array
            items:
              type: string
        - name: label
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Label, perfect match, less than 255 characters
            jpn: |-
              自由記述項目のキー、完全一致、255文字以下

          example: valueB
          schema:
            minLength: 1
            maxLength: 255
            type: array
            items:
              type: string
        - name: page
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of pages, 1 or more

              ※```offset``` will be checked first
            jpn: |-
              ページネーション、1以上

              ※```offset```が設定されている場合、```offset```が優先される

          example: 1
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of items to be skipped, 0 or more
            jpn: |-
              取得を開始する位置、0以上

          example: 1
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of items to be included in the result, from 1 through 1000
            jpn: |-
              ページあたりの返却件数、1以上1000以下

          example: 1
          schema:
            minimum: 0
            maximum: 1000
            default: 100
            type: number
        - name: order_by
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Field to be sorted

              * ```display_name```: sorted by ```name``` field
              * ```created_at```: sorted by ```created_at``` field
            jpn: |-
              ソート項目

              * ```display_name```: ```name``` フィールドで並べ替え
              * ```created_at```: ```created_at``` フィールドで並べ替え

          example: display_name
          schema:
            enum:
              - display_name
              - created_at
            type: string
        - name: order
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of pages, 1 or more

              * ```asc```: ascending order
              * ```desc```: descending order
            jpn: |-
              ソート順

              * ```asc```:昇順
              * ```desc```:降順

          example: asc
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: parent_group_id
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Parent group ID
            jpn: |-
              親グループID

          example: 6b07a1a1-3ee7-4b0f-845b-3deee6d29b58
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetCorporationGroups'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_4
        - Corporation API
      security:
        - BearerAuth: []
    post:
      operationId: GroupsController_createCorporationGroup
      x-hidden-in: internal
      summary: Create Corporation Group
      description: |-

        :::x-description-i18n:
        eng: |-
          * Create a new Group which belongs to the Corporation

          ### EXECUTION PERMISSION

            * The role of the company belongs to be ```admin``` or higher

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              corporation.group.write
        jpn: |-
          * 企業に所属するグループを作成する

          ### EXECUTION PERMISSION

            * 所属企業の role が ```admin```以上 であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              corporation.group.write

      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID(UUID format)
            jpn: |-
              企業ID(UUID)
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostCorporationsCorporationIdBodyDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostCorporationsCorporationId'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_4
      security:
        - BearerAuth: []
  /v2/corporations/{corporation_id}/groups/{group_id}:
    get:
      operationId: GroupsController_readCorporationGroup
      x-hidden-in: internal
      summary: Read Corporation Group
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a specified group which belongs to a corporation

          ### EXECUTION PERMISSION

            * Being a participating group

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              corporation.group.read
        jpn: |-
          * 指定したidの企業に所属するグループ情報を取得する

          ### EXECUTION PERMISSION

            * 参加グループであること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              corporation.group.read

      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID

          example: 0f515aa5-fd12-4cfc-b3d6-0c5984055901
          schema:
            format: uuid
            type: string
        - name: group_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID

          example: 2d113086-f9b6-401f-871c-2ffa403e338b
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2GetCorporationsCorporationIdGroupsGroupId
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_4
      security:
        - BearerAuth: []
    put:
      operationId: GroupsController_replaceCorporationGroup
      x-hidden-in: internal
      summary: Replace Corporation Group
      description: |-

        :::x-description-i18n:
        eng: |-
          * Update a specified group which belongs to a corporation

          ### EXECUTION PERMISSION

            * The participating group role is ```super_admin```, or you have not participated in the group and your company's role is ```super_admin```

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              corporation.group.write
        jpn: |-
          * 指定したidの企業に所属するグループ情報を更新する

          ### EXECUTION PERMISSION

          * 参加グループの role が ```super_admin``` であること、またはグループに未参加、且つ所属企業の role が ```super_admin``` であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              corporation.group.write

      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          example: 7ab2f616-ca92-4152-870d-d5e4e3da423d
          schema:
            format: uuid
            type: string
        - name: group_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2PutCorporationsCorporationIdGroupsGroupIdBodyDto
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2PutCorporationsCorporationIdGroupsGroupId
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_4
      security:
        - BearerAuth: []
    delete:
      operationId: GroupsController_deleteCorporationGroup
      x-hidden-in: internal
      summary: Delete Corporation Group
      description: |-

        :::x-description-i18n:
        eng: |-
          * Delete a specified group which belongs to a corporation

          ### EXECUTION PERMISSION

            * The participating group role is ```super_admin```, or you have not participated in the group and your company's role is ```super_admin```

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              corporation.group.write
        jpn: |-
          * 指定したidの企業に所属するグループ情報を削除する

          ### EXECUTION PERMISSION

            * 参加グループの role が ```super_admin``` であること、またはグループに未参加、且つ所属企業の role が ```super_admin``` であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              corporation.group.write

      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          example: 1e92a521-8da3-41d2-aefa-0b1a0fa19a65
          schema:
            format: uuid
            type: string
        - name: group_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID
          example: acd84b03-b7cb-49da-a69a-b9a4f36892c5
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_4
      security:
        - BearerAuth: []
  /v2/corporations/{corporation_id}/groups/{group_id}/members:
    get:
      operationId: CorporationGroupMembersController_getListCorporationGroupMembers
      x-hidden-in: internal
      summary: List Corporation Group Member
      description: |

        :::x-description-i18n:
        eng: |-
          * Get a list members of groups belonging to a corporation

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              corporation.group.read
        jpn: |-
          * 企業に所属するグループのメンバー一覧を取得する

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              corporation.group.read
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          example: cf221ab7-9272-48e9-b8ce-433397744185
          schema:
            format: uuid
            type: string
        - name: group_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID
          example: cf221ab7-9272-48e9-b8ce-433397744185
          schema:
            format: uuid
            type: string
        - name: user_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID
          example: c8a17724-caeb-4233-b8d8-ba38690a113d
          schema:
            format: uuid
            type: string
        - name: name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Partial match on Name Less than 255 characters
            jpn: |-
              メンバー名 部分一致、255文字以下
          example: John Doe
          schema:
            maxLength: 255
            type: string
        - name: email
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Partial match on email address
            jpn: |-
              メールアドレス 部分一致
          example: john.doe@landlog.co.jp
          schema:
            type: string
        - name: primary
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Type of email address (primary and secondary). Primary: ```true```; secondary: ```false```. MUST use with query parameter ```email```
            jpn: |-
              メールアドレスの種類（メイン、サブ) メイン：```true```、サブ：```false``` Query Parameterに```email```指定時のみ有効
          example: 'true'
          schema:
            type: boolean
        - name: phonetic_family_name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Partial match on phonetic family name. Less than 255 characters
            jpn: |-
              ふりがな（姓) 部分一致、255文字以下
          example: Doe
          schema:
            maxLength: 255
            type: string
        - name: phonetic_given_name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Partial match on phonetic given name. Less than 255 characters
            jpn: |-
              ふりがな（名) 部分一致、255文字以下
          example: John
          schema:
            maxLength: 255
            type: string
        - name: role
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Refine search by role. ```super_admin```, ```admin```, ```manager```, or ```staff```. None specified by default
            jpn: |-
              ロールでの絞り込み。```super_admin```、```admin```、```manager```、```staff```を指定可能。デフォルトは指定なし。
          example: admin
          schema:
            enum:
              - super_admin
              - admin
              - manager
              - staff
            type: string
        - name: includes
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Additional information to include in a response. ```profile```: Invitation approved user information
            jpn: |-
              レスポンスに追加で含める情報、```profile```：ユーザー固有情報
          example: profile
          schema:
            enum:
              - profile
            type: string
        - name: page
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of pages, 1 or more, If ```offset``` is set, ```offset``` takes precedence
            jpn: |-
              ページネーション、1以上 ※```offset```が設定されている場合、```offset```が優先される
          example: 1
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items to be skipped
            jpn: |-
              取得を開始する位置
          example: 1
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of returns per page
            jpn: |-
              ページあたりの返却件数
          example: 100
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: order_by
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Field to be sorted ```role``` or ```category```
            jpn: |-
              ソート項目 ```role``` ```category```のみ指定可
          example: role
          schema:
            enum:
              - role
              - category
            type: string
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort order.

              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順。

              * ```asc```：昇順
              * ```desc```：降順
          example: asc
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: |

            :::x-description-i18n:
            eng: |-
              > 📘 Info
              >
              > Only email is returned for profile when a user is being invited.
            jpn: |-
              > 📘 Info
              >
              > 招待中ユーザーの場合、profileはemailのみ返却されます。
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2GetCorporationCorporationIdGroupsGroupIdMembers
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_5
        - Corporation API
      security:
        - BearerAuth: []
    put:
      operationId: CorporationGroupMembersController_updateCorporationGroupMembers
      x-hidden-in: internal
      summary: Update Corporation Group Members
      description: |

        :::x-description-i18n:
        eng: |-
          * Update group members belonging to corporation of a specified ID

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              corporation.group.write
        jpn: |-
          * 指定したidの企業に所属するグループのメンバー情報を更新する。

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              corporation.group.write
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          example: cf221ab7-9272-48e9-b8ce-433397744185
          schema:
            format: uuid
            type: string
        - name: group_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID
          example: cf221ab7-9272-48e9-b8ce-433397744185
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PutCorporationsGroupsMembersBodyDto'
            examples:
              update corporation group members:
                value:
                  members:
                    - id: 84ef1b90-8e60-4d6d-8f50-16870d28d555
                      role: staff
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PutCorporationsGroupsMembers'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_5
      security:
        - BearerAuth: []
  /v2/corporations/{corporation_id}/invites:
    post:
      operationId: InvitesController_createCorporationInvite
      x-hidden-in: internal
      summary: Create Corporation Invite
      description: |-

        :::x-description-i18n:
        eng: |-
          * Invite existing user to corporation as ```guest```
          * Notification email will be sent to the invited user

          ### EXECUTION PERMISSION

            * The role of the participating company is more than ```manager```

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              corporation.write
        jpn: |-
          * 企業に既存ユーザーを```guest```として招待する
          * 招待されたユーザーには招待の通知メールが送付される

          ### EXECUTION PERMISSION
            * 所属/参加企業の role が ```manager```以上 であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              corporation.write

      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID(UUID format)
            jpn: |-
              企業ID(UUID)
          example: 77743f25-5362-4f09-b9ff-57e42031daee
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2PostCorporationsCorporationIdInvitesBodyDto
            examples:
              Create Corporation Invite:
                value:
                  email: taro.langlog@landlog.co.jp
                description: This is an example of creating corporation invite.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostCorporationsCorporationIdInvites'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_6
        - Corporation API
      security:
        - BearerAuth: []
    get:
      operationId: InvitesController_getCorporationInvite
      x-hidden-in: internal
      summary: List Corporation Invite
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a list of invitation information of users invited to corporation.

          ### EXECUTION PERMISSION

            * Being a member/participating company

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              corporation.read
        jpn: |-
          * 企業に招待したユーザーの招待情報一覧を取得する

          ### EXECUTION PERMISSION

            * 所属/参加企業であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              corporation.read

      parameters:
        - name: user_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              User ID(UUID format)
            jpn: |-
              ユーザーID(UUID)
          schema:
            format: uuid
            type: string
        - name: page
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of pages, 1 or more offset will be checked first
            jpn: |-
              ページネーション、1以上 ※offsetが設定されている場合、offsetが優先される
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Start position for retrieving information, 0 or more
            jpn: |-
              取得を開始する位置、0以上
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of returns per page, From 1 through 1000
            jpn: |-
              ページあたりの返却件数、1以上1000以下
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort direction, ```asc```: ascending order, ```desc```: descending order
            jpn: |-
              ソート順、```asc```：昇順、```desc```：降順
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: corporation_id
          required: true
          in: path
          example: 77743f25-5362-4f09-b9ff-57e42031daee
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID(UUID format)
            jpn: |-
              企業ID(UUID)
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetCorporationsCorporationIdInvites'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_6
      security:
        - BearerAuth: []
  /v2/corporations/{corporation_id}/invites/{invite_code}:
    patch:
      operationId: InvitesController_updateCorporationInvite
      x-internal: true
      summary: Update Corporation Invite
      description: |-

        :::x-description-i18n:
        eng: |-
          * Approve or decline invitations from companies

          ### EXECUTION PERMISSION

            * Invited (linked to the invitation code) User

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              corporation.write
        jpn: |-
          * 企業からの招待を承認、または否認をする

          ### EXECUTION PERMISSION

            * 招待されている（招待コードに紐づく） user であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              corporation.write

      parameters:
        - name: corporation_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID (UUID format)
            jpn: |-
              企業ID(UUID 形式)
          example: 7a0791a1-5919-4589-8dbc-9486b32d4b90
          schema:
            format: uuid
            type: string
        - name: invite_code
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Corporate invitation code
            jpn: |-
              企業招待code
          example: 5BfRAcYekCX
          schema:
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2PatchCorporationsCorporationIdInvitesBodyDto
            examples:
              Update Corporation Invite:
                value:
                  accept: true
                description: This is an example of updating corporation invite.
      responses:
        '200':
          description: OK
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_6
      security:
        - BearerAuth: []
  /v2/corporations/{corporation_id}/authentication_setting:
    get:
      operationId: AuthenticationSettingController_getCorporationAuthenticationSetting
      x-internal: true
      summary: Get Corporation Authentication Setting
      description: '- 企業に招待したユーザーの招待情報一覧を取得する'
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: 企業ID(UUID)
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2GetCorporationsCorporationIdAuthorizationSetting
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_7
        - Corporation API
      security:
        - BearerAuth: []
    patch:
      operationId: AuthenticationSettingController_updateCorporationAuthenticationSetting
      x-internal: true
      summary: Patch Corporation Authentication Setting
      description: '- 企業に招待したユーザーの招待情報一覧を更新する'
      parameters:
        - name: corporation_id
          required: true
          in: path
          description: 企業ID(UUID)
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2PatchCorporationsCorporationIdAuthenticationSettingBodyDto
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2CorporationsCorporationIdAuthenticationSetting
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_7
      security:
        - BearerAuth: []
  /v2/corporations/batches/pending/all:
    get:
      operationId: CorporationsBatchesController_getBatchesPendingList
      x-internal: true
      summary: Get a list pending of batch jobs
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a list of batch jobs waiting to be processed

          ### SUPPORTED APPLICATION TYPES
              Client

          ### REQUIRED SCOPES
              corporation.read.all
        jpn: |-
          * 処理待ちのバッチジョブのリストを取得する

          ### SUPPORTED APPLICATION TYPES
              Client

          ### REQUIRED SCOPES
              corporation.read.all

      parameters:
        - name: action
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Action type
            jpn: |-
              アクションの種類
          example: Delete
          schema:
            format: string
            enum:
              - Delete
              - Restore
            type: string
        - name: corporation_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          example: 1e92a521-8da3-41d2-aefa-0b1a0fa19a65
          schema:
            format: uuid
            type: string
        - name: page
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of pages, 1 or more

              ※```offset``` will be checked first
            jpn: |-
              ページネーション、1以上

              ※```offset```が設定されている場合、```offset```が優先される

          example: 1
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of items to be skipped, 0 or more
            jpn: |-
              取得を開始する位置、0以上

          example: 1
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of items to be included in the result, from 1 through 1000
            jpn: |-
              ページあたりの返却件数、1以上1000以下

          example: 1
          schema:
            minimum: 0
            maximum: 1000
            default: 100
            type: number
        - name: order_by
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Field to be sorted

              * ```action```: sorted by ```action``` field
              * ```created_at```: sorted by ```created_at``` field
            jpn: |-
              ソート項目

              * ```action```: ```action``` フィールドで並べ替え
              * ```created_at```: ```created_at``` フィールドで並べ替え

          example: action
          schema:
            enum:
              - action
              - created_at
            type: string
        - name: order
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Sort direction
              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順
              * ```asc```：昇順
              * ```desc```：降順

          example: asc
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetCorporationBatchesPending'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_8
        - Corporation API
      security:
        - BearerAuth: []
  /v2/corporations/batches/executed/all:
    get:
      operationId: CorporationsBatchesController_getBatchesExecutedList
      x-internal: true
      summary: Get a list of processed batch jobs
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a list of processed batch jobs

          ### SUPPORTED APPLICATION TYPES
              Client

          ### REQUIRED SCOPES
              corporation.read.all
        jpn: |-
          * 処理されたバッチジョブのリストを取得する

          ### SUPPORTED APPLICATION TYPES
              Client

          ### REQUIRED SCOPES
              corporation.read.all

      parameters:
        - name: action
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Action type
            jpn: |-
              アクションの種類
          example: Delete
          schema:
            format: string
            enum:
              - Delete
              - Restore
            type: string
        - name: corporation_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          example: 1e92a521-8da3-41d2-aefa-0b1a0fa19a65
          schema:
            format: uuid
            type: string
        - name: status
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Status of batch
            jpn: |-
              バッチのステータス
          example: Successful
          schema:
            format: string
            enum:
              - Successful
              - Failed
            type: string
        - name: page
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of pages, 1 or more

              ※```offset``` will be checked first
            jpn: |-
              ページネーション、1以上

              ※```offset```が設定されている場合、```offset```が優先される

          example: 1
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of items to be skipped, 0 or more
            jpn: |-
              取得を開始する位置、0以上

          example: 1
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of items to be included in the result, from 1 through 1000
            jpn: |-
              ページあたりの返却件数、1以上1000以下

          example: 1
          schema:
            minimum: 0
            maximum: 1000
            default: 100
            type: number
        - name: order_by
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Field to be sorted

              * ```action```: sorted by ```action``` field
              * ```performed_at```: sorted by ```performed_at``` field
            jpn: |-
              ソート項目

              * ```action```: ```action``` フィールドで並べ替え
              * ```performed_at```: ```performed_at``` フィールドで並べ替え

          example: action
          schema:
            enum:
              - action
              - performed_at
            type: string
        - name: order
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Sort direction
              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順
              * ```asc```：昇順
              * ```desc```：降順

          example: asc
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetCorporationBatchesExecuted'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_8
      security:
        - BearerAuth: []
  /v2/sites:
    get:
      operationId: SitesController_getSiteList
      x-hidden-in: internal
      summary: List Sites
      description: |

        :::x-description-i18n:
        eng: |-
          * Get a list of accessible sites for the user performing the operation
            * The site of the user's company
            * Sites of other companies in which the user participate

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              site.read
        jpn: |-
          * 操作を行っているユーザーのアクセス可能な現場一覧を取得する
            * 所属企業配下の現場
            * 自身の参加している現場

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              site.read
      parameters:
        - name: corporation_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID (UUID Format), Perfect match
            jpn: |-
              企業ID(UUID), 完全一致
          example: 9d5e2a6a-c7dc-4df4-808a-24161fd835b0
          schema:
            format: uuid
            type: string
        - name: member_only
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              On-site participation status
              * ```true```: participating
              * ```false```: not participating
            jpn: |-
              現場参加状態
              * ```true```: 参加状態
              * ```false```: 不参加状態
          example: 'true'
          schema:
            enum:
              - 'true'
              - 'false'
            type: string
        - name: name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Site name, Partial match on name Less than 255 characters
            jpn: |-
              現場名、部分一致, 255文字以下
          example: Site name
          schema:
            maxLength: 255
            type: string
        - name: status
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Status. Changes depending on the current date
              * If it is before the actual construction period (start date), it is ```waiting```
              * If it is after the actual construction period (start date), it is ```working```
              * If it is after the actual construction period (end date), it is ```completed```
            jpn: |-
              ステータス。現在日によって変化
              * 実績工期(開始日)より前なら ```waiting```
              * 実績工期(開始日)を過ぎていたら ```working```
              * 実績工期(終了日)を過ぎていたら ```completed```
          example: waiting
          schema:
            type: string
        - name: role
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Role in the site
              Role: ```site_manager```, ```superintendent```, ```site_worker``` or ```related_staff```. Separate items with a comma to specify multiple items
              * ```site_manager```: Site supervisor
              * ```superintendent```: Operation (Leader)
              * ```site_worker```: Operation (General)
              * ```related_staff```: Staff (Viewer)
            jpn: |-
              現場内での権限
              権限: ```site_manager```, ```superintendent```, ```site_worker```, ```related_staff```のいずれか。複数の場合はカンマ区切り
              * ```site_manager```: 現場監督
              * ```superintendent```: 作業員（リーダー）
              * ```site_worker```: 作業員（一般）
              * ```related_staff```: 関係者（閲覧者）
          example: site_manager,site_worker
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of page. 1 or more

              ※ If pass ```offset```, ```offset``` has priority
            jpn: |-
              ページネーション 1以上

              ※```offset```が設定されている場合、```offset```が優先される
          example: 1
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items to be skipped, 0 or more
            jpn: |-
              取得を開始する位置、0以上
          example: 1
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items to be included in the result, From 1 through 1000
            jpn: |-
              ページあたりの返却件数、1以上100以下
          example: '50'
          schema:
            minimum: 1
            maximum: 10000
            default: 100
            type: integer
        - name: order_by
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Field to be sorted, Only name can be specified, 1st key: status (in the order of working,waiting, and completed)
              * ```1st key```: status (in the order of working,waiting, and completed)
              * ```2nd key```: actual construction period (end date) in ascending order
              * ```3rd key```: internal management ID in ascending order
            jpn: |-
              ソート項目、name のみ指定可、
              * ```第1キー```: ステータス(working, waiting, completedの順)
              * ```第2キー```: 実績工期(終了日)の昇順
              * ```第3キー```: 内部管理IDの昇順
          example: name
          schema:
            default: name
            type: string
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort order

              * ```asc```: Ascending
              * ```desc```: Descending
            jpn: |-
              ソート順

              * ```asc```：昇順
              * ```desc```：降順
          example: asc
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetSites'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_9
        - Site API
      security:
        - BearerAuth: []
    post:
      operationId: SitesController_createSite
      x-internal: true
      summary: Create Site
      description: |

        :::x-description-i18n:
        eng: |-
          * Create Site

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.write.internal
        jpn: |-
          * 現場を作成する

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.write.internal
      parameters:
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostSitesBodyDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostSitesSite'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_9
      security:
        - BearerAuth: []
  /v2/sites/all:
    get:
      operationId: SitesController_getSiteListAll
      x-internal: true
      summary: List Sites All
      description: |

        :::x-description-i18n:
        eng: |-
          * Get a list of accessible sites for the user performing the operation
            * The site of the user's company
            * Sites of other companies in which the user participate

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              site.read.all
        jpn: |-
          * 操作を行っているユーザーのアクセス可能な現場一覧を取得する
            * 所属企業配下の現場
            * 自身の参加している現場

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              site.read.all
      parameters:
        - name: corporation_id
          required: false
          in: query
          description: 企業ID(UUID)
          schema:
            format: uuid
            type: string
        - name: name
          required: false
          in: query
          description: 現場名、部分一致, 255文字以下
          schema:
            maxLength: 255
            type: string
        - name: status
          required: false
          in: query
          description: 現場のステータス、waiting, working, completed のいずれか。 複数の場合はカンマ区切り
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: ページネーション、1以上 ※offsetが設定されている場合、offsetが優先される
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: 取得を開始する位置
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: ページあたりの返却件数
          schema:
            minimum: 1
            maximum: 10000
            default: 100
            type: integer
        - name: order_by
          required: false
          in: query
          description: ソート項目、name のみ指定可
          schema:
            default: name
            type: string
        - name: order
          required: false
          in: query
          description: ソート順
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetSites'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_9
      security:
        - BearerAuth: []
  /v2/sites/nearby:
    get:
      operationId: SitesController_getSiteListNearby
      x-internal: true
      summary: List Site Nearby
      description: |

        :::x-description-i18n:
        eng: |-
          * Get a list of your own accessible sites within a 10km radius of the specified latitude/longitude in descending order of proximity

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.nearby.internal
        jpn: |-
          * 指定した緯度/経度の半径10km圏内に存在する自身のアクセス可能な現場の一覧を近い順に取得する

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.nearby.internal
      parameters:
        - name: latitude
          required: true
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Latitude
            jpn: |-
              緯度
          example: '35.66689081094339'
          schema:
            maxLength: 20
            type: string
        - name: longitude
          required: true
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Longitude
            jpn: |-
              経度
          example: '139.76969528307006'
          schema:
            maxLength: 20
            type: string
        - name: exclusion_site_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID's to be excluded from search targets
            jpn: |-
              検索対象から除外する現場ID
          example: 60fa567c-3e3a-48d2-80e7-fac2c322a340
          schema:
            format: uuid
            type: string
        - name: page
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Pagination, 1 or more. If offset is set, offset takes precedence
            jpn: |-
              ページネーション、1以上 ※offsetが設定されている場合、offsetが優先される
          example: 1
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Position to start acquisition, 0 or more
            jpn: |-
              取得を開始する位置、0以上
          example: '0'
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of returns per page, 1 to 100
            jpn: |-
              ページあたりの返却件数、1以上100以下
          example: '100'
          schema:
            minimum: 1
            maximum: 100
            default: 100
            type: number
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetSitesNearby'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_9
      security:
        - BearerAuth: []
  /v2/sites/{site_id}:
    get:
      operationId: SitesController_getSitesBySiteId
      x-hidden-in: internal
      summary: Read Site
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get the site with the specified id

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              site.read
        jpn: |-
          * 指定したidの現場を取得する

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              site.read

      parameters:
        - name: site_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetSitesSiteId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_9
      security:
        - BearerAuth: []
    delete:
      operationId: SitesController_deleteSitesBySiteId
      x-internal: true
      summary: Delete Site
      description: |-

        :::x-description-i18n:
        eng: |-
          * Delete the site information with the specified ID.

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.write.internal
        jpn: |-
          * 指定したidの現場情報を削除する

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.write.internal

      parameters:
        - name: site_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          example: cc5d6045-75e0-4afc-bd08-9959d4e46aee
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_9
      security:
        - BearerAuth: []
    patch:
      operationId: SitesController_updateSite
      x-internal: true
      summary: Update Site
      description: |-

        :::x-description-i18n:
        eng: |-
          * Update the site with the specified ID.

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.write.internal
        jpn: |-
          * 指定したidの現場を更新する

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.write.internal

      parameters:
        - name: site_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          example: cc5d6045-75e0-4afc-bd08-9959d4e46aee
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchSitesSiteIdBodyDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PatchSitesSiteId'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_9
      security:
        - BearerAuth: []
  /v2/sites/{site_id}/all:
    get:
      operationId: SitesController_getSitesBySiteIdAll
      x-internal: true
      summary: Read Site All
      description: |

        :::x-description-i18n:
        eng: |-
          * Get the site with the specified ID

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              site.read.all
        jpn: |-
          * 指定したidの現場を取得する

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              site.read.all
      parameters:
        - name: site_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetSitesSiteId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_9
      security:
        - BearerAuth: []
  /v2/sites/{site_id}/members:
    get:
      operationId: MembersController_getMembers
      x-hidden-in: internal
      summary: List Site Members
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a list of users participating in the site

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              site.member.read
        jpn: |-
          * 現場の参加者一覧を取得する

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              site.member.read

      parameters:
        - name: site_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID

          example: d6bc8b2a-be09-4dd3-a55a-d285614d3062
          schema:
            type: string
        - name: user_id
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID

          example: 5f83f45a-68f9-4706-bbc0-8a1c6433c005
          schema:
            format: uuid
            type: string
        - name: name
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Site member name, partial match
            jpn: |-
              現場メンバー名、部分一致

          example: ランドログ23 太郎
          schema:
            maxLength: 255
            type: string
        - name: email
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Email address, partial match
            jpn: |-
              メールアドレス、部分一致

          example: '@landlog.co.jp'
          schema:
            maxLength: 255
            type: string
        - name: corporation
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Company name, partinal match
            jpn: |-
              企業名、部分一致

          example: 株式会社ランドログ005
          schema:
            maxLength: 255
            type: string
        - name: role
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Role
              * ```site_manager```: Site supervisor
              * ```superintendent```: Operation (Leader)
              * ```site_worker```: Operation (General)
              * ```related_staff```: Staff (Viewer)
            jpn: |-
              権限
              * ```site_manager```: 現場監督
              * ```superintendent```: 作業員（リーダー）
              * ```site_worker```: 作業員（一般）
              * ```related_staff```: 関係者（閲覧者）

          example: site_worker
          schema:
            enum:
              - site_manager
              - superintendent
              - site_worker
              - related_staff
            type: string
        - name: tag
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Member tags
            jpn: |-
              メンバーのタグ

          example: テスト元請23
          schema:
            type: string
        - name: includes
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Additional information to include in a response, only ```profile``` (user-specific information) can be specified
            jpn: |-
              レスポンスに追加で含める情報、```profile```(ユーザー固有情報)のみ指定可能

          example: profile
          schema:
            enum:
              - profile
            type: string
        - name: page
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of pages, 1 or more

              ※If 1 or more ```offset``` are set, the ```offset``` takes precedence
            jpn: |-
              ページネーション、1以上

              ※```offset```が設定されている場合、```offset```が優先される

          example: 1
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of items to be skipped
            jpn: |-
              取得を開始する位置

          example: 0
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of items to be included in the result
            jpn: |-
              ページあたりの返却件数

          example: 5
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: order_by
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Sort item, ```name```, ```corporation``` only can be specified
            jpn: |-
              ソート項目、```name```, ```corporation```のみ指定可

          example: name
          schema:
            default: createAt
            enum:
              - name
              - corporation
            type: string
        - name: order
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Sort order
              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順
              * ```asc```：昇順
              * ```desc```：降順

          example: asc
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: invited
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Invitation flag, ```true``` when inviting

            jpn: |-
              招待中フラグ、招待中のときは```true```

          example: true
          schema:
            type: boolean
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetSitesSiteIdMembers'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_10
        - Site API
      security:
        - BearerAuth: []
    delete:
      operationId: MembersController_deleteMembers
      x-hidden-in: internal
      summary: Bulk Delete Site Members
      description: |-

        :::x-description-i18n:
        eng: |-
          * Remove specified site members.

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              site.member.write
        jpn: |-
          * 指定した現場メンバーを解除する

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              site.member.write

      parameters:
        - name: site_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          example: cc5d6045-75e0-4afc-bd08-9959d4e46aee
          schema:
            format: uuid
            type: string
        - name: members
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the site member to be removed
            jpn: |-
              解除する現場メンバーのID
          example:
            - a3lgakee-4c2b-4932-8a40-8210fc0637bf
            - 520f84c3-5aad-42c2-b68b-29e3fe18b8ff
          schema:
            title: members
            format: uuid
            type: array
            items:
              type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteV2SitesSiteIdMembersBodyDto'
      responses:
        '204':
          description: OK
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_10
      security:
        - BearerAuth: []
  /v2/sites/{site_id}/members/all:
    get:
      operationId: MembersController_getMembersAll
      x-internal: true
      summary: List Site Members All
      description: |

        :::x-description-i18n:
        eng: |-
          * Get a list of users participating in the site

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              site.member.read.all
        jpn: |-
          * 現場の参加者一覧を取得する

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              site.member.read.all
      parameters:
        - name: site_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID

          example: d6bc8b2a-be09-4dd3-a55a-d285614d3062
          schema:
            type: string
        - name: user_id
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID

          example: 5f83f45a-68f9-4706-bbc0-8a1c6433c005
          schema:
            format: uuid
            type: string
        - name: name
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Site member name, partial match
            jpn: |-
              現場メンバー名、部分一致

          example: ランドログ23 太郎
          schema:
            maxLength: 255
            type: string
        - name: email
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Email address, partial match
            jpn: |-
              メールアドレス、部分一致

          example: '@landlog.co.jp'
          schema:
            maxLength: 255
            type: string
        - name: corporation
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Company name, partinal match
            jpn: |-
              企業名、部分一致

          example: 株式会社ランドログ005
          schema:
            maxLength: 255
            type: string
        - name: role
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Role
              * ```site_manager```: Site supervisor
              * ```superintendent```: Operation (Leader)
              * ```site_worker```: Operation (General)
              * ```related_staff```: Staff (Viewer)
            jpn: |-
              権限
              * ```site_manager```: 現場監督
              * ```superintendent```: 作業員（リーダー）
              * ```site_worker```: 作業員（一般）
              * ```related_staff```: 関係者（閲覧者）

          example: site_worker
          schema:
            enum:
              - site_manager
              - superintendent
              - site_worker
              - related_staff
            type: string
        - name: tag
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Member tags
            jpn: |-
              メンバーのタグ

          example: テスト元請23
          schema:
            type: string
        - name: includes
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Additional information to include in a response, only ```profile``` (user-specific information) can be specified
            jpn: |-
              レスポンスに追加で含める情報、```profile```(ユーザー固有情報)のみ指定可能

          example: profile
          schema:
            enum:
              - profile
            type: string
        - name: page
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of pages, 1 or more

              ※If 1 or more ```offset``` are set, the ```offset``` takes precedence
            jpn: |-
              ページネーション、1以上

              ※```offset```が設定されている場合、```offset```が優先される

          example: 1
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of items to be skipped
            jpn: |-
              取得を開始する位置

          example: 0
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of items to be included in the result
            jpn: |-
              ページあたりの返却件数

          example: 5
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: order_by
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Sort item, ```name```, ```corporation``` only can be specified
            jpn: |-
              ソート項目、```name```, ```corporation```のみ指定可

          example: name
          schema:
            default: createAt
            enum:
              - name
              - corporation
            type: string
        - name: order
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Sort order
              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順
              * ```asc```：昇順
              * ```desc```：降順

          example: asc
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: invited
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Invitation flag, ```true``` when inviting

            jpn: |-
              招待中フラグ、招待中のときは```true```

          example: true
          schema:
            type: boolean
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetSitesSiteIdMembers'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_10
      security:
        - BearerAuth: []
  /v2/sites/{site_id}/members/{member_id}:
    get:
      operationId: MembersController_getMembersByMemberId
      x-hidden-in: internal
      summary: Read Site Member
      description: |

        :::x-description-i18n:
        eng: |-
          * Get user information participating in the site.

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              site.member.read
        jpn: |-
          * 現場の参加者一覧を取得する。

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              site.member.read
      parameters:
        - name: site_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            type: string
        - name: member_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Site member user ID
            jpn: |-
              現場メンバーのユーザーID
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetSitesSiteIdMembersMemberId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_10
      security:
        - BearerAuth: []
    patch:
      operationId: MembersController_updateMembersByMemberId
      x-hidden-in: internal
      summary: Update Site Member
      description: |-

        :::x-description-i18n:
        eng: |-
          * Update members participating in the site with idempotence

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              site.member.write
        jpn: |-
          * 現場に参加するメンバーを冪等に更新する

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              site.member.write

      parameters:
        - name: site_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          example: 5308c5db-d9b0-4b71-9951-684bc462a21e
          schema:
            type: string
        - name: member_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              現場メンバーのID
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchSitesSiteIdMembersMemberIdBodyDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PatchSitesSiteIdMembersMemberId'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_10
      security:
        - BearerAuth: []
  /v2/sites/{site_id}/invites:
    post:
      operationId: InvitesController_createSiteInvite
      x-hidden-in: internal
      summary: Create Site Invite
      description: |

        :::x-description-i18n:
        eng: |-
          * Invite users to the site
          * If you invite a user outside your company, an invitation email will be sent to the invited user

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              site.member.write
        jpn: |-
          * 現場にユーザーを招待する
          * 企業外のユーザーを招待した場合、招待されたユーザーには招待メールが送信される

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              site.member.write
      parameters:
        - name: site_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          example: 00000000-0000-0000-0000-000000000000
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostSitesSiteIdInvitesBodyDto'
            examples:
              invites user:
                value:
                  email: user@example.com
                  role: site_manager
                  tag: tag
                  signup_url: https://signup.landlog.info
                  invite_url: >-
                    https://gemba-manager.landlog.info/gemba/96b31b14-7cfe-443c-836c-78487784c731/invites/{:invite_code}
                description: |

                  :::x-description-i18n:
                  eng: |-
                    This is invites user Example
                  jpn: |-
                    これはユーザー招待の例です
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostSitesSiteIdInvites'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_11
        - Site API
    get:
      operationId: InvitesController_getListSitesInvites
      x-hidden-in: internal
      summary: List Sites Invites
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a list of invitation information for users invited to the site

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              site.member.read
        jpn: |-
          * 現場に招待したユーザーの招待情報一覧を取得する

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              site.member.read

      parameters:
        - name: site_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          example: 72771e6a-6f5e-4de4-a5b9-1266c4197811
          schema:
            format: uuid
            type: string
        - name: site_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          example: 72771e6a-6f5e-4de4-a5b9-1266c4197811
          schema:
            format: uuid
            type: string
        - name: site_member_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Site member ID
            jpn: |-
              現場メンバーID
          example: 194b1cf2-c95b-4713-942c-fb83c248bc4f
          schema:
            format: uuid
            type: string
        - name: user_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID
          example: a169451c-8525-4352-b8ca-070dd449a1a5
          schema:
            format: uuid
            type: string
        - name: inviteStatus
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation status ```accept```, ```pending```, or ```expired```. Separate items with a comma to specify multiple items
            jpn: |-
              招待ステータス: ```accept```(承認済み), ```pending```(保留中), ```expired```(期限切れ) のいずれか。複数の場合はカンマ区切り
          example: accept,pending
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of pages. If 1 or more is specified for offset, the offset takes precedence
            jpn: |-
              ページネーション、1以上 offsetが設定されている場合、offsetが優先される
          example: 1
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items to be skipped, 0 or more
            jpn: |-
              取得を開始する位置、0以上
          example: 1
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items to be included in the result, from 1 through 100
            jpn: |-
              ページあたりの返却件数、1以上100以下
          example: 100
          schema:
            minimum: 1
            maximum: 100
            default: 100
            type: integer
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort direction
              * ```asc```: ascending order
              * ```desc```: descending order
            jpn: |-
              ソート順
              * ```asc```: 昇順
              * ```desc```: 降順
          example: asc
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetSitesSiteIdInvites'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_11
      security:
        - BearerAuth: []
  /v2/sites/{site_id}/invites/{invite_code}:
    get:
      operationId: InvitesController_readSiteInvite
      x-internal: true
      summary: Read Site Invite
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get details of specified invitation information

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.member.read_internal
        jpn: |-
          * 指定した招待情報の詳細を取得する

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.member.read_internal

      parameters:
        - name: site_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            format: uuid
            type: string
        - name: invite_code
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation code
            jpn: |-
              招待コード
          example: 5BfRAcYekCX
          schema:
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetSitesSiteIdInvitesInviteCode'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_11
      security:
        - BearerAuth: []
    patch:
      operationId: InvitesController_updateSiteInvite
      x-internal: true
      summary: Update Site Invite
      description: |-

        :::x-description-i18n:
        eng: |-
          * Accept or decline invitations from the field.
          * An acceptance or decline email will be sent to the invited user.

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.write.internal
        jpn: |-
          * 現場からの招待を承認、または拒否をする
          * 招待したユーザーには承諾メール、または辞退メールが送信される

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.write.internal

      parameters:
        - name: site_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          example: cc5d6045-75e0-4afc-bd08-9959d4e46aee
          schema:
            format: uuid
            type: string
        - name: invite_code
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Invite code
            jpn: |-
              招待コード
          example: z63jwDp9u0c
          schema:
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchSitesSiteIdInvitesInviteCodeBodyDto'
      responses:
        '200':
          description: OK
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_11
      security:
        - BearerAuth: []
  /v2/sites/{site_id}/invites/{invite_code}/all:
    get:
      operationId: InvitesController_readSiteInviteAll
      x-internal: true
      summary: Read Site Invite All
      description: |

        :::x-description-i18n:
        eng: |-
          * Get details of specified invitation information

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              site.member.read_internal.all
        jpn: |-
          *  指定した招待情報の詳細を取得する

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              site.member.read_internal.all
      parameters:
        - name: site_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            format: uuid
            type: string
        - name: invite_code
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation code
            jpn: |-
              招待コード
          example: 5BfRAcYekCX
          schema:
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetSitesSiteIdInvitesInviteCode'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_11
      security:
        - BearerAuth: []
  /v2/sites/{site_id}/invites/{invite_id}/resend:
    post:
      operationId: ResendController_resendSiteInvite
      x-hidden-in: internal
      summary: Resend Site Invite
      description: |

        :::x-description-i18n:
        eng: |-
          * Send the invitation email again to the invited user
          * Once you have joined, the invitation record will be deleted and you will not be able to resend the invitation email
          * Internally the invitation code expiration date is reset

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              site.member.write

        jpn: |-
          * 招待したユーザーに招待メールを再送信する
          * 参加完了すると招待レコードは削除される為、再送信はできなくなる
          * 内部的には招待コードの有効期限がリセットされる

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              site.member.write
      parameters:
        - name: site_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          example: 72771e6a-6f5e-4de4-a5b9-1266c4197811
          schema:
            format: uuid
            type: string
        - name: invite_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              invitation ID
            jpn: |-
              招待ID
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostSitesSiteIdInvitesInviteIdResend'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Site API
      security:
        - BearerAuth: []
  /v2/sites/{site_id}/transfers:
    get:
      operationId: SiteTransfersController_listSiteTransfers
      x-internal: true
      summary: List Site Transfer
      description: |

        :::x-description-i18n:
        eng: |-
          * Get a list of site transfer information.

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.read_internal
        jpn: |-
          * 指定した現場移管情報の一覧を取得する

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.read_internal
      parameters:
        - name: site_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          example: 00000000-0000-0000-0000-000000000000
          schema:
            format: uuid
            type: string
        - name: active
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Whether the transfer information is active or not
              * ```true```: active
              * ```false```: inactive
            jpn: |-
              移管情報の有効/無効
              * ```true```: 有効
              * ```false```: 無効
          example: 'true'
          schema:
            type: boolean
        - name: page
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Page number, 1 or more
              * If offset is set, offset is prioritized
            jpn: |-
              ページネーション、1以上
              * offsetが設定されている場合、offsetが優先される
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Start position of the acquisition, 0 or more
            jpn: |-
              取得を開始する位置、0以上
          example: '0'
          schema:
            minimum: 0
            type: number
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of returns per page
            jpn: |-
              ページあたりの返却件数
          example: '99'
          schema:
            minimum: 1
            maximum: 100
            default: 100
            type: number
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetSitesSiteIdTransfers'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_12
        - Site API
      security:
        - BearerAuth: []
    post:
      operationId: SiteTransfersController_createSiteTransfers
      x-internal: true
      summary: Create Site Transfer
      description: |

        :::x-description-i18n:
        eng: |-
          * Create Site Transfer.

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.write.internal
        jpn: |-
          * 移管情報を作成する

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.write.internal
      parameters:
        - name: site_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              サイトID
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostSitesSiteIdTransfersBodyDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostSitesSiteIdTransfers'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_12
      security:
        - BearerAuth: []
  /v2/sites/{site_id}/transfers/{transfer_id}:
    get:
      operationId: SiteTransfersController_readSiteTransfers
      x-internal: true
      summary: Read Site Transfer
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get details of specified site transfer information.

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.read_internal
        jpn: |-
          * 指定した現場移管情報の詳細を取得する

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.read_internal

      parameters:
        - name: site_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          example: cc5d6045-75e0-4afc-bd08-9959d4e46aee
          schema:
            format: uuid
            type: string
        - name: transfer_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer ID
            jpn: |-
              移管ID
          example: b368097c-24ca-4339-8a7d-d3ee284a4807
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetSitesSiteIdTransferTransfersId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_12
      security:
        - BearerAuth: []
    patch:
      operationId: SiteTransfersController_updateSiteTransfers
      x-internal: true
      summary: Update Site Transfer
      description: |-

        :::x-description-i18n:
        eng: |-
          * Accept or decline the transfer request.

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.write.internal
        jpn: |-
          * 移管リクエストを承諾、または拒否をする

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              site.write.internal

      parameters:
        - name: site_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          example: cc5d6045-75e0-4afc-bd08-9959d4e46aee
          schema:
            format: uuid
            type: string
        - name: transfer_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer ID
            jpn: |-
              移管ID
          example: b368097c-24ca-4339-8a7d-d3ee284a4807
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2PatchSitesSiteIdTransfersTransferIdBodyDto
      responses:
        '200':
          description: OK
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_12
      security:
        - BearerAuth: []
    delete:
      operationId: SiteTransfersController_deleteTransfer
      x-internal: true
      summary: Delete Site Transfer
      description: |-

        :::x-description-i18n:
        eng: |-
          * Delete transfer information for the specified ID.

          ### SUPPORTED APPLICATION TYPES
              Web

          ### REQUIRED SCOPES
              site.write.internal
        jpn: |-
          * 指定した現場移管情報の一覧を取得する

          ### SUPPORTED APPLICATION TYPES
              Web

          ### REQUIRED SCOPES
              site.write.internal

      parameters:
        - name: site_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          example: cc5d6045-75e0-4afc-bd08-9959d4e46aee
          schema:
            format: uuid
            type: string
        - name: transfer_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer ID
            jpn: |-
              移管ID
          example: b368097c-24ca-4339-8a7d-d3ee284a4807
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_12
      security:
        - BearerAuth: []
  /v2/users/{user_id}/invites:
    get:
      operationId: InvitesController_getListUsersInvites
      x-internal: true
      summary: List User Invite
      description: |-

        :::x-description-i18n:
        eng: |-
          * Obtain invitation information for companies and groups that have received invitations

          ### SUPPORTED APPLICATION TYPES
              Web, Client
          ### REQUIRED SCOPES
              user.read
        jpn: |-
          * 招待を受けている企業、グループの招待情報を取得

          ### SUPPORTED APPLICATION TYPES
              Web, クライアント
          ### REQUIRED SCOPES
              user.read

      parameters:
        - name: user_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID
          example: 302bab69-11fb-ce51-2588-260d703ee168
          schema:
            format: uuid
            type: string
        - name: invite_code
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation code
            jpn: |-
              招待コード
          example: oaeXHabc001
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Pagination (1 or more)
              * If ```offset``` is set, ```offset``` takes precedence
            jpn: |-
              ページネーション (1以上)
              * ```offset```が設定されている場合、```offset```が優先される
          example: 1
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Position to start acquisition (0 or more)
            jpn: |-
              取得を開始する位置 (0以上)
          example: '0'
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of returns per page (1 or more)
            jpn: |-
              ページあたりの返却件数 (1以上)
          example: 1
          schema:
            minimum: 1
            default: 100
            type: integer
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort order
              * ```asc``` : Ascending order
              * ```desc``` : Descending order
            jpn: |-
              ソート順
              * ```asc``` : 昇順
              * ```desc``` : 降順
          example: asc
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetUsersUserIdInvites'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Account API
      security:
        - BearerAuth: []
  /v2/me:
    get:
      operationId: MeController_getMe
      x-hidden-in: internal
      summary: Get My Profile
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a profile of user who is currently logged in

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              user.profile
        jpn: |-
          * ログイン中のユーザープロフィールおよび所属する企業、参加するグループの一覧を取得する

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              user.profile

      parameters:
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetMyProfile'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Account API
      security:
        - BearerAuth: []
  /v2/me/corporation:
    get:
      operationId: CorporationController_getMeCorporation
      x-hidden-in: internal
      summary: Get My Corporation
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a list of Corportaions which User belongs to.

          > ℹ️ Note
          >
          > Same as in the case when using ```GET /v2/corporations/:id``` to retrieve a user's corporation information. The status code 404 is returned if the user does not belong to a corporation.

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              user.read
        jpn: |-
          * ログイン中のユーザーが所属している企業の情報を取得する

          > ℹ️ Note
          >
          > ```GET /v2/corporations/:id```で自分が所属する企業の情報を取得する場合と同じです。企業に所属していない場合はステータスコード 404 が返却されます。

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              user.read

      parameters:
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetMeCorporation'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_13
        - Corporation API
      security:
        - BearerAuth: []
  /v2/me/corporation/filesize:
    get:
      operationId: CorporationController_getMeCorporationFilesize
      summary: Read My Corporation Filesize
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get the file size of Corportaions which User belongs to.

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              corporation.read.filesize
        jpn: |-
          * ユーザーが所属している企業のファイルサイズを取得します。

          ### SUPPORTED APPLICATION TYPES
              Web
          ### REQUIRED SCOPES
              corporation.read.filesize

      parameters:
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetMeCorporationFileSizeEntity'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_13
      security:
        - BearerAuth: []
  /v2/me/authentication_policy:
    get:
      operationId: AuthenticationPolicyController_getAuthenticationPolicy
      x-internal: true
      summary: Read Authentication Policy
      description: 自身の認証ポリシー設定情報を取得する
      parameters:
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetMyAuthenticationPolicy'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Authentication Policy API
      security:
        - BearerAuth: []
  /v2/me/terms_agreements:
    get:
      operationId: TermsAgreementsController_getTermsAgreements
      x-internal: true
      summary: List TermsAgreement
      description: ログイン中のユーザーの同意済規約情報を一覧取得
      parameters:
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetMeTermsAgreements'
        '400':
          description: invalid_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Account TermsAgreement Operations
      security:
        - BearerAuth: []
  /v2/licenses/me:
    get:
      operationId: MeController_getLicensesMe
      x-hidden-in: internal
      summary: List User's License
      description: |

        :::x-description-i18n:
        eng: |-
          * Obtaining information related to unexpired licenses linked to the client ID and user ID included in the access token.

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              license.read

        jpn: |-
          * アクセストークンに含まれるクライアントIDとユーザーIDに紐づく期限切れしていないライセンスに関連する情報の取得。

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              license.read
      parameters:
        - name: status
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              subscription status can be filtered by:
              * ```active```: valid data
              * ```inactive```: invalid data
              * ```suspend```: temporary data
              * ```all```: all status
            jpn: |-
              サブスクリプションのステータスを以下で絞り込み可能
              * ```active```: 有効なデータ
              * ```inactive```: 無効なデータ
              * ```suspend```: 一時停止なデータ
              * ```all```: 全てのステータス
          schema:
            default: active
            enum:
              - active
              - inactive
              - suspend
              - all
            type: string
        - name: plan_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              If multiple specifications are specified, separate them with commas (OR search)
            jpn: |-
              複数指定する場合はカンマ区切りで指定 (OR検索)
          schema:
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetLicensesMe'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_14
        - License API
      security:
        - BearerAuth: []
  /v2/licenses/me/all:
    get:
      operationId: MeController_getLicensesMeAll
      x-internal: true
      summary: List User's All License
      description: |

        :::x-description-i18n:
        eng: |-
          * Obtain information related to all unexpired licenses associated with the user ID included in the access token

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              license.read_internal
        jpn: |-
          * アクセストークンに含まれるユーザーIDに紐づく期限切れしていない全ライセンスに関連する情報の取得

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              license.read_internal
      parameters:
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetLicensesMeAll'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_14
      security:
        - BearerAuth: []
  /v2/licenses:
    get:
      operationId: LicensesController_getLicenses
      x-internal: true
      summary: List Subject's Licenses
      description: |

        :::x-description-i18n:
        eng: |-
          * License tied to subject

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client

          ### REQUIRED SCOPES
              license.read_internal

        jpn: |-
          * 主体に紐付くライセンス

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント

          ### REQUIRED SCOPES
              license.read_internal
      parameters:
        - name: subject_type
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              License type
              * ```Corporation```: Company
              * ```User```: User
              * ```Device```: Device
            jpn: |-
              ライセンス種別
              * ```Corporation```: 企業
              * ```User```: ユーザー
              * ```Device```: デバイス
          schema:
            type: string
        - name: subject_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Identifier for license assignment

              UUID of ```Corporation``` or ```User``` or ```Device```
            jpn: |-
              ライセンス割当対象の識別子

              ```Corporation```または```User```または```Device```のUUID
          schema:
            format: uuid
            type: string
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Position to start acquisition, 0 or more
            jpn: |-
              取得を開始する位置、0以上
          schema:
            type: number
        - name: page
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Pagination, 1 or more

              *If ```offset``` is set, ```offset``` takes precedence
            jpn: |-
              ページネーション、1以上

              ※```offset```が設定されている場合、```offset```が優先される
          schema:
            type: number
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of returns per page, 1 to 1000
            jpn: |-
              １ページあたりの返却件数、1以上1000以下
          schema:
            type: number
        - name: order_by
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort item. Only ```issued_at``` and ```expires_at``` can be specified
            jpn: |-
              ソート項目、```issued_at```,```expires_at```のみ指定可
          schema:
            type: string
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort order

              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順

              * ```asc```：昇順
              * ```desc```：降順
          schema:
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetLicenses'
        '400':
          description: invalid_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - License API
      security:
        - BearerAuth: []
  /v2/resource_owners:
    get:
      operationId: ResourceOwnersController_getResourceOwnerList
      x-hidden-in: internal
      summary: List Resource Owner
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a list of resource owners associated with the logged in user

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              resource_owner.read
        jpn: |-
          * ログイン中のユーザーと紐づくリソースオーナーの一覧を取得

          ### SUPPORTED APPLICATION TYPES
            Web, ネイティブ

          ### REQUIRED SCOPES
              resource_owner.read

      parameters:
        - name: group_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              UUID of ```Group```, ```Corporation``` or ```Site```
              * NULL can be specified
            jpn: |-
              グループID ```Group```、```Corporation```、```Site```のいずれかのUUID
              * NULL指定可
          example: c8a17724-caeb-4233-b8d8-ba38690a113d
          schema:
            nullable: true
            type: string
        - name: user_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
              * NULL can be specified
            jpn: |-
              ユーザーID、UUID形式
              * NULL指定可
          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            nullable: true
            type: string
        - name: type
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Options, resource owner type ```Group```, ```Corporation```, ```User```, or ```Site```
            jpn: |-
              オプション、リソースオーナー種別. ```Group```, ```Corporation```, ```User```, ```Site```のいずれか
          example: Group
          schema:
            enum:
              - Group
              - Corporation
              - User
              - Site
            type: string
        - name: page
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Pagination, 1 or more
              * If there is no limit, the page will be ignored
              * If offset is set, offset will be given priority
            jpn: |-
              ページネーション、1以上
              * limitがない場合は、pageが無視される
              * offsetが設定されている場合、offsetが優先される'
          example: 1
          schema:
            minimum: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Position to start acquisition, 0 or more
            jpn: |-
              取得を開始する位置、0以上
          example: 1
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of returns per page, 1 or more and 1000 or less
            jpn: |-
              ページあたりの返却件数、1以上、1000以下
          example: 100
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: order_by
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Only the sort item ```display_name``` can be specified. Default value is ```created_at```
            jpn: |-
              ソート項目、```display_name```のみ指定可。Default値は```created_at```
          example: display_name
          schema:
            enum:
              - display_name
            type: string
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort order

              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順

              * ```asc```：昇順
              * ```desc```：降順
          example: asc
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetResourceOwners'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_15
        - Resource Owner API
      security:
        - BearerAuth: []
  /v2/resource_owners/search:
    get:
      operationId: ResourceOwnersController_getResourceOwnersSearch
      x-internal: true
      summary: Get Resource Owners Search
      description: |

        :::x-description-i18n:
        eng: |-
          * Public API's List targets the user context, while Search allows searches from all Resource Owners.
          * You can get a list of Resource Owners owned by users and groups associated with users.
          * By narrowing down by target_user & owner_id, you can determine whether the relationship between the user and the Resource Owner is correct.

          ### SUPPORTED APPLICATION TYPES
            > ℹ️ Note
            >
            > Due to IP access restrictions, advance application is required in order to use it. Because it is for internal access, there is no need to specify an access token.

        jpn: |-
          * Public API の List がユーザーコンテキスト対象なのに対して、Search はすべての Resource Owner から検索が可能
          * ユーザーおよびユーザーに紐づくグループが保有する Resource Owner 一覧が得られる
          * target_user & owner_id で絞り込むと、結果的にそのユーザーとそのResource Ownerの関係性が正しいものかの判定ができる

          ### SUPPORTED APPLICATION TYPES
            > ℹ️ Note
            >
            > IPアクセス制限があるため、利用するためには事前申請が必要です 内部アクセス用のため、アクセストークンの指定は不要
      parameters:
        - name: target_user
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              User ID (If specified, the group to which the user belongs will also be narrowed down)
            jpn: |-
              ユーザーID(指定された場合ユーザーの所属するグループも絞り込み対象とする)
          example: d7ca2a48-4c2b-4932-8a40-8210fc0637ba
          schema:
            format: uuid
            type: string
        - name: owner_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Owner ID
            jpn: |-
              オーナーID
          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            format: uuid
            type: string
        - name: group_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              UUID of ```Group```, ```Corporation``` or ```Site```
              * NULL can be specified
            jpn: |-
              グループID ```Group```、```Corporation```、```Site```のいずれかのUUID
              * NULL指定可
          example: c8a17724-caeb-4233-b8d8-ba38690a113d
          schema:
            nullable: true
            type: string
        - name: user_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
              * NULL can be specified
            jpn: |-
              ユーザーID、UUID形式
              * NULL指定可
          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            format: uuid
            nullable: true
            type: string
        - name: type
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Options, resource owner type
            jpn: |-
              オプション、リソースオーナー種別
          example: Group
          schema:
            enum:
              - Group
              - Corporation
              - User
              - Site
            type: string
        - name: page
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Pagination, 1 or more
              * If there is no limit, the page will be ignored
              * If offset is set, offset will be given priority
            jpn: |-
              ページネーション、1以上
              * limitがない場合は、pageが無視される
              * offsetが設定されている場合、offsetが優先される'
          example: 1
          schema:
            minimum: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Position to start acquisition, 0 or more
              * If ```limit``` is not present, ```offset``` will be ignored
            jpn: |-
              取得を開始する位置、0以上
              * ```limit```がない場合は、```offset```が無視される
          example: 1
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of returns per page, 1 or more and 1000 or less
            jpn: |-
              ページあたりの返却件数、1以上、1000以下
          example: 100
          schema:
            minimum: 1
            default: 1000
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetResourceOwnersSearch'
        '400':
          description: invalid_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_15
  /v2/resource_owners/{resource_owner_id}:
    get:
      operationId: ResourceOwnersController_getResourceOwnerById
      x-hidden-in: internal
      summary: Read Resource Owner
      description: |

        :::x-description-i18n:
        eng: |-
          * Get Resource Owner by id

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              resource_owner.read
        jpn: |-
          * 指定したidのリソースオーナー情報を取得

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              resource_owner.read
      parameters:
        - name: resource_owner_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Resource Owner ID
            jpn: |-
              リソースオーナーのID
          example: 00000000-0000-0000-0000-000000000000
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetResourceOwnersResourceOwnerId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_15
      security:
        - BearerAuth: []
  /v2/devices:
    post:
      operationId: DevicesController_createDevice
      x-hidden-in: internal
      summary: Create Device
      description: |

        :::x-description-i18n:
        eng: |-
          * Create a new device
            > ℹ️ Note
            >
            > A device client will be created based on the application type of the requesting OAuth client:
            >   * ```web```, ```native```
            >     * Device clients will be created based on each OAuth client in the ```client_id_list``` parameter.
            >   * ```client```
            >     * A device client will be created which belongs to the requesting OAuth client.

            > ℹ️ Note
            > * Specifying one of following parameters in the requests is available:
            >   * ```display_info```
            >   * ```name``` + ```description```
            > * However, specifying both or none of them will cause an error.

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              device.write
        jpn: |-
          * 新しいデバイスを作成する
            > ℹ️ Note
            >
            > デバイス クライアントは、要求元の OAuth クライアントのアプリケーション タイプに基づいて作成されます。
            >   * ```web```, ```native```
            >     * デバイス クライアントは、```client_id_list``` パラメータの各 OAuth クライアントに基づいて作成されます。
            >   * ```client```
            >     * 要求元の OAuth クライアントに属するデバイス クライアントが作成されます。

            > ℹ️ Note
            > * リクエストでは次のパラメータのいずれかを指定できます。
            >   * ```display_info```
            >   * ```name``` + ```description```
            > * ただし、両方を指定したり、どちらも指定しなかった場合はエラーになります。

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              device.write
      parameters:
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostDevicesBodyDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostDevices'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_16
        - Device API
      security:
        - BearerAuth: []
  /v2/devices/all:
    post:
      operationId: DevicesController_createDeviceAll
      x-internal: true
      summary: Create Device All
      description: |

        :::x-description-i18n:
        eng: |-
          * Create a new device
            > ℹ️ Note
            >
            > * A device client will be created which belongs to the requesting OAuth client.

            > ℹ️ Note
            > * Specifying one of following parameters in the requests is available:
            >   * ```display_info```
            >   * ```name``` + ```description```
            > * However, specifying both or none of them will cause an error.

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              device.write.all
        jpn: |-
          * 新しいデバイスを作成する
            > ℹ️ Note
            >
            > * 要求元の OAuth クライアントに属するデバイス クライアントが作成されます。

            > ℹ️ Note
            > * リクエストでは次のパラメータのいずれかを指定できます。
            >   * ```display_info```
            >   * ```name``` + ```description```
            > * ただし、両方を指定したり、どちらも指定しなかった場合はエラーになります。

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              device.write.all
      parameters:
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostDevicesBodyDto'
            examples:
              create device:
                value:
                  resource_owner_id: 374e215a-5707-4b00-9eaf-fd3bcb42fae8
                  name: ''
                  id_number: ''
                  description: ''
                  client_id_list:
                    - 374e215a-5707-4b00-9eaf-fd3bcb42fae8
                  is_managed: unmanaged
                  rsa_publickey: ''
                description: This is create device Example
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostDevices'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_16
      security:
        - BearerAuth: []
  /v2/devices/{device_id}:
    delete:
      operationId: DevicesController_deleteDevice
      x-hidden-in: internal
      summary: Delete Device
      description: |-

        :::x-description-i18n:
        eng: |-
          * Delete specified device.
             * If device clients belong to the specified device exist, those device clients will be also deleted
             * If a device ID to be deleted does not exist, an error (404 Not Found) will be returned

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client
          ### REQUIRED SCOPES
              device.write
        jpn: |-
          * 指定したデバイスを削除する
            * 削除対象のデバイスに紐づくデバイスクライアントがある場合、そのクライアントもすべて削除します。
            * 削除対象のデバイスIDが存在しない場合は、エラー(404 Not Found)となります。

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント
          ### REQUIRED SCOPES
              device.write

      parameters:
        - name: device_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Device ID
            jpn: |-
              デバイスID
          example: 5a687ac5a2b7c60100000001
          schema:
            pattern: ^[0-9a-v]{20}
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_16
      security:
        - BearerAuth: []
    get:
      operationId: DevicesController_getDeviceById
      x-hidden-in: internal
      summary: Read Device
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get the device information of a specified ID.
            * When an application type is web or native
              * All detailed information of device client will be returned
            * When an application type is client
              * Only detailed information of a device tied to the used OAuth client will be returned

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client
          ### REQUIRED SCOPES
              device.read
        jpn: |-
          * 指定したidのデバイスの情報を取得する
            * アプリケーションの種類がWebまたはネイティブの場合
              * デバイスクライアントのすべての詳細情報が返されます
            * アプリケーションタイプがクライアントの場合
              * 使用された OAuth クライアントに関連付けられたデバイスの詳細情報のみが返されます

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント
          ### REQUIRED SCOPES
              device.read

      parameters:
        - name: device_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Device ID
            jpn: |-
              デバイスID

          example: 5a687ac5a2b7c60100000001
          schema:
            pattern: ^[0-9a-v]{20}
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetDevicesDeviceId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_16
      security:
        - BearerAuth: []
  /v2/devices/{device_id}/all:
    delete:
      operationId: DevicesController_deleteDeviceAll
      x-internal: true
      summary: Delete Device All
      description: |

        :::x-description-i18n:
        eng: |-
          * Delete specified device.
            * If device clients belong to the specified device exist, those device clients will be also deleted
            * If a device ID to be deleted does not exist, an error (404 Not Found) will be returned

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              device.write.all
        jpn: |-
          * 指定したデバイスを削除する
            * 削除対象のデバイスに紐づくデバイスクライアントがある場合、そのクライアントもすべて削除します。
            * 削除対象のデバイスIDが存在しない場合は、エラー(404 Not Found)となります。

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              device.write.all
      parameters:
        - name: device_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Device ID
            jpn: |-
              デバイスID
          example: 5a687ac5a2b7c60100000001
          schema:
            pattern: ^[0-9a-v]{20}
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_16
      security:
        - BearerAuth: []
    get:
      operationId: DevicesController_getDeviceByIdAll
      x-internal: true
      summary: Read Device All
      description: |

        :::x-description-i18n:
        eng: |-
          * Get the device information of a specified ID.
            * Only detailed information of a device tied to the used OAuth client will be returned

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              device.read.all
        jpn: |-
          * 指定したidのデバイスの情報を取得する
            * 使用された OAuth クライアントに関連付けられたデバイスの詳細情報のみが返されます

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              device.read.all
      parameters:
        - name: device_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Device ID
            jpn: |-
              デバイスID

          example: 5a687ac5a2b7c60100000001
          schema:
            pattern: ^[0-9a-v]{20}
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetDevicesDeviceId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_16
      security:
        - BearerAuth: []
  /v2/file_storage/buckets:
    get:
      operationId: BucketsController_listBuckets
      x-hidden-in: internal
      summary: List Buckets
      description: |

        :::x-description-i18n:
        eng: |-
          * Get a list of buckets
          > 📘 Note
          >
          > When ```get_user_info``` or  ```get_client_info``` is true, the maximum number of items included in a list is 100. (The value of limit is from 1 through 100.)

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client

          ### REQUIRED SCOPES
              file_storage.read
        jpn: |-
          * バケット情報の一覧を取得する。
          > 📘 Note
          >
          > バケット情報の一覧を取得する。
          ```get_user_info```または```get_client_info```がtrueの場合、取得対象件数の上限は100件となります。（limitのspecが1以上100以下となる。）

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント

          ### REQUIRED SCOPES
              file_storage.read
      parameters:
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items to be included in the result
            jpn: |-
              ページあたりの返却件数
          example: '100'
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items to be skipped
            jpn: |-
              取得を開始する位置
          example: 2
          schema:
            minimum: 0
            type: integer
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort order.

              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順。

              * ```asc```：昇順
              * ```desc```：降順
          example: asc
          schema:
            default: desc
            enum:
              - asc
              - desc
            type: string
        - name: order_by
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Field to be sorted

              * ```created_at```： creation time
              * ```updated_at```： last updated time
              * ```resource_owner_id```： resource owner
              * ```name```： name

            jpn: |-
              ソート対象

              * ```created_at```： 作成時間
              * ```updated_at```： 最終更新時間
              * ```resource_owner_id```： リソースオーナー
              * ```name```： 名前
          example: created_at
          schema:
            default: created_at
            enum:
              - created_at
              - updated_at
              - resource_owner_id
              - name
            type: string
        - name: "resource_owner_id\t"
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Perfect match on resource owner ID, Format: UUID
            jpn: |-
              リソースオーナーIDでの完全一致検索, UUIDの形式
          example: cc1b046b-e3b0-4c50-845f-98b6fe138bdc
          schema:
            format: uuid
            type: string
        - name: name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Partial match on name, Follow naming rules
            jpn: |-
              名前での部分一致検索 バケット名 同一リソースオーナー配下で名前はユニーク
          example: name
          schema:
            pattern: ^(?!.*[.]{1,2}|.*/).{1,100}$
            type: string
        - name: get_user_info
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Flag to get user details, false: Do not get user details, true: Get user details
            jpn: |-
              ユーザ詳細情報取得フラグ false:ユーザ詳細情報取得を行わない,true:ユーザ詳細情報取得を行う
          example: true
          schema:
            default: false
            type: boolean
        - name: get_client_info
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Flag to get client details, false: Do not get client details, true: Get client details
            jpn: |-
              クライアント詳細情報取得フラグ false:クライアント詳細情報取得を行わない,true:クライアント詳細情報取得を行う
          example: true
          schema:
            default: false
            type: boolean
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetFileStorageBuckets'
        '400':
          description: invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_17
        - File Storage API
      security:
        - BearerAuth: []
    post:
      operationId: BucketsController_createBucket
      x-hidden-in: internal
      summary: Create Bucket
      description: |

        :::x-description-i18n:
        eng: |-
          * Create a new Bucket.
          > 📘 Note
          >
          > Max of 1000 buckets can be created per resource owner by default

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              file_storage.write

        jpn: |-
          * バケットを新規登録する。
          > 📘 Note
          >
          > リソースオーナーあたり1000バケットまで作成可能です

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              file_storage.write
      parameters:
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostFileStorageBucketsBodyDto'
            examples:
              create bucket:
                value:
                  resource_owner_id: 67e6325a-ca03-11e7-8aaf-337395427972
                  name: bucket1
                description: This is create bucket Example
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostFileStorageBuckets'
        '400':
          description: >-
            invalid_request or invalid_context or validation_failed or
            quota_exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes or permission_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: conflict_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_17
      security:
        - BearerAuth: []
  /v2/file_storage/buckets/all:
    post:
      operationId: BucketsController_createBucketAll
      x-internal: true
      summary: Create Bucket All
      description: |

        :::x-description-i18n:
        eng: |-
          * Create a new Bucket.
          > 📘 Note
          >
          > Max of 1000 buckets can be created per resource owner by default

          ### SUPPORTED APPLICATION TYPES
              Client

          ### REQUIRED SCOPES
              file_storage.write.all

        jpn: |-
          * バケットを新規登録する。
          > 📘 Note
          >
          > リソースオーナーあたり1000バケットまで作成可能です

          ### SUPPORTED APPLICATION TYPES
              クライアント

          ### REQUIRED SCOPES
              file_storage.write.all
      parameters:
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostFileStorageBucketsBodyDto'
            examples:
              create bucket:
                value:
                  resource_owner_id: 67e6325a-ca03-11e7-8aaf-337395427972
                  name: bucket1
                description: This is create bucket Example
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostFileStorageBuckets'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes or permission_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: conflict_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_17
      security:
        - BearerAuth: []
    get:
      operationId: BucketsController_listAllBuckets
      x-internal: true
      summary: List Buckets All
      description: |

        :::x-description-i18n:
        eng: |-
          * Get a list of buckets
          > 📘 Note
          >
          > When ```get_user_info``` or  ```get_client_info``` is true, the maximum number of items included in a list is 100. (The value of limit is from 1 through 100.)

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              file_storage.read.all
        jpn: |-
          * バケット情報の一覧を取得する。
          > 📘 Note
          >
          > バケット情報の一覧を取得する。
          ```get_user_info```または```get_client_info```がtrueの場合、取得対象件数の上限は100件となります。（limitのspecが1以上100以下となる。）

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              file_storage.read.all
      parameters:
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items to be included in the result
            jpn: |-
              ページあたりの返却件数
          example: '100'
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items to be skipped
            jpn: |-
              取得を開始する位置
          example: 2
          schema:
            minimum: 0
            type: integer
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort order.

              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順。

              * ```asc```：昇順
              * ```desc```：降順
          example: asc
          schema:
            default: desc
            enum:
              - asc
              - desc
            type: string
        - name: order_by
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Field to be sorted

              * ```created_at```： creation time
              * ```updated_at```： last updated time
              * ```resource_owner_id```： resource owner
              * ```name```： name

            jpn: |-
              ソート対象

              * ```created_at```： 作成時間
              * ```updated_at```： 最終更新時間
              * ```resource_owner_id```： リソースオーナー
              * ```name```： 名前
          example: created_at
          schema:
            default: created_at
            enum:
              - created_at
              - updated_at
              - resource_owner_id
              - name
            type: string
        - name: "resource_owner_id\t"
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Perfect match on resource owner ID, Format: UUID
            jpn: |-
              リソースオーナーIDでの完全一致検索, UUIDの形式
          example: cc1b046b-e3b0-4c50-845f-98b6fe138bdc
          schema:
            format: uuid
            type: string
        - name: name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Partial match on name, Follow naming rules
            jpn: |-
              名前での部分一致検索 バケット名 同一リソースオーナー配下で名前はユニーク
          example: name
          schema:
            pattern: ^(?!.*[.]{1,2}|.*/).{1,100}$
            type: string
        - name: get_user_info
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Flag to get user details, false: Do not get user details, true: Get user details
            jpn: |-
              ユーザ詳細情報取得フラグ false:ユーザ詳細情報取得を行わない,true:ユーザ詳細情報取得を行う
          example: true
          schema:
            default: false
            type: boolean
        - name: get_client_info
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Flag to get client details, false: Do not get client details, true: Get client details
            jpn: |-
              クライアント詳細情報取得フラグ false:クライアント詳細情報取得を行わない,true:クライアント詳細情報取得を行う
          example: true
          schema:
            default: false
            type: boolean
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetFileStorageBuckets'
        '400':
          description: invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes or permission_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_17
      security:
        - BearerAuth: []
  /v2/file_storage/buckets/{bucket_id}:
    patch:
      operationId: BucketsController_patchBucket
      x-hidden-in: internal
      summary: Update Bucket
      description: |

        :::x-description-i18n:
        eng: |-
          * Update a specified bucket partially

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              file_storage.write

        jpn: |-
          * バケット情報を更新する。

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              file_storage.write
      parameters:
        - name: bucket_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket ID
            jpn: |-
              バケットID
          example: 9m4e2mr0ui3e8a215n4g
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchFileStorageBucketsBucketIdBodyDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PatchFileStorageBucketsBucketId'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes or permission_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: conflict_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_17
      security:
        - BearerAuth: []
    delete:
      operationId: BucketsController_deleteBucket
      x-hidden-in: internal
      summary: Delete Bucket
      description: |

        :::x-description-i18n:
        eng: |-
          * Delete the specified bucket.

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              file_storage.write
        jpn: |-
          * 指定したバケットを削除する。

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              file_storage.write
      parameters:
        - name: bucket_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket ID
            jpn: |-
              バケットID
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes or permission_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_17
    get:
      operationId: BucketsController_getBucket
      x-hidden-in: internal
      summary: Get Bucket
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a specified bucket

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client
          ### REQUIRED SCOPES
              file_storage.read
        jpn: |-
          * バケット情報を取得する。

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント
          ### REQUIRED SCOPES
              file_storage.read

      parameters:
        - name: bucket_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket ID
            jpn: |-
              バケットID
          example: 9m4e2mr0ui3e8a215n4g
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: get_user_info
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Flag to get user details
              * ```false```: Do not get user details
              * ```true```: Get user details
            jpn: |-
              ユーザ詳細情報取得フラグ
              * ```false```: ユーザ詳細情報取得を行わない
              * ```true```: ユーザ詳細情報取得を行う
          example: true
          schema:
            default: false
            type: boolean
        - name: get_client_info
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Flag to get client details
              * ```false```: Do not get client details
              * ```true```: Get client details
            jpn: |-
              クライアント詳細情報取得フラグ
              * ```false```: クライアント詳細情報取得を行わない
              * ```true```: クライアント詳細情報取得を行う
          example: true
          schema:
            default: false
            type: boolean
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetFileStorageBucketsBucketId'
        '400':
          description: invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes or permission_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_17
      security:
        - BearerAuth: []
  /v2/file_storage/buckets/{bucket_id}/all:
    delete:
      operationId: BucketsController_deleteBucketAll
      x-internal: true
      summary: Delete Bucket All
      description: |

        :::x-description-i18n:
        eng: |-
          * Delete the specified bucket

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              file_storage.write.all
        jpn: |-
          *  指定したバケットを削除する

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              file_storage.write.all
      parameters:
        - name: bucket_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket ID
            jpn: |-
              バケットID
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes or permission_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_17
      security:
        - BearerAuth: []
  /v2/file_storage/buckets/{bucket_id}/nodes:
    get:
      operationId: NodesController_listNodes
      x-hidden-in: internal
      summary: List Nodes
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a list of nodes

          > ℹ️ Info
          >
          > When ```get_user_info``` is ```true```, the maximum number of items included in a list is 100. (The value of ```limit``` is from 1 through 100.)

          > ℹ️ Info
          >
          > This includes nodes for which the upload of a file is not finished. (In such case, file.size is 0 and file.checksum is blank.)

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client

          ### REQUIRED SCOPES
              file_storage.read
        jpn: |-
          * ノード情報の一覧を取得する。

          > ℹ️ 情報
          >
          > ```get_user_info```が```true```の場合、取得対象件数の上限は100件となります。（```limit```のspecが1以上100以下となる。）

          > ℹ️ 情報
          >
          > ファイルアップロードが終わっていないノードも含まれます。（その場合、file.sizeが0 、file.checksumが空文字となる。）

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client

          ### REQUIRED SCOPES
              file_storage.read

      parameters:
        - name: bucket_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket ID
            jpn: |-
              バケットID
          example: 9m4e2mr0ui3e8a215n4g
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items to be included in the result
            jpn: |-
              ページあたりの返却件数
          example: 100
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items to be skipped
            jpn: |-
              取得を開始する位置
          example: 2
          schema:
            minimum: 0
            type: integer
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort order.

              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順。

              * ```asc```：昇順
              * ```desc```：降順
          example: asc
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: order_by
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Target field to be sorted
              * ```created_at```： creation time
              * ```updated_at```： last updated time
              * ```key```： absolute path
              * ```name```： name
              * ```file_size```： size of file
              * ```parent_node_id```： parent node ID

            jpn: |-
              ソート対象
              * ```created_at```： 作成時間
              * ```updated_at```： 最終更新時間
              * ```key```： 絶対パス
              * ```name```： 名前
              * * ```file_size```： ファイルサイズ
              * ```parent_node_id```： 親ノードID
          example: key
          schema:
            default: key
            enum:
              - parent_node_id
              - name
              - key
              - created_at
              - updated_at
              - file_size
            type: string
        - name: parent_node_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Parent node ID. ```null```: Root node. Default parent Node is ```/```
            jpn: |-
              親ノードでのIDの完全一致。```null```: ルート ノード。デフォルトの親ノードは ```/``` です
          example: 9m4e2mr0ui3e8a215n4g
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: recursive
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Retrieve files recursively
              * ```false```: Retrieve files only in the root directory
              * ```true```: Retrieve files recursively
            jpn: |-
              再帰取得フラグ
              * ```false```: 直下のみ
              * ```true```: その階層以下全て
          example: false
          schema:
            default: false
            type: boolean
        - name: name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Partial match on name. Follow naming rules
            jpn: |-
              名前での部分一致検索。Naming Rules 参照
          example: node
          schema:
            type: string
        - name: key
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Forward match on key (absolute path)
              * Root path: ```/```
              * Directory path MUST end with ```/```
              * 1111 characters or less
            jpn: |-
              絶対パスでの前方一致検索
              * ルートは```/```
              * ディレクトリなノードのキーは末尾が```/```になる
              * 1111文字以下
          example: /node1.txt
          schema:
            maxLength: 1111
            type: string
        - name: is_directory
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Directory retrieval flag
              * ```false```: Retrieve files and directories
              * ```true```: Retrieve only files
            jpn: |-
              ディレクトリか、ファイルかの指定。
              * ```false```: ディレクトリとファイル
              * ```true```:ファイルのみ
          example: true
          schema:
            default: true
            type: boolean
        - name: get_user_info
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Flag to get user details
              * ```false```: Do not get user details
              * ```true```: Get user details
            jpn: |-
              ユーザ詳細情報取得フラグ
              * ```false```: ユーザ詳細情報取得を行わない
              * ```true```:ユーザ詳細情報取得を行う
          example: true
          schema:
            default: false
            type: boolean
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdNodes'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_18
        - File Storage API
      security:
        - BearerAuth: []
  /v2/file_storage/buckets/{bucket_id}/nodes/all:
    get:
      operationId: NodesController_listNodesAll
      x-internal: true
      summary: List Nodes All
      description: |

        :::x-description-i18n:
        eng: |-
          * Get a list of nodes.

          > ℹ️ Info
          >
          > When ```get_user_info``` is ```true```, the maximum number of items included in a list is 100. (The value of ```limit``` is from 1 through 100.)

          > ℹ️ Info
          >
          > This includes nodes for which the upload of a file is not finished. (In such case, file.size is 0 and file.checksum is blank.)

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              file_storage.read.all
        jpn: |-
          * ノード情報の一覧を取得する。

          > ℹ️ 情報
          >
          > ```get_user_info```が```true```の場合、取得対象件数の上限は100件となります。(```limit```のspecが1以上100以下となる。)

          > ℹ️ 情報
          >
          > ファイルアップロードが終わっていないノードも含まれます。(その場合、file.sizeが0 、file.checksumが空文字となる。)

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              file_storage.read.all
      parameters:
        - name: bucket_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket ID
            jpn: |-
              バケットID
          example: 9m4e2mr0ui3e8a215n4g
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items to be included in the result
            jpn: |-
              ページあたりの返却件数
          example: 100
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of items to be skipped
            jpn: |-
              取得を開始する位置
          example: 2
          schema:
            minimum: 0
            type: integer
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort order.

              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順。

              * ```asc```：昇順
              * ```desc```：降順
          example: asc
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: order_by
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Target field to be sorted
              * ```created_at```： creation time
              * ```updated_at```： last updated time
              * ```key```： absolute path
              * ```name```： name
              * ```file_size```： size of file
              * ```parent_node_id```： parent node ID

            jpn: |-
              ソート対象
              * ```created_at```： 作成時間
              * ```updated_at```： 最終更新時間
              * ```key```： 絶対パス
              * ```name```： 名前
              * * ```file_size```： ファイルサイズ
              * ```parent_node_id```： 親ノードID
          example: key
          schema:
            default: key
            enum:
              - parent_node_id
              - name
              - key
              - created_at
              - updated_at
              - file_size
            type: string
        - name: parent_node_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Parent node ID. ```null```: Root node. Default parent Node is ```/```
            jpn: |-
              親ノードでのIDの完全一致。```null```: ルート ノード。デフォルトの親ノードは ```/``` です
          example: 9m4e2mr0ui3e8a215n4g
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: recursive
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Retrieve files recursively
              * ```false```: Retrieve files only in the root directory
              * ```true```: Retrieve files recursively
            jpn: |-
              再帰取得フラグ
              * ```false```: 直下のみ
              * ```true```: その階層以下全て
          example: false
          schema:
            default: false
            type: boolean
        - name: name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Partial match on name. Follow naming rules
            jpn: |-
              名前での部分一致検索。Naming Rules 参照
          example: node
          schema:
            type: string
        - name: key
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Forward match on key (absolute path)
              * Root path: ```/```
              * Directory path MUST end with ```/```
              * 1111 characters or less
            jpn: |-
              絶対パスでの前方一致検索
              * ルートは```/```
              * ディレクトリなノードのキーは末尾が```/```になる
              * 1111文字以下
          example: /node1.txt
          schema:
            maxLength: 1111
            type: string
        - name: is_directory
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Directory retrieval flag
              * ```false```: Retrieve files and directories
              * ```true```: Retrieve only files
            jpn: |-
              ディレクトリか、ファイルかの指定。
              * ```false```: ディレクトリとファイル
              * ```true```:ファイルのみ
          example: true
          schema:
            default: true
            type: boolean
        - name: get_user_info
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Flag to get user details
              * ```false```: Do not get user details
              * ```true```: Get user details
            jpn: |-
              ユーザ詳細情報取得フラグ
              * ```false```: ユーザ詳細情報取得を行わない
              * ```true```:ユーザ詳細情報取得を行う
          example: true
          schema:
            default: false
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdNodes'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_18
  /v2/file_storage/buckets/{bucket_id}/nodes/{node_id}:
    get:
      operationId: NodesController_getNode
      x-hidden-in: internal
      summary: Get Node
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a specified node.

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              file_storage.read
        jpn: |-
          * ノード情報を取得する。

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              file_storage.read

      parameters:
        - name: bucket_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket ID
            jpn: |-
              バケットID
          example: 9m4e2mr0ui3e8a215n4g
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: node_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Node ID
            jpn: |-
              ノードID
          example: 9m4e2mr0ui3e8a215n4g
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: directory_size
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Retrieve size under the directory

              * ```true```: Retrieve size under directory and file sizes
              * ```false```: Retrieve only file sizes
            jpn: |-
              ディレクトリ配下のサイズを取得するか

              * ```true```:ディレクトリ配下とファイルのサイズを取得する
              * ```false```:ファイルのみサイズを取得する
          example: 'false'
          schema:
            default: false
            type: boolean
        - name: get_user_info
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Flag to get user details

              * ```true```: Get user details
              * ```false```: Do not get user details
            jpn: |-
              ディレクトリ配下のサイズを取得するか

              * ```true```:ユーザ詳細情報取得を行う
              * ```false```:ユーザ詳細情報取得を行わない
          example: 'false'
          schema:
            default: false
            type: boolean
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeId
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_18
      security:
        - BearerAuth: []
    delete:
      operationId: NodesController_deleteNode
      x-hidden-in: internal
      summary: Delete Node
      description: |

        :::x-description-i18n:
        eng: |-
          * Delete a specified node
          > 🚧 Warning
          >
          > If the specified node is directory, all the files in the directory will be deleted recursively.

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client

          ### REQUIRED SCOPES
              file_storage.write
        jpn: |-
          * ノードを削除する。
          > 🚧 Warning
          >
          > ディレクトリなノードを削除した場合、その配下のノードも全て削除されます

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント

          ### REQUIRED SCOPES
              file_storage.write
      parameters:
        - name: bucket_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket ID
            jpn: |-
              バケットID
          example: 67e6325a-ca03-11e7-8aaf-337395427972
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: node_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Node ID
            jpn: |-
              ノードID
          example: 67e6325a-ca03-11e7-8aaf-337395427972
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2DeleteFileStorageBucketsBucketIdNodesNodeId
            examples:
              delete node:
                value:
                  bucket_id: 67e6325a-ca03-11e7-8aaf-337395427972
                  node_id: 67e6325a-ca03-11e7-8aaf-337395427922
                description: This is delete node Example
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2DeleteFileStorageBucketsBucketIdNodesNodeId
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_18
      security:
        - BearerAuth: []
  /v2/file_storage/buckets/{bucket_id}/nodes/{node_id}/all:
    delete:
      operationId: NodesController_deleteNodeAll
      x-internal: true
      summary: Delete Node All
      description: |

        :::x-description-i18n:
        eng: |-
          * Delete a specified node
          > 🚧 Warning
          >
          > If the specified node is directory, all the files in the directory will be deleted recursively.

          ### SUPPORTED APPLICATION TYPES
              Client

          ### REQUIRED SCOPES
              file_storage.write.all
        jpn: |-
          * ノードを削除する。
          > 🚧 Warning
          >
          > ディレクトリなノードを削除した場合、その配下のノードも全て削除されます

          ### SUPPORTED APPLICATION TYPES
              クライアント

          ### REQUIRED SCOPES
              file_storage.write.all
      parameters:
        - name: bucket_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket ID
            jpn: |-
              バケットID
          example: 67e6325a-ca03-11e7-8aaf-337395427972
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: node_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Node ID
            jpn: |-
              ノードID
          example: 67e6325a-ca03-11e7-8aaf-337395427972
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2DeleteFileStorageBucketsBucketIdNodesNodeId
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_18
      security:
        - BearerAuth: []
  /v2/file_storage/buckets/{bucket_id}/nodes/{node_id}/move:
    post:
      operationId: MoveController_moveNode
      x-hidden-in: internal
      summary: Move Node
      description: |-

        :::x-description-i18n:
        eng: |-
          * Move a specified node
          > 🚧 Warning
          >
          > If the specified node is directory, all the files in the directory will be moved recursively.

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client

          ### REQUIRED SCOPES
              file_storage.write
        jpn: |-
          * ノードを指定したディレクトリ配下に移動する。
          > 🚧 Warning
          >
          > ディレクトリなノードを移動した場合、その配下のノードも全て移動されます

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント

          ### REQUIRED SCOPES
              file_storage.write

      parameters:
        - name: bucket_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Bucket ID
            jpn: |-
              バケットID

          example: bjd878g1gsj1ttpjr6e0
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: node_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Node ID
            jpn: |-
              ノードID

          example: 9m4e2mr0ui3e8a215n4g
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdMoveBodyDto
            examples:
              move node:
                value:
                  dest_bucket_id: bjd878g1gsj1ttpjr6e0
                  parent_node_id: b85rks2clqg1g6h1fv0g
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdMove
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: conflict_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - File Storage API
      security:
        - BearerAuth: []
  /v2/file_storage/buckets/{bucket_id}/nodes/{node_id}/copy:
    post:
      operationId: CopyController_copyNode
      x-hidden-in: internal
      summary: Copy Node
      description: |

        :::x-description-i18n:
        eng: |-
          > ℹ️ Note
          >
          > The number of nodes, files, and the size of fies you can copy with a request, are subject to restirictions below.

          * Number of nodes: Up to 100 nodes (total number of file nodes and directory nodes)
          * Number of file nodes: Up to 50 nodes
          * Total size of files: Up to 20GiB

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client

          ### REQUIRED SCOPES
              file_storage.write

        jpn: |-
          > ℹ️ Note
          >
          > 1度のリクエストでコピー可能なノード数、ファイル数、サイズには下記制約があります。

          * ノード数: 最大100ノード（ファイルノード＋ディレクトリノードの合計数）
          * ファイルノード数: 最大50ノード
          * 合計ファイルサイズ: 最大20GiB

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント

          ### REQUIRED SCOPES
              file_storage.write
      parameters:
        - name: bucket_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              ID of source bucket
            jpn: |-
              コピー元バケットID
          example: bjd878g1gsj1ttpjr6e9
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: node_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              ID of target node
            jpn: |-
              コピー対象ノードID
          example: ajd878g1gsj1ttpjr6e9
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdCopyBodyDto
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdCopy
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: conflict_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - File Storage API
      security:
        - BearerAuth: []
  /v2/file_storage/buckets/{bucket_id}/nodes/{node_id}/rename:
    post:
      operationId: RenameController_renameNode
      x-hidden-in: internal
      summary: Rename Node
      description: |-

        :::x-description-i18n:
        eng: |-
          * Rename a specified node

          > ⚠️ Warning
          >
          > If the specified Node is Directory, all the Files in this Directory will renamed recursively.
          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client
          ### REQUIRED SCOPES
              file_storage.write
        jpn: |-
          * ノードの名前を変更する。

          > ⚠️ Warning
          >
          > ディレクトリなノードの名前を変更した場合、その配下のノードのkeyも全て変更されます
          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント
          ### REQUIRED SCOPES
              file_storage.write

      parameters:
        - name: bucket_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket ID

            jpn: |-
              バケットID
          example: cidr9i4it4saq72p9ccg
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: node_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Node ID

            jpn: |-
              ノードID
          example: 9m4e2mr0ui3e8a215n4g
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdRenameBodyDto
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdRename
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: conflict_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - File Storage API
      security:
        - BearerAuth: []
  /v2/file_storage/buckets/{bucket_id}/upload:
    put:
      operationId: UploadController_uploadFile
      x-hidden-in: internal
      summary: Upload File
      description: |

        :::x-description-i18n:
        eng: |-
          * Upload a File
            > ℹ️ Note
            >
            >  You can upload files up to 50 GB in size

            > ℹ️ Note
            >
            >  A checksum must be sent to verify that the data was uploaded correctly

            > ℹ️ Note
            >
            >  Uploading a file with a name that duplicates a file currently being uploaded in the same directory in the bucket will result in an error. If the file is not currently uploading, it will be replaced by the uploaded file

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client
          ### REQUIRED SCOPES
              file_storage.upload
        jpn: |-
          * ファイルをアップロードする
            > ℹ️ Note
            >
            > 最大50GBのサイズのファイルをアップロードすることが出来ます

            > ℹ️ Note
            >
            > データが正しくアップロードできたか検証するためのチェックサムの送信が必要です

            > ℹ️ Note
            >
            > バケット内の同ディレクトリ内でアップロード中のファイルと重複する名前のファイルでアップロードを行うとエラーになります。アップロード中ではない場合はアップロードしたファイルで置換されます。
          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント
          ### REQUIRED SCOPES
              file_storage.upload
      requestBody:
        required: true
        description: ファイルストリーム
        content:
          application/octet-stream:
            schema:
              type: string
      parameters:
        - name: bucket_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket ID
            jpn: |-
              バケットID
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: node_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Node ID
            jpn: |-
              ノードID
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: key
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              * Perfect match on key (absolute path). Root path: ```/```
              * Directory path MUST end with ```/```
              * MUST not end with. MUST be file node. 1111 or less.
            jpn: |-
              * 絶対パス ルートは```/```
              * ディレクトリなノードのキーは末尾が```/```になる。
              * 1111文字以下
          schema:
            maxLength: 1111
            type: string
        - name: parent_node_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Parent node ID.

              ```null```: Root node
            jpn: |-
              親ノードID

              ```null```の場合、ルートノードを示す
          schema:
            pattern: ^[0-9a-v]{20}$
            nullable: true
            type: string
        - name: parent_key
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Absolute path of parent node.

              Root path: ```/```
            jpn: |-
              親ノード絶対パス

              ルートは```/```
          schema:
            type: string
        - name: name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              File name. Satisfies regular expression: ```A.{1,100}z``` and does not satisfy ```(A[.]{1,2}z|/)```
            jpn: |-
              ファイル名  正規表現:```A.{1,100}z```を満たし、かつ```(A[.]{1,2}z|/)```を満たさない
          schema:
            type: string
        - name: force
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Flag to be automatically created if parent directory does not exist
            jpn: |-
              親ディレクトリが存在しない場合自動作成するフラグ
          schema:
            type: boolean
        - name: checksum
          required: true
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              ASE64 encoded MD5 value
              * Verify that data has been uploaded successfully
              * For checksum, use the BASE64-encoded MD5 value (a 16-byte binary value, not a 32-character string expressed in hexadecimal) of the file to be uploaded.
              * Since BASE64-encoded results contain + and /, they must be URL-encoded and replaced with %2B and %2F when used as query parameters.
            jpn: |-
              ASE64エンコードされたMD5値
              * データが正常にアップロードされたかを検証する
              * checksumには、アップロードするファイルのMD5値(16進数で表した32文字の文字列ではなく、16バイトのバイナリ値)をBASE64エンコードしたものを使用します。
              * BASE64エンコードした結果には、+や/が含まれるため、クエリパラメータとして使用する際にはURLエンコードを行い、%2Bや%2Fに置き換える必要があります。,
          schema:
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdUpload'
        '400':
          description: >-
            invalid_request or invalid_context or validation_failed or
            quota_exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: conflict_request or concurrent_access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_19
        - File Storage API
      security:
        - BearerAuth: []
  /v2/file_storage/buckets/{bucket_id}/upload/all:
    put:
      operationId: UploadController_uploadFileAll
      x-internal: true
      summary: Upload File All
      description: |

        :::x-description-i18n:
        eng: |-
          * Upload a File

            > ℹ️ Note
            >
            >  You can upload files up to 50 GB in size

            > ℹ️ Note
            >
            >  A checksum must be sent to verify that the data was uploaded correctly

            > ℹ️ Note
            >
            >  Uploading a file with a name that duplicates a file currently being uploaded in the same directory in the bucket will result in an error. If the file is not currently uploading, it will be replaced by the uploaded file

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              file_storage.upload.all
        jpn: |-
          * ファイルをアップロードする

            > ℹ️ Note
            >
            > 最大50GBのサイズのファイルをアップロードすることが出来ます

            > ℹ️ Note
            >
            > データが正しくアップロードできたか検証するためのチェックサムの送信が必要です

            > ℹ️ Note
            >
            > バケット内の同ディレクトリ内でアップロード中のファイルと重複する名前のファイルでアップロードを行うとエラーになります。アップロード中ではない場合はアップロードしたファイルで置換されます。

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              file_storage.upload.all
      requestBody:
        required: true
        description: ファイルストリーム
        content:
          application/octet-stream:
            schema:
              type: string
      parameters:
        - name: bucket_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket ID
            jpn: |-
              バケットID
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: node_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Node ID
            jpn: |-
              ノードID
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: key
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              * Perfect match on key (absolute path). Root path: ```/```
              * Directory path MUST end with ```/```
              * MUST not end with. MUST be file node. 1111 or less.
            jpn: |-
              * 絶対パス ルートは```/```
              * ディレクトリなノードのキーは末尾が```/```になる。
              * 1111文字以下
          schema:
            maxLength: 1111
            type: string
        - name: parent_node_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Parent node ID.

              ```null```: Root node
            jpn: |-
              親ノードID

              ```null```の場合、ルートノードを示す
          schema:
            pattern: ^[0-9a-v]{20}$
            nullable: true
            type: string
        - name: parent_key
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Absolute path of parent node.

              Root path: ```/```
            jpn: |-
              親ノード絶対パス

              ルートは```/```
          schema:
            type: string
        - name: name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              File name. Satisfies regular expression: ```A.{1,100}z``` and does not satisfy ```(A[.]{1,2}z|/)```
            jpn: |-
              ファイル名  正規表現:```A.{1,100}z```を満たし、かつ```(A[.]{1,2}z|/)```を満たさない
          schema:
            type: string
        - name: force
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Flag to be automatically created if parent directory does not exist
            jpn: |-
              親ディレクトリが存在しない場合自動作成するフラグ
          schema:
            type: boolean
        - name: checksum
          required: true
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              ASE64 encoded MD5 value
              * Verify that data has been uploaded successfully
              * For checksum, use the BASE64-encoded MD5 value (a 16-byte binary value, not a 32-character string expressed in hexadecimal) of the file to be uploaded.
              * Since BASE64-encoded results contain + and /, they must be URL-encoded and replaced with %2B and %2F when used as query parameters.
            jpn: |-
              ASE64エンコードされたMD5値
              * データが正常にアップロードされたかを検証する
              * checksumには、アップロードするファイルのMD5値(16進数で表した32文字の文字列ではなく、16バイトのバイナリ値)をBASE64エンコードしたものを使用します。
              * BASE64エンコードした結果には、+や/が含まれるため、クエリパラメータとして使用する際にはURLエンコードを行い、%2Bや%2Fに置き換える必要があります。,
          schema:
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdUpload'
        '400':
          description: >-
            invalid_request or invalid_context or validation_failed or
            quota_exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: conflict_request or concurrent_access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_19
      security:
        - BearerAuth: []
  /v2/file_storage/buckets/{bucket_id}/download:
    get:
      operationId: DownloadController_downloadFile
      x-hidden-in: internal
      summary: Download File
      description: |

        :::x-description-i18n:
        eng: |-
          * Download a specified file
          > 📘 Note
          >
          > One of the query parameter is required.
          > If both parameter is specified, ```node_id``` will be used.

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client

          ### REQUIRED SCOPES
              file_storage.download
        jpn: |-
          * ファイルをダウンロードする。

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント

          ### REQUIRED SCOPES
              file_storage.download
      parameters:
        - name: bucket_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket ID
            jpn: |-
              バケットID
          example: c92h5k0rmn7vu57ntbf0
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: node_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Perfect match on node ID. MUST be file node
            jpn: |-
              ノードID。ファイルを示すノードである必要がある
          example: c8kleul3jsjum6k0bgqg
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: key
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Perfect match on key (absolute path). MUST be file node. 1111 or less. Root path: /. MUST not end with /
            jpn: |-
              絶対パス。ファイルを示すノードである必要がある。1111文字以下
          example: /hoge1/uploadTest1.txt
          schema:
            maxLength: 1111
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamableFile'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or permission_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_20
        - File Storage API
      security:
        - BearerAuth: []
  /v2/file_storage/buckets/{bucket_id}/download/all:
    get:
      operationId: DownloadController_downloadFileAll
      x-internal: true
      summary: Download File All
      description: |

        :::x-description-i18n:
        eng: |-
          * Download a specified file
          > 📘 Note
          >
          > One of the query parameter is required.
          > If both parameter is specified, ```node_id``` will be used.

          ### SUPPORTED APPLICATION TYPES
              Client

          ### REQUIRED SCOPES
              file_storage.download.all
        jpn: |-
          * ファイルをダウンロードする。

          ### SUPPORTED APPLICATION TYPES
              クライアント

          ### REQUIRED SCOPES
              file_storage.download.all
      parameters:
        - name: bucket_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket ID
            jpn: |-
              バケットID
          example: c92h5k0rmn7vu57ntbf0
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: node_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Perfect match on node ID. MUST be file node
            jpn: |-
              ノードID。ファイルを示すノードである必要がある
          example: c8kleul3jsjum6k0bgqg
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: key
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Perfect match on key (absolute path). MUST be file node. 1111 or less. Root path: /. MUST not end with /
            jpn: |-
              絶対パス。ファイルを示すノードである必要がある。1111文字以下
          example: /hoge1/uploadTest1.txt
          schema:
            maxLength: 1111
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamableFile'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes or permission_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_20
      security:
        - BearerAuth: []
  /v2/file_storage/buckets/{bucket_id}/create_directory:
    post:
      operationId: CreateDirectoryController_createDirectory
      x-hidden-in: internal
      summary: Create Directory
      description: |

        :::x-description-i18n:
        eng: |-
          * Create a new directory

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client, Device

          ### REQUIRED SCOPES
              file_storage.write
        jpn: |-
          * ディレクトリノードを新規登録する。

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント, デバイス

          ### REQUIRED SCOPES
              file_storage.write
      parameters:
        - name: bucket_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket ID
            jpn: |-
              バケットID
          example: c8kldql3jsjum6k0bgp0
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdCreateDirectoryBodyDto
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2GetFileStorageBucketsBucketIdCreateDirectory
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: conflict_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_21
        - File Storage API
      security:
        - BearerAuth: []
  /v2/file_storage/buckets/{bucket_id}/create_directory/all:
    post:
      operationId: CreateDirectoryController_createDirectoryAll
      x-internal: true
      summary: Create Directory All
      description: |

        :::x-description-i18n:
        eng: |-
          * Create a new directory

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              file_storage.write.all
        jpn: |-
          * ディレクトリノードを新規登録する

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              file_storage.write.all
      parameters:
        - name: bucket_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket ID
            jpn: |-
              バケットID
          example: c8kldql3jsjum6k0bgp0
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdCreateDirectoryBodyDto
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2GetFileStorageBucketsBucketIdCreateDirectory
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: conflict_request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_21
      security:
        - BearerAuth: []
  /v2/groups/{group_id}/members:
    put:
      operationId: GroupMembersController_updateGroupMembers
      x-hidden-in: internal
      summary: Update Group Members
      description: |

        :::x-description-i18n:
        eng: |-
          * Update group members

          ### EXECUTION PERMISSION

            * The participating group role must be more than ```manager```

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              group.write
        jpn: |-
          * グループメンバーを更新する

          ### EXECUTION PERMISSION

            * 参加グループの role が ```manager```以上 であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              group.write
      parameters:
        - name: group_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID
          example: cf221ab7-9272-48e9-b8ce-433397744185
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PutGroupsGroupIdMembersBodyDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PutGroupsGroupIdMembers'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_22
        - Group API
      security:
        - BearerAuth: []
    get:
      operationId: GroupMembersController_getMembers
      x-hidden-in: internal
      summary: List Group Members
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a list of group members

          ### EXECUTION PERMISSION

            * Being a participating group

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              group.read
        jpn: |-
          * グループに所属するメンバーの一覧を取得する

          ### EXECUTION PERMISSION

            * 参加グループであること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              group.read

      parameters:
        - name: group_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Group ID (UUID)
            jpn: |-
              グループID (UUID)

          example: e2f68837-4cd9-40c0-b950-6dabe650e411
          schema:
            format: uuid
            type: string
        - name: user_id
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              User ID, UUID format
            jpn: |-
              ユーザーID、UUID形式

          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            format: uuid
            type: string
        - name: name
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Name, partial match, less than 255 characters
            jpn: |-
              メンバー名、部分一致、255文字以下

          example: John Doe
          schema:
            maxLength: 255
            type: string
        - name: email
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Email address, partial match
            jpn: |-
              メールアドレス、部分一致

          example: john.doe@landlog.co.jp
          schema:
            type: string
        - name: primary
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Type of email address (primary and secondary)

              Primary: ```true```
              Secondary: ```false```

              ※ MUST use with query parameter ```email```
            jpn: |-
              メールアドレスの種類（メイン、サブ）

              メイン：```true```
              サブ：```false```

              ※ Query Parameterに```email```指定時のみ有効

          example: true
          schema:
            type: boolean
        - name: phonetic_family_name
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Phonetic last name, partial match, less than 255 characters.
            jpn: |-
              ふりがな（姓）、部分一致、255文字以下

          example: Doe
          schema:
            maxLength: 255
            type: string
        - name: phonetic_given_name
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Phonetic first name, partial match, less than 255 characters.
            jpn: |-
              ふりがな（名）、部分一致、255文字以下

          example: John
          schema:
            maxLength: 255
            type: string
        - name: role
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Role.
              Refine search by role.```super_admin```, ```admin```, ```manager```, or ```staff```
              None specified by default
            jpn: |-
              ロール。
              ロールでの絞り込み。```super_admin```、 ```admin```、 ```manager```、 ```staff```を指定可能
              デフォルトは指定なし

          example: admin
          schema:
            enum:
              - super_admin
              - admin
              - manager
              - staff
            type: string
        - name: category
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Group joining form

              ※```member``` and ```guest``` can be specified. None specified by default
            jpn: |-
              種別での絞り込み

              ※```member```、```guest```を指定可能。デフォルトは指定なし

          example: guest
          schema:
            enum:
              - member
              - guest
            type: string
        - name: tag
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Tag
            jpn: |-
              メンバータグ

          example:
            - hoge
          schema:
            type: array
            items:
              type: string
        - name: label
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Label, perfect match, less than 255 characters
            jpn: |-
              自由記述項目のキー名、完全一致,、255文字以下

          example: label1
          schema:
            maxLength: 255
            type: array
            items:
              type: string
        - name: includes
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Additional information to include in a response
              * ```profile```: Invitation approved user information
            jpn: |-
              レスポンスに追加で含める情報
              * ```profile```：ユーザー固有情報

          example: profile
          schema:
            enum:
              - profile
            type: string
        - name: page
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of pages, 1 or more
              ※ ```offset``` will be checked first
            jpn: |-
              ページネーション、1以上
              ※```offset```が設定されている場合、```offset```が優先される

          example: 1
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of items to be skipped, 0 or more
            jpn: |-
              取得を開始する位置、0以上

          example: 0
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of items to be included in the result, from 1 through 1000
            jpn: |-
              ページあたりの返却件数、1以上1000以下

          example: 1
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: order_by
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              In order of internal control ID
              ※```role``` or ```category```
            jpn: |-
              ソート項目
              ※```role``` ```category```のみ指定可

          example: role
          schema:
            enum:
              - role
              - category
            type: string
        - name: order
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Sort direction

              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順

              * ```asc```：昇順
              * ```desc```：降順

          example: asc
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      responses:
        '200':
          description: |-

            :::x-description-i18n:
            eng: |-
              > 🖉 Note
              >
              > Only  ```email``` is returned for  ```profile``` when a user is being invited.

              ```Bearer <json_web_token>```
            jpn: |-
              > 🖉 Note
              >
              > 招待中ユーザーの場合、 ```profile```は```email```のみ返却されます。

              ```Bearer <json_web_token>```

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetGroupsGroupIdMembers'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_22
      security:
        - BearerAuth: []
    post:
      operationId: GroupMembersController_addGroupMembers
      x-hidden-in: internal
      summary: Add Group Members
      description: |-

        :::x-description-i18n:
        eng: |-
          * Add group members

          > ℹ️ Note
          >
          > This API will be deprecated after 2020. Use the Corporation Invite APIs or Group Invite APIs instead.
          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              group.write
        jpn: |-
          * グループのメンバーとしてユーザーを追加する

          > ℹ️ Note
          >
          > このAPIは2020年以降で廃止される予定です。新規にご利用される場合は、Corporation Invite APIまたはGroup Invite APIをご利用ください。
          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              group.write

      parameters:
        - name: group_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID
          example: dec0443a-a324-4647-ae6d-9b25f7dad0d0
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostGroupsGroupIdMembersBodyDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PutGroupsGroupIdMembers'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_22
      security:
        - BearerAuth: []
    patch:
      operationId: GroupMembersController_setGroupMembers
      x-hidden-in: internal
      summary: Set Group Members
      description: |

        :::x-description-i18n:
        eng: |-
          * Update group members partially

          ### EXECUTION PERMISSION

            * The participating group role must be more than ```manager```

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              group.write
        jpn: |-
          * グループに所属するメンバーの属性を変更する

          ### EXECUTION PERMISSION

            * 参加グループの role が ```manager```以上 であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              group.write
      parameters:
        - name: group_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID
          example: cf221ab7-9272-48e9-b8ce-433397744185
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchGroupsGroupIdMembersBodyDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PatchGroupsGroupIdMembers'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_22
      security:
        - BearerAuth: []
    delete:
      operationId: GroupMembersController_deleteGroupMembers
      x-hidden-in: internal
      summary: Delete Group Members
      description: |-

        :::x-description-i18n:
        eng: |-
          * Delete group members

          ### EXECUTION PERMISSION

            * The participating group role must be more than ```manager```

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              group.write
        jpn: |-
          * 指定したグループメンバーを削除する

          ### EXECUTION PERMISSION

            * 参加グループの role が ```manager```以上 であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              group.write

      parameters:
        - name: group_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Group ID(UUID format)
            jpn: |-
              グループID(UUID形式)
          example: b0c6c475-8e4f-41b8-9ed4-dd5ea7a97c5f
          schema:
            format: uuid
            type: string
        - name: members
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              List of group member IDs
            jpn: |-
              解除する現場メンバーのID
          example:
            - 9a00cd20-503d-4796-b28a-b76d04a2cfed
            - 13741667-aafd-45a8-8d43-f668ce296b8d
          schema:
            title: members
            format: uuid
            type: array
            items:
              type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2DeleteGroupsGroupIdMembersBodyDto'
            examples:
              delete group members:
                value:
                  members:
                    - 9a00cd20-503d-4796-b28a-b76d04a2cfed
                    - 13741667-aafd-45a8-8d43-f668ce296b8d
      responses:
        '204':
          description: No Content
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_22
      security:
        - BearerAuth: []
  /v2/groups/{group_id}/members/all:
    delete:
      operationId: GroupMembersController_deleteGroupMembersAll
      x-internal: true
      summary: Delete Group Members All
      description: |

        :::x-description-i18n:
        eng: |-
          * Delete group members

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              group.write.all
        jpn: |-
          * 指定したグループメンバーを削除する

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              group.write.all
      parameters:
        - name: group_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Group ID(UUID format)
            jpn: |-
              グループID(UUID形式)
          example: b0c6c475-8e4f-41b8-9ed4-dd5ea7a97c5f
          schema:
            format: uuid
            type: string
        - name: members
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              List of group member IDs
            jpn: |-
              解除する現場メンバーのID
          example:
            - 9a00cd20-503d-4796-b28a-b76d04a2cfed
            - 13741667-aafd-45a8-8d43-f668ce296b8d
          schema:
            title: members
            format: uuid
            type: array
            items:
              type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2DeleteGroupsGroupIdMembersBodyDto'
            examples:
              delete all group members:
                value:
                  members:
                    - 9a00cd20-503d-4796-b28a-b76d04a2cfed
                    - 13741667-aafd-45a8-8d43-f668ce296b8d
      responses:
        '204':
          description: No Content
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_22
      security:
        - BearerAuth: []
  /v2/users/{user_id}:
    get:
      operationId: UsersController_getUser
      x-internal: true
      summary: Get User
      description: |-

        :::x-description-i18n:
        eng: |-
          * Obtaining user information

          ### SUPPORTED APPLICATION TYPES
              Web, Client
          ### REQUIRED SCOPES
              user.read
        jpn: |-
          * ユーザー情報の取得

          ### SUPPORTED APPLICATION TYPES
              Web, クライアント
          ### REQUIRED SCOPES
              user.read

      parameters:
        - name: user_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID
          example: 26ca76ae-a26d-4e7a-9eb2-46e824352182
          schema:
            format: uuid
            type: string
        - name: includes
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              If specifying multiple, separate them with commas children: If there are child groups, return an array of child group id and name with the key of children
            jpn: |-
              複数指定する場合はカンマ区切りで指定 children：子グループを持つ場合、childrenのキーで子グループの id と name の配列を返す
          example: groups,corporation
          schema:
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetUser'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_23
        - Account API
      security:
        - BearerAuth: []
    patch:
      operationId: UsersController_patchUser
      x-internal: true
      summary: Update User
      description: |

        :::x-description-i18n:
        eng: |-
          * Update notification email settings

          ### SUPPORTED APPLICATION TYPES
              Web, Client

          ### REQUIRED SCOPES
              user.write

        jpn: |-
          * お知らせメールの設定更新

          ### SUPPORTED APPLICATION TYPES
              Web, クライアント

          ### REQUIRED SCOPES
              user.write
      parameters:
        - name: user_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザID
          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchUserIdBodyDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PatchUserId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_23
      security:
        - BearerAuth: []
  /v2/users:
    get:
      operationId: UsersController_getUserList
      x-internal: true
      summary: Get Users
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get List User

          ### SUPPORTED APPLICATION TYPES
              Web, Client
          ### REQUIRED SCOPES
              user.read
        jpn: |-
          * ユーザー一覧を取得

          ### SUPPORTED APPLICATION TYPES
              Web, クライアント
          ### REQUIRED SCOPES
              user.read

      parameters:
        - name: type
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Account type
              * ```managed```: User is managed by a corporation
            jpn: |-
              アカウント種別
              * ```managed```: ユーザーは企業によって管理されています
          example: managed
          schema:
            minLength: 1
            maxLength: 255
            type: string
        - name: name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              User Name
              * Partially match, 255 characters or less
            jpn: |-
              ユーザー名
              * 部分一致、255文字以下
          example: Long
          schema:
            minLength: 1
            maxLength: 255
            type: string
        - name: phonetic_family_name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name
              * Partially match, 255 characters or less (full-width or half-width characters do not matter)
            jpn: |-
              姓（振り仮名）
              * 部分一致、255文字以下 (全角や半角は問わない)
          example: Chan
          schema:
            minLength: 1
            maxLength: 255
            type: string
        - name: phonetic_given_name
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name
              * Partially match, 255 characters or less (full-width or half-width characters do not matter)
            jpn: |-
              名（振り仮名）
              * 部分一致、255文字以下 (全角や半角は問わない)
          example: Thanh
          schema:
            minLength: 1
            maxLength: 255
            type: string
        - name: email
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Email address (Partially match)
            jpn: |-
              メールアドレス (部分一致)
          example: ebteam@earthbrain.com
          schema:
            type: string
        - name: phone_number
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number (Fully match)
            jpn: |-
              電話番号 (完全一致)
          example: '0123456789'
          schema:
            type: string
        - name: primary
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Email address type (main, sub). Valid only when email is specified in Query Parameter
              * ```true```: main email
              * ```false```: sub email
            jpn: |-
              メールアドレスの種類 (メイン、サブ). Query Parameterにemail指定時のみ有効
              * ```true```: メインメール
              * ```false```: サブメール
          example: 'true'
          schema:
            type: boolean
        - name: role
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Role. Role in the group: ```super_admin```, ```admin```, ```manager```, or ```staff```
            jpn: |-
              ロール、ユーザーの権限: ```super_admin```, ```admin```, ```manager```, or ```staff```
          example: admin
          schema:
            enum:
              - super_admin
              - admin
              - manager
              - staff
            type: string
        - name: page
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Pagination (1 or more)
              * If ```offset``` is set, ```offset``` takes precedence
            jpn: |-
              ページネーション (1以上)
              * ```offset```が設定されている場合、```offset```が優先される
          example: 1
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Position to start acquisition (0 or more)
            jpn: |-
              取得を開始する位置 (0以上)
          example: '0'
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of returns per page (1 or more)
            jpn: |-
              ページあたりの返却件数 (1以上)
          example: 1
          schema:
            minimum: 1
            default: 100
            type: integer
        - name: order_by
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort item
              * Only ```name```, ```family_name```, ```given_name``` can be specified
            jpn: |-
              ソート項目
              * ```name```, ```family_name```, ```given_name``` のみ指定可
          example: name
          schema:
            enum:
              - name
              - family_name
              - given_name
            type: string
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort order
              * ```asc``` : Ascending order
              * ```desc``` : Descending order
            jpn: |-
              ソート順
              * ```asc``` : 昇順
              * ```desc``` : 降順
          example: asc
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: includes
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Additional information to include in the response
              * If specifying multiple, separate them with commas
              * ```groups``` : More information about children group (id, name)
              * ```corporation``` : More information about children corporation (id, name)
            jpn: |-
              レスポンスに追加で含める情報
              * 複数指定する場合はカンマ区切りで指定
              * ```groups``` : 子グループ (ID、名前) に関する詳細情報
              * ```corporation``` : 子会社に関する詳細情報 (ID、名前)
          example: groups
          schema:
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetUsers'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_23
      security:
        - BearerAuth: []
  /v2/users/{user_id}/terms_agreements:
    post:
      operationId: UsersTermsAgreementsController_createUserTermsAgreements
      x-internal: true
      summary: Update State Of Agreement To Term Of Use.
      description: '- ユーザの利用規約への同意状況を更新する'
      parameters:
        - name: user_id
          required: true
          in: path
          description: ユーザ(UUID)
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostUsersUserIdTermsAgreementsBodyDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostUsersUserIdTermsAgreements'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Account API
      security:
        - BearerAuth: []
  /v2/groups:
    post:
      operationId: GroupsController_createGroup
      x-hidden-in: internal
      summary: Create Group
      description: |-

        :::x-description-i18n:
        eng: |-
          * Create a new Group.

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              group.write
        jpn: |-
          * グループを作成する

          ### SUPPORTED APPLICATION TYPES
            Web, ネイティブ

          ### REQUIRED SCOPES
              group.write

      parameters:
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostGroupsBodyDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostGroups'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_24
        - Group API
      security:
        - BearerAuth: []
    get:
      operationId: GroupsController_getGroupList
      x-hidden-in: internal
      summary: List Groups
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a list of groups or corporations which a user belongs to
              * Corporation that the user belongs to
              * Group that the user joins

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              group.read
        jpn: |-
          * 操作しているユーザーがアクセス可能なグループ一覧を取得する
              * 自身の所属している企業
              * 自身の参加しているグループ

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              group.read

      parameters:
        - name: name
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Group name, partial match
            jpn: |-
              グループ名、部分一致

          example: 営業
          schema:
            minLength: 0
            maxLength: 255
            pattern: .{0,255}
            type: string
        - name: state
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              State, partial match
            jpn: |-
              都道府県、部分一致

          example: 東京
          schema:
            minLength: 0
            maxLength: 255
            pattern: .{0,255}
            type: string
        - name: city
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              City/Town/Village, partial match
            jpn: |-
              市区町村、部分一致

          example: 港区
          schema:
            minLength: 0
            maxLength: 255
            pattern: .{0,255}
            type: string
        - name: address_1
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 1, partial match
            jpn: |-
              住所1、部分一致

          example: 海岸
          schema:
            minLength: 0
            maxLength: 255
            pattern: .{0,255}
            type: string
        - name: address_2
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 2, partial match
            jpn: |-
              住所2、部分一致

          example: 汐留ビ
          schema:
            minLength: 0
            maxLength: 255
            pattern: .{0,255}
            type: string
        - name: type
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Type of a group, ```Corporation``` or ```Group```

              * ```Corporation```： Type is Corporation
              * ```Group```： Type is Group
            jpn: |-
              グループ種別、```Corporation```または```Group```

              * ```Corporation```： タイプは Corporation
              * ```Group```： タイプは Group

          example: Group
          schema:
            enum:
              - Corporation
              - Group
            type: string
        - name: tags
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Tags, perfect match
            jpn: |-
              グループタグ、完全一致

          example: hoge
          schema:
            minLength: 0
            maxLength: 255
            pattern: .{0,255}
            type: string
        - name: label
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Label, perfect match
            jpn: |-
              自由記述項目のキー、完全一致

          example: valueB
          schema:
            minLength: 0
            maxLength: 255
            pattern: .{0,255}
            type: string
        - name: domain
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Domain, perfect match
            jpn: |-
              ドメイン、完全一致

          example: example.com
          schema:
            minLength: 0
            maxLength: 255
            pattern: .{0,255}
            type: string
        - name: page
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of pages, 1 or more
              ※ If ```offset``` is set, ```offset``` takes precedence
            jpn: |-
              ページネーション、1以上
              ※ ```offset```が設定されている場合、```offset```が優先される

          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of items to be skipped, 0 or more
            jpn: |-
              取得を開始する位置、0以上

          example: 0
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of items to be included in the result
              1 or more and less than 1000
            jpn: |-
              ページあたりの返却件数
              1以上1000以下

          example: 1
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: order_by
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Field to be sorted
              Only accept display_name
              * ```display_name```： Order by ```display_name```
            jpn: |-
              ソート項目
              display_nameのみ指定可
              * ```display_name```： 注文方法 ```display_name```

          example: display_name
          schema:
            enum:
              - display_name
            type: string
        - name: order
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Sort direction

              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順

              * ```asc```：昇順
              * ```desc```：降順

          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: category
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Group joining form
              ```member``` or ```guest```

              * ```member```： Fill by corporation you belong to
              * ```guest```： Fill by participating corporations/groups
            jpn: |-
              参加形態（所属または参加）

              * ```member```：所属している企業で絞り込み
              * ```guest```：参加している企業/グループで絞り込み

          example: member
          schema:
            enum:
              - member
              - guest
            type: string
        - name: parent_group_id
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Parent group ID
              UUID Format
            jpn: |-
              親グループID
              UUID形式

          example: b18a99f0-4f07-40ff-94ad-b366623a84f4
          schema:
            format: uuid
            type: string
        - name: includes
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Additional information to include in a response
              Separate items with a comma to specify multiple items

              ```children```：if you have a child group, specify ```children``` key to obtain an array of ```id``` and ```name```
            jpn: |-
              レスポンスに追加で含める情報
              複数指定する場合はカンマ区切りで指定

              ```children```：子グループを持つ場合、```children```のキーで子グループの```id```と```name```の配列を返す

          example:
            - children
          schema:
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetGroups'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_24
      security:
        - BearerAuth: []
  /v2/groups/{group_id}:
    patch:
      operationId: GroupsController_updateGroup
      x-hidden-in: internal
      summary: Update Group
      description: |-

        :::x-description-i18n:
        eng: |-
          * Update a specified group partially

          ### EXECUTION PERMISSION

            * The participating group role is ```super_admin```

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              group.write
        jpn: |-
          * 指定したidのグループ情報を更新する

          ### EXECUTION PERMISSION

            * 参加グループの role が ```super_admin``` であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              group.write

      parameters:
        - name: group_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID

          example: c8a17724-caeb-4233-b8d8-ba38690a113d
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchGroupsBodyDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PatchGroups'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_24
      security:
        - BearerAuth: []
    get:
      operationId: GroupsController_getGroupById
      x-hidden-in: internal
      summary: Read Group
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a specified group

          ### EXECUTION PERMISSION

            * Being a participating group

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              group.read
        jpn: |-
          * 指定したidのグループ情報を取得する

          ### EXECUTION PERMISSION

            * 参加グループであること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              group.read

      parameters:
        - name: group_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Group ID (UUID)
            jpn: |-
              グループID (UUID)

          example: eb73e291-391f-4972-8617-01613b1d9831
          schema:
            format: uuid
            type: string
        - name: includes
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Additional information to include in a response
              If specifying multiple, separate them with commas
              ```children```: if a group has a child group, specify ```children``` key to obtain an aray of ```id``` and ```name```
            jpn: |-
              レスポンスに追加で含める情報
              複数指定する場合はカンマ区切りで指定
              ```children```：子グループを持つ場合、```children```のキーで子グループの```id```と```name```の配列を返す

          example: children
          schema:
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetGroupsGroupId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_24
      security:
        - BearerAuth: []
    put:
      operationId: GroupsController_replaceGroup
      x-hidden-in: internal
      summary: Replace Groups
      description: |-

        :::x-description-i18n:
        eng: |-
          * Update specified Group

          ### EXECUTION PERMISSION

            * The participating group role is ```super_admin```

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              group.write
        jpn: |-
          * 指定したidのグループ情報を更新する

          ### EXECUTION PERMISSION

            * 参加グループの role が ```super_admin``` であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              group.write

      parameters:
        - name: group_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID

          example: c8a17724-caeb-4233-b8d8-ba38690a113d
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PutGroupsBodyDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PutGroups'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_24
      security:
        - BearerAuth: []
  /v2/groups/all:
    get:
      operationId: GroupsController_getGroupListAll
      x-internal: true
      summary: List Groups All
      description: |

        :::x-description-i18n:
        eng: |-
          * Get a list of groups or corporations which a user belongs to
            * Corporation that the user belongs to
            * Group that the user joins

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              group.read.all
        jpn: |-
          * 操作しているユーザーがアクセス可能なグループ一覧を取得する
            * 自身の所属している企業
            * 自身の参加しているグループ

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              group.read.all
      parameters:
        - name: name
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Group name, partial match
            jpn: |-
              グループ名、部分一致

          example: 営業
          schema:
            minLength: 0
            maxLength: 255
            pattern: .{0,255}
            type: string
        - name: state
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              State, partial match
            jpn: |-
              都道府県、部分一致

          example: 東京
          schema:
            minLength: 0
            maxLength: 255
            pattern: .{0,255}
            type: string
        - name: city
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              City/Town/Village, partial match
            jpn: |-
              市区町村、部分一致

          example: 港区
          schema:
            minLength: 0
            maxLength: 255
            pattern: .{0,255}
            type: string
        - name: address_1
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 1, partial match
            jpn: |-
              住所1、部分一致

          example: 海岸
          schema:
            minLength: 0
            maxLength: 255
            pattern: .{0,255}
            type: string
        - name: address_2
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 2, partial match
            jpn: |-
              住所2、部分一致

          example: 汐留ビ
          schema:
            minLength: 0
            maxLength: 255
            pattern: .{0,255}
            type: string
        - name: type
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Type of a group, ```Corporation``` or ```Group```

              * ```Corporation```： Type is Corporation
              * ```Group```： Type is Group
            jpn: |-
              グループ種別、```Corporation```または```Group```

              * ```Corporation```： タイプは Corporation
              * ```Group```： タイプは Group

          example: Group
          schema:
            enum:
              - Corporation
              - Group
            type: string
        - name: tags
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Tags, perfect match
            jpn: |-
              グループタグ、完全一致

          example: hoge
          schema:
            minLength: 0
            maxLength: 255
            pattern: .{0,255}
            type: string
        - name: label
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Label, perfect match
            jpn: |-
              自由記述項目のキー、完全一致

          example: valueB
          schema:
            minLength: 0
            maxLength: 255
            pattern: .{0,255}
            type: string
        - name: domain
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Domain, perfect match
            jpn: |-
              ドメイン、完全一致

          example: example.com
          schema:
            minLength: 0
            maxLength: 255
            pattern: .{0,255}
            type: string
        - name: page
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of pages, 1 or more
              ※ If ```offset``` is set, ```offset``` takes precedence
            jpn: |-
              ページネーション、1以上
              ※ ```offset```が設定されている場合、```offset```が優先される

          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of items to be skipped, 0 or more
            jpn: |-
              取得を開始する位置、0以上

          example: 0
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of items to be included in the result
              1 or more and less than 1000
            jpn: |-
              ページあたりの返却件数
              1以上1000以下

          example: 1
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: order_by
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Field to be sorted
              Only accept display_name
              * ```display_name```： Order by ```display_name```
            jpn: |-
              ソート項目
              display_nameのみ指定可
              * ```display_name```： 注文方法 ```display_name```

          example: display_name
          schema:
            enum:
              - display_name
            type: string
        - name: order
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Sort direction

              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順

              * ```asc```：昇順
              * ```desc```：降順

          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: category
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Group joining form
              ```member``` or ```guest```

              * ```member```： Fill by corporation you belong to
              * ```guest```： Fill by participating corporations/groups
            jpn: |-
              参加形態（所属または参加）

              * ```member```：所属している企業で絞り込み
              * ```guest```：参加している企業/グループで絞り込み

          example: member
          schema:
            enum:
              - member
              - guest
            type: string
        - name: parent_group_id
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Parent group ID
              UUID Format
            jpn: |-
              親グループID
              UUID形式

          example: b18a99f0-4f07-40ff-94ad-b366623a84f4
          schema:
            format: uuid
            type: string
        - name: includes
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Additional information to include in a response
              Separate items with a comma to specify multiple items

              ```children```：if you have a child group, specify ```children``` key to obtain an array of ```id``` and ```name```
            jpn: |-
              レスポンスに追加で含める情報
              複数指定する場合はカンマ区切りで指定

              ```children```：子グループを持つ場合、```children```のキーで子グループの```id```と```name```の配列を返す

          example:
            - children
          schema:
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetGroups'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_24
      security:
        - BearerAuth: []
  /v2/groups/{group_id}/invites:
    post:
      operationId: InvitesController_createGroupInvite
      x-hidden-in: internal
      summary: Create Group Invite
      description: |-

        :::x-description-i18n:
        eng: |-
          * Invite existing user to group as ```guest```
          * If the user belongs to or participates in the company that owns the group being invited, the user will be automatically added to the group after being invited (this flow will be referred to as automatic approval from now on).
          * Notification email will be sent to the invited user
          * However, in the case of automatic approval, an invitation notification email will not be sent.

          ### EXECUTION PERMISSION

            * The participating group role must be more than ```manager```

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              group.write
        jpn: |-
          * グループに既存ユーザーを```guest```として招待する
          * 招待対象のグループを所有する企業に所属、または参加しているユーザーの場合は招待後、自動的にグループに追加する(このフローを以降は自動承認と呼ぶ)
          * 招待されたユーザーには招待の通知メールが送付される
          * ただし、自動承認の場合は招待の通知メールは送付されない

          ### EXECUTION PERMISSION

            * 参加グループの role が ```manager```以上 であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              group.write

      parameters:
        - name: group_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID
          example: 77743f25-5362-4f09-b9ff-57e42031daee
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostGroupsGroupIdInvitesBodyDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostGroupsGroupIdInvites'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_25
        - Group API
      security:
        - BearerAuth: []
    get:
      operationId: InvitesController_getGroupInvite
      x-hidden-in: internal
      summary: Get Group Invite List
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a list of invitation information for users invited to a group

          ### EXECUTION PERMISSION

            * Being a participating group

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              group.read

        jpn: |-
          * グループに招待したユーザーの招待情報一覧を取得する

          ### EXECUTION PERMISSION

            * 参加グループであること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              group.read

      parameters:
        - name: group_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID
          schema:
            format: uuid
            type: string
        - name: user_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID
          schema:
            format: uuid
            type: string
        - name: page
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Pagination
              * If offset is set, offset takes precedence
            jpn: |-
              ページネーション
              * offsetが設定されている場合、offsetが優先される
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Position to start acquisition
            jpn: |-
              取得を開始する位置
          schema:
            minimum: 0
            type: integer
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Number of returns per page
            jpn: |-
              ページあたりの返却件数
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort order
              * ```asc```: Ascending order
              * ```desc```: Descending order
            jpn: |-
              ソート順
              * ```asc```: 昇順
              * ```desc```: 降順
          schema:
            enum:
              - asc
              - desc
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```

          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetGroupsGroupIdInvites'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_25
      security:
        - BearerAuth: []
  /v2/groups/{group_id}/invites/{invite_code}:
    patch:
      operationId: InvitesController_updateGroupInvite
      x-internal: true
      summary: Update Group Invite
      description: |

        :::x-description-i18n:
        eng: |-
          * Accept or decline invitations from groups
          * A notification email will be sent to the invited users to inform them of the approval/rejection results.

          ### EXECUTION PERMISSION

            * Invited (linked to the invitation code) User

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              group.write

        jpn: |-
          * グループからの招待を承認、または否認をする
          * 招待したユーザーには承認・否認の結果を知らせる通知メールが送付される

          ### EXECUTION PERMISSION

            * 招待されている（招待コードに紐づく） user であること

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              group.write
      parameters:
        - name: group_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID
          example: ag241ab7-3583-47m4-1h7d-3231177441e4
          schema:
            format: uuid
            type: string
        - name: invite_code
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Invite code
            jpn: |-
              招待コード
          example: z63jwDp9u0c
          schema:
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2PatchGroupsGroupIdInvitesInviteCodeBodyDto
            examples:
              Update Group Invite:
                value:
                  accept: true
                description: This is update group invite example
      responses:
        '200':
          description: OK
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_25
      security:
        - BearerAuth: []
  /v2/oauth2_clients/scopes:
    get:
      operationId: Oauth2ClientsController_getScopes
      x-internal: true
      summary: Get Scopes
      description: Get scopes of all application_types and specific application_type
      parameters:
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetScopesEntity'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_26
        - Client API
      security:
        - BearerAuth: []
  /v2/oauth2_clients:
    post:
      operationId: Oauth2ClientsController_createClient
      x-internal: true
      summary: Create Client
      description: |

        :::x-description-i18n:
        eng: |-
          * Register Client of OAuth 2.0/OpenID Connect

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client
          ### REQUIRED SCOPES
              oauth2_client.write
        jpn: |-
          * OAuth 2.0/OpenID ConnectのClientを登録する

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント
          ### REQUIRED SCOPES
              oauth2_client.write
      parameters:
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostClientBodyDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostClient'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes or permission_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_26
      security:
        - BearerAuth: []
    get:
      operationId: Oauth2ClientsController_listOauth2Client
      x-internal: true
      summary: List Oauth Clients
      description: |-

        :::x-description-i18n:
        eng: |-
          * OAuth 2.0/OpenID Connect Client List

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client

          ### REQUIRED SCOPES
              oauth2_client.read
        jpn: |-
          * OAuth 2.0/OpenID ConnectのClient一覧

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント

          ### REQUIRED SCOPES
              oauth2_client.read

      parameters:
        - name: name
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Client name
            jpn: |-
              クライアント名

          example: client-1
          schema:
            minLength: 0
            maxLength: 255
            type: string
        - name: client_type
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Client type. Narrow down clients that include the specified item

                * ```web```： Web type
                * ```js```： JavaScript type
                * ```native```： Native type
                * ```device```： Device type
                * ```client```： Client type
            jpn: |-
              アプリケーションタイプ。指定したものが含まれるクライアントを絞りこめる

                * ```web```：ウェブ
                * ```js```：JavaScript
                * ```native```： ネイティブ
                * ```device```： デバイス
                * ```client```： クライアント

          example: web
          schema:
            enum:
              - web
              - js
              - native
              - device
              - client
            type: string
        - name: owner_id
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Owner UUID
            jpn: |-
              所有者のUUID

          example: 7d23f87c-9246-4c17-856f-93ec08c007ad
          schema:
            format: uuid
            type: string
        - name: active
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Is the client valid?

              * ```true```： Valid
              * ```false```： Invalid
            jpn: |-
              クライアントが有効かどうか

              * ```true```： 有効
              * ```false```： 無効

          example: 'true'
          schema:
            type: boolean
        - name: offset
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Position to start acquisition
            jpn: |-
              取得を開始する位置

          example: 0
          schema:
            minimum: 0
            type: integer
        - name: page
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Pagination

              ※ If pass ```offset```, ```offset``` has priority
            jpn: |-
              ページネーション

              ※```offset```が設定されている場合、```offset```が優先される

          example: 1
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of items per page
            jpn: |-
              ページあたりの返却件数

          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: order_by
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Only ```display_name``` can be specificed as sort item
            jpn: |-
              ソート項目、```display_name```のみ指定可

          example: display_name
          schema:
            enum:
              - display_name
            type: string
        - name: order
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Sort order.

              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順。

              * ```asc```：昇順
              * ```desc```：降順

          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2ListOauth2Clients'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_26
      security:
        - BearerAuth: []
  /v2/oauth2_clients/all:
    post:
      operationId: Oauth2ClientsController_createClientAll
      x-internal: true
      summary: Create Client All
      description: |

        :::x-description-i18n:
        eng: |-
          * Register Client of OAuth 2.0/OpenID Connect

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              oauth2_client.write.all
        jpn: |-
          * OAuth 2.0/OpenID ConnectのClientを登録する

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              oauth2_client.write.all
      parameters:
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostClientBodyDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostClient'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes or permission_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_26
      security:
        - BearerAuth: []
  /v2/oauth2_clients/{client_id}:
    get:
      operationId: Oauth2ClientsController_getClientById
      x-internal: true
      summary: Read Client
      description: |

        :::x-description-i18n:
        eng: |-
          * Get a specified client

          ### SUPPORTED APPLICATION TYPES
              Web, Native
          ### REQUIRED SCOPES
              oauth2_client.read
        jpn: |-
          * 指定したidのclient情報を取得する

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ
          ### REQUIRED SCOPES
              oauth2_client.read
      parameters:
        - name: client_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID. UUID format.
            jpn: |-
              クライアントID(UUID)
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetClientsClientId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes or permission_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_26
      security:
        - BearerAuth: []
    delete:
      operationId: Oauth2ClientsController_deleteClient
      x-internal: true
      summary: Delete Client
      description: |

        :::x-description-i18n:
        eng: |-
          * Delete Client of OAuth 2.0/OpenID

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client
          ### REQUIRED SCOPES
              oauth2_client.write
        jpn: |-
          * OAuth 2.0/OpenID ConnectのClientの削除

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント
          ### REQUIRED SCOPES
              oauth2_client.write
      parameters:
        - name: client_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID
          example: e94b4476-4822-4c04-93ff-c58c8348c73f
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes or permission_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_26
      security:
        - BearerAuth: []
    patch:
      operationId: Oauth2ClientsController_patchClient
      x-internal: true
      summary: Patch Client
      description: |

        :::x-description-i18n:
        eng: |-
          * Update Client of OAuth 2.0/OpenID Connect

          ### SUPPORTED APPLICATION TYPES
              Web

          ### REQUIRED SCOPES
              oauth2_client.write

        jpn: |-
          * OAuth 2.0/OpenID ConnectのClientの更新

          ### SUPPORTED APPLICATION TYPES
              Web

          ### REQUIRED SCOPES
              oauth2_client.write
      parameters:
        - name: client_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchOauth2ClientsClientIdBodyDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PatchClientsClientId'
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes or permission_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_26
      security:
        - BearerAuth: []
  /v2/oauth2_clients/{client_id}/all:
    get:
      operationId: Oauth2ClientsController_getClientByIdAll
      x-internal: true
      summary: Read Client All
      description: |

        :::x-description-i18n:
        eng: |-
          * Get client information of specified ID

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              oauth2_client.read.all
        jpn: |-
          * 指定したidのclient情報を取得する

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              oauth2_client.read.all
      parameters:
        - name: client_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID. UUID format.
            jpn: |-
              クライアントID(UUID)
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetClientsClientId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes or permission_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_26
      security:
        - BearerAuth: []
    patch:
      operationId: Oauth2ClientsController_patchClientAll
      x-internal: true
      summary: Patch client All
      description: |

        :::x-description-i18n:
        eng: |-
          * Update Client of OAuth 2.0/OpenID Connect

          ### SUPPORTED APPLICATION TYPES
              Client
          ### REQUIRED SCOPES
              oauth2_client.write.all
        jpn: |-
          * OAuth 2.0/OpenID ConnectのClientの更新

          ### SUPPORTED APPLICATION TYPES
              クライアント
          ### REQUIRED SCOPES
              oauth2_client.write.all
      parameters:
        - name: client_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchOauth2ClientsClientIdBodyDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PatchClientsClientId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_26
      security:
        - BearerAuth: []
  /v2/subscriptions:
    post:
      operationId: SubscriptionsController_createSubscription
      x-internal: true
      summary: Create Subscription
      description: |-

        :::x-description-i18n:
        eng: |-

          * Create subscription

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client

          ### REQUIRED SCOPES
              license.write_internal
        jpn: |-
          * Subscriptionを作成する

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント

          ### REQUIRED SCOPES
              license.write_internal

      parameters:
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostSubscriptionsBodyDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostSubscriptions'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_27
        - Subscription API
      security:
        - BearerAuth: []
    get:
      operationId: SubscriptionsController_getSubscriptionList
      x-internal: true
      summary: Get List Subscriptions
      description: |

        :::x-description-i18n:
        eng: |-
          * Get subscription list

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client

          ### REQUIRED SCOPES
              license.read_internal

        jpn: |-
          * サブスクリプション一覧を取得

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント

          ### REQUIRED SCOPES
              license.read_internal
      parameters:
        - name: owner_type
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Owner type
              * ```Corporation```: Corporation type
              * ```User```: User type
            jpn: |-
              オーナー種別
              * ```Corporation```: 企業
              * ```User```: ユーザー
          example: Corporation
          schema:
            enum:
              - Corporation
              - User
            type: string
        - name: owner_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Owner ID, UUID of ```Corporation``` or ```User```
            jpn: |-
              オーナーID, ```Corporation```または```User```のUUID
          example: c8a17724-caeb-4233-b8d8-ba38690a113d
          schema:
            format: uuid
            type: string
        - name: item_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Item ID, less than 255 characters
            jpn: |-
              商材ID, 255文字以下
          example: 5b3fa7ba-57d3-4017-a65b-d57dcd2db643
          schema:
            type: string
        - name: plan_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Plan ID, less than 255 characters
            jpn: |-
              プランID, 255文字以下
          example: 5b3fa7ba-57d3-4017-a65b-d57dcd2db643
          schema:
            type: string
        - name: client_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID
          example: 7ce7399b-3fb5-4e4c-8f0e-75e9d5b256e4
          schema:
            format: uuid
            type: string
        - name: provider_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Provider ID
            jpn: |-
              プロバイダID
          example: cf221ab7-9272-48e9-b8ce-433397744185
          schema:
            format: uuid
            type: string
        - name: contract_type
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Contract type
              * ```outright```: outright purchase
              * ```prepaid```: prepaid
              * ```automatic_updating_flat_rate```: Automatic continuation (fixed)
              * ```automatic_updating_measured_rate```: Automatic continuation (measured)
            jpn: |-
              契約の種別
              * ```outright```: 買い切り
              * ```prepaid```: プリペイド
              * ```automatic_updating_flat_rate```: 自動継続(固定)
              * ```automatic_updating_measured_rate```: 自動継続(従量)
          example: outright
          schema:
            enum:
              - outright
              - prepaid
              - automatic_updating_flat_rate
              - automatic_updating_measured_rate
            type: string
        - name: license_type
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              License type
              * ```Corporation```: Corporation
              * ```User```: User
              * ```Device```: Device
              * ```Assignless```: No license assignment required
            jpn: |-
              ライセンス種別
              * ```Corporation```: 企業
              * ```User```: ユーザー
              * ```Device```: デバイス
              * ```Assignless```: ライセンス割当て不要

          example: Corporation
          schema:
            enum:
              - Corporation
              - User
              - Device
              - Assignless
            type: string
        - name: status
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              status
              * ```active```: active
              * ```inactive```: inactive
              * ```owner_absent```: owner absent
              * ```suspend```: suspend
            jpn: |-
              ステータス
              * ```active```: 有効
              * ```inactive```: 無効
              * ```owner_absent```: 所有者不在
              * ```suspend```: 一時停止
          example: active
          schema:
            enum:
              - active
              - inactive
              - owner_absent
              - suspend
            type: string
        - name: purchased_at_from
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Purchase date and time start
            jpn: |-
              購入日時開始
          example: 2017-01-01T00:00:00z
          schema:
            format: ISO8601
            type: string
        - name: purchased_at_to
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Purchase date and time end
            jpn: |-
              購入日時終了
          example: 2017-01-01T00:00:00z
          schema:
            format: ISO8601
            type: string
        - name: issued_at_from
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Publication date and time start
            jpn: |-
              発行日時開始
          example: 2017-01-01T00:00:00z
          schema:
            format: ISO8601
            type: string
        - name: issued_at_to
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Publication date and time end
            jpn: |-
              発行日時終了
          example: 2017-01-01T00:00:00z
          schema:
            format: ISO8601
            type: string
        - name: expires_at_from
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Expiration date and time start
            jpn: |-
              期限切れ日時開始
          example: 2017-01-01T00:00:00z
          schema:
            format: ISO8601
            type: string
        - name: expires_at_to
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Expiration date and time end
            jpn: |-
              期限切れ日時終了
          example: 2017-01-01T00:00:00z
          schema:
            format: ISO8601
            type: string
        - name: status_change_at_from
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Status update date and time start
            jpn: |-
              ステータス更新日時開始
          example: 2017-01-01T00:00:00z
          schema:
            format: ISO8601
            type: string
        - name: status_change_at_to
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Status update date and time end
            jpn: |-
              ステータス更新日時終了
          example: 2017-01-01T00:00:00z
          schema:
            format: ISO8601
            type: string
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Position to start acquisition
            jpn: |-
              取得を開始する位置
          example: 1
          schema:
            minimum: 0
            type: integer
        - name: page
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Pagination, when ```offset``` is set to a value greater than or equal to 1, ```offset``` takes precedence
            jpn: |-
              ページネーション、1以上 ※```offset```が設定されている場合、```offset```が優先される
          example: 1
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              The number of returns per page
            jpn: |-
              １ページあたりの返却件数
          example: 100
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: order_by
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort item, ```quantity```, ```purchased_at```, ```issued_at```, ```expires_at```, ```status_change_at``` only can be specified
            jpn: |-
              ソート項目、内部管理ID順、```quantity```、```purchased_at```、```issued_at```、```expires_at```、```status_change_at```のみ指定可
          example: quantity
          schema:
            enum:
              - quantity
              - purchased_at
              - issued_at
              - expires_at
              - status_change_at
            type: string
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort order
              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順
              * ```asc```：昇順
              * ```desc```：降順
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetSubscriptions'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_27
      security:
        - BearerAuth: []
  /v2/subscriptions/{subscription_id}:
    put:
      operationId: SubscriptionsController_replaceSubscription
      x-internal: true
      summary: Replace Subscription
      description: |-

        :::x-description-i18n:
        eng: |-
          * Replace Subscription

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client

          ### REQUIRED SCOPES
              license.write_internal
        jpn: |-
          * Subscription 交換する

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント

          ### REQUIRED SCOPES
              license.write_internal

      parameters:
        - name: subscription_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプションID

          example: 9bf9c8fc-9f28-48d5-b2f9-e011aecdeb6e
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PutSubscriptionsBodyDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PutSubscriptions'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_27
      security:
        - BearerAuth: []
    delete:
      operationId: SubscriptionsController_deleteSubscription
      x-internal: true
      summary: Delete Subscription
      description: |

        :::x-description-i18n:
        eng: |-
          * Delete subscription

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client

          ### REQUIRED SCOPES
              license.write_internal

        jpn: |-
          * サブスクリプション削除

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント

          ### REQUIRED SCOPES
              license.write_internal
      parameters:
        - name: subscription_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription ID

            jpn: |-
              サブスクリプション ID
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_27
      security:
        - BearerAuth: []
    patch:
      operationId: SubscriptionsController_updateSubscription
      x-internal: true
      summary: Update Subscription
      description: |

        :::x-description-i18n:
        eng: |-
          * Update Subscription

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client

          ### REQUIRED SCOPES
              license.write_internal

        jpn: |-
          * Subscriptionを更新する

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント

          ### REQUIRED SCOPES
              license.write_internal
      parameters:
        - name: subscription_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプションID

          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PatchSubscriptionsSubscriptionIdBodyDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PatchSubscriptionsSubscriptionId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_27
      security:
        - BearerAuth: []
    get:
      operationId: SubscriptionsController_getSubscription
      x-internal: true
      summary: Read Subscription
      description: |

        :::x-description-i18n:
        eng: |-
          * Get specific information of subscription

          ### SUPPORTED APPLICATION TYPES

              Web, Native, Client

          ### REQUIRED SCOPES

              license.read_internal

        jpn: |-
          * 特定のSubscription情報を取得する

          ### SUPPORTED APPLICATION TYPES

              Web, ネイティブ, クライアント

          ### REQUIRED SCOPES

              license.read_internal
      parameters:
        - name: subscription_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプションID
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetSubscriptionsSubscriptionId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_27
      security:
        - BearerAuth: []
  /v2/subscriptions/{subscription_id}/licenses/{license_id}:
    put:
      operationId: LicensesController_repulaceLicense
      x-internal: true
      summary: Replace License
      description: |

        :::x-description-i18n:
        eng: |-
          * Replace a license

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client

          ### REQUIRED SCOPES
              license.write_internal

        jpn: |-
          * Licenseを置き換えます

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント

          ### REQUIRED SCOPES
              license.write_internal
      parameters:
        - name: subscription_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプションID

          schema:
            format: uuid
            type: string
        - name: license_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              License ID
            jpn: |-
              ライセンスID
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2PutSubscriptionsSubscriptionIDLicensesLicenseIDBodyDto
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2PutSubscriptionsSubscriptionIDLicensesLicenseID
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_28
        - Subscription API
      security:
        - BearerAuth: []
    patch:
      operationId: LicensesController_updateLicense
      x-internal: true
      summary: Update License
      description: |

        :::x-description-i18n:
        eng: |-
          * Update license

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client

          ### REQUIRED SCOPES
              license.write_internal

        jpn: |-
          * Licenseを更新する

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント

          ### REQUIRED SCOPES
              license.write_internal
      parameters:
        - name: subscription_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription ID

            jpn: |-
              サブスクリプションID
          example: aa11a4c2-a467-43db-b413-c4ab0f5cf627
          schema:
            format: uuid
            type: string
        - name: license_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              License ID

            jpn: |-
              ライセンスID
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2PatchSubscriptionsSubscriptionIdLicensesLicenseIdBodyDto
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2PatchSubscriptionsSubscriptionIdLicensesLicenseId
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_28
      security:
        - BearerAuth: []
    delete:
      operationId: LicensesController_deleteLicense
      x-internal: true
      summary: Delete License
      description: |

        :::x-description-i18n:
        eng: |-
          * Delete license.

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client
          ### REQUIRED SCOPES
              license.write_internal
        jpn: |-
          * ライセンスを削除する

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント
          ### REQUIRED SCOPES
              license.write_internal
      parameters:
        - name: subscription_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプション ID
          example: d15a53b0-0302-43a3-bd44-49eebb41e76f
          schema:
            format: uuid
            type: string
        - name: license_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              License ID
            jpn: |-
              ライセンス ID
          example: 324f8aea-7578-401c-9927-41f27818f5c9
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_28
      security:
        - BearerAuth: []
    get:
      operationId: LicensesController_getLicense
      x-internal: true
      summary: Read License
      description: |

        :::x-description-i18n:
        eng: |-
          * Read License

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client

          ### REQUIRED SCOPES
              license.read_internal

        jpn: |-
          * Licenseを読み取る

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント

          ### REQUIRED SCOPES
              license.read_internal
      parameters:
        - name: subscription_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプションID
          example: d15a53b0-0302-43a3-bd44-49eebb41e76f
          schema:
            format: uuid
            type: string
        - name: license_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              License ID
            jpn: |-
              ライセンスID
          example: 324f8aea-7578-401c-9927-41f27818f5c9
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2GetSubscriptionsSubscriptionIdLicensesLicenseId
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_28
      security:
        - BearerAuth: []
  /v2/subscriptions/{subscription_id}/licenses:
    post:
      operationId: LicensesController_createLicense
      x-internal: true
      summary: Create License
      description: |-

        :::x-description-i18n:
        eng: |-
          * Create a license

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client

          ### REQUIRED SCOPES
              license.write_internal
        jpn: |-
          * Licenseを作成する

          ### SUPPORTED APPLICATION TYPES
            Web, ネイティブ, クライアント

          ### REQUIRED SCOPES
              license.write_internal

      parameters:
        - name: subscription_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプションID

          example: 9bf9c8fc-9f28-48d5-b2f9-e011aecdeb6e
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2PostSubscriptionsSubscriptionIdLicensesBodyDto
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostSubscriptionsSubscriptionIdLicenses'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_28
      security:
        - BearerAuth: []
    delete:
      operationId: LicensesController_bulkDeleteLicenses
      x-internal: true
      summary: Bulk Delete Licenses
      description: |-

        :::x-description-i18n:
        eng: |-
          * Bulk delete licenses

          ### SUPPORTED APPLICATION TYPES
              Web, Native, Client

          ### REQUIRED SCOPES
              license.write_internal

        jpn: |-
          * Licensesを削除する

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ, クライアント

          ### REQUIRED SCOPES
              license.write_internal

      parameters:
        - name: subscription_id
          required: true
          in: path
          description: |-

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプションID

          example: 15c30cf9-d30f-4a06-9dde-58915f4a347b
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/V2DeleteSubscriptionsSubscriptionIdLicensesBodyDto
      responses:
        '204':
          description: No Content
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_28
      security:
        - BearerAuth: []
    get:
      operationId: LicensesController_getListLicenses
      x-internal: true
      summary: Get List Licenses
      description: |

        :::x-description-i18n:
        eng: |-
          * The license associated with the subscription

          ### SUPPORTED APPLICATION TYPES

              Web, Native, Client

          ### REQUIRED SCOPES

              license.read_internal
        jpn: |-
          * サブスクリプションに紐づくライセンス

          ### SUPPORTED APPLICATION TYPES

              Web, ネイティブ, クライアント

          ### REQUIRED SCOPES

              license.read_internal
      parameters:
        - name: subscription_id
          required: true
          in: path
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプションID
          example: 9bf9c8fc-9f28-48d5-b2f9-e011aecdeb6e
          schema:
            format: uuid
            type: string
        - name: subject_type
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              License type
              * ```Corporation```: Corporation
              * ```User```: User
              * ```Device```: Device
            jpn: |-
              ライセンス種別
              * ```Corporation```: 企業
              * ```User```:  ユーザー
              * ```Device```:  デバイス
          example: User
          schema:
            enum:
              - Corporation
              - User
              - Device
            type: string
        - name: subject_id
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Identifier for license assignment, UUID of ```Corporation```, ```User``` or ```Device```
            jpn: |-
              ライセンス割当対象の識別子, ```Corporation```または```User```または```Device```のUUID
          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            format: uuid
            type: string
        - name: issued_at_from
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Publication date and time start
            jpn: |-
              発行日時開始
          example: '2017-01-01T00:00:00Z'
          schema:
            format: ISO8601
            type: string
        - name: issued_at_to
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Publication date and time end
            jpn: |-
              発行日時終了
          example: '2017-01-01T00:00:00Z'
          schema:
            format: ISO8601
            type: string
        - name: expires_at_from
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Expiration date and time start
            jpn: |-
              期限切れ日時開始
          example: '2018-01-01T00:00:00Z'
          schema:
            format: ISO8601
            type: string
        - name: expires_at_to
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Expiration date and time end
            jpn: |-
              期限切れ日時終了
          example: '2018-01-01T00:00:00Z'
          schema:
            format: ISO8601
            type: string
        - name: offset
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Position to start acquisition
            jpn: |-
              取得を開始する位置
          example: '0'
          schema:
            minimum: 0
            type: integer
        - name: page
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Pagination, when ```offset``` is set to a value greater than or equal to 1, ```offset``` takes precedence
            jpn: |-
              ページネーション、1以上 ※```offset```が設定されている場合、```offset```が優先される
          example: 1
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              The number of returns per page
            jpn: |-
              １ページあたりの返却件数
          example: 100
          schema:
            minimum: 1
            maximum: 1000
            default: 100
            type: integer
        - name: order_by
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort item, ```issued_at```, ```expires_at``` only can be specified
            jpn: |-
              都道府県。
          example: issued_at
          schema:
            default: issued_at
            enum:
              - issued_at
              - expires_at
            type: string
        - name: order
          required: false
          in: query
          description: |

            :::x-description-i18n:
            eng: |-
              Sort order

              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順

              * ```asc```：昇順
              * ```desc```：降順
          example: asc
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: Authorization
          in: header
          description: |

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetSubscriptionsSubscriptionIdLicenses'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_28
      security:
        - BearerAuth: []
  /v2/acls:
    post:
      operationId: AclsController_createAcl
      x-hidden-in: internal
      x-internal: true
      summary: Create Acls
      description: |-

        :::x-description-i18n:
        eng: |-
          * Get a list of corporation users

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          ### REQUIRED SCOPES
              acl.write
        jpn: |-
          * アクセスコントロールの作成

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          ### REQUIRED SCOPES
              acl.write

      parameters:
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2PostAclsBodyDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2PostAcls'
      tags: &ref_29
        - Access Control List API
      security:
        - BearerAuth: []
    get:
      operationId: AclsController_listAcl
      x-hidden-in: internal
      x-internal: true
      summary: List Acl
      description: |-

        :::x-description-i18n:
        eng: |-
          * List of Access Control List

          ### SUPPORTED APPLICATION TYPES
              Web, Native

          > 🖉 Note
          >
          > When accessing ```/v2/acls``` from inside the cluster using port 80, the internal endpoint (```/internal/acls```) is accessed. Internal endpoints can retrieve all access control lists.

          ### REQUIRED SCOPES
              acl.read

          > 🖉 Note
          >
          > Internal endpoints do not require specifying an access token
        jpn: |-
          * アクセスコントロールリスト一覧

          ### SUPPORTED APPLICATION TYPES
              Web, ネイティブ

          > 🖉 Note
          >
          > クラスタ内部から ```/v2/acls``` に80番ポートでアクセスすると、内部エンドポイント(```/internal/acls```) にアクセスするようになっている。 内部エンドポイントは、すべてのアクセスコントロールリストを取得することができる。

          ### REQUIRED SCOPES
              acl.read

          > 🖉 Note
          >
          > 内部エンドポイントは、アクセストークンの指定は不要

      parameters:
        - name: owner_id
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Owner ID
            jpn: |-
              オーナーID

          example: d7ca2a48-4c2b-4932-8a40-8210fc0637bf
          schema:
            format: uuid
            type: string
        - name: resource_id
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Resource ID
            jpn: |-
              リソースID

          example: 7ce7399b-3fb5-4e4c-8f0e-75e9d5b256e4
          schema:
            format: uuid
            type: string
        - name: resource_type
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Resource Type
            jpn: |-
              リソース種別

          example: oauth2_client
          schema:
            type: string
        - name: preset_id
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Preset ID
            jpn: |-
              プリセットID

          example: string
          schema:
            format: uuid
            type: string
        - name: user_id
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID

          example: c8a17724-caeb-4233-b8d8-ba38690a113d
          schema:
            format: uuid
            type: string
        - name: group_id
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID

          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            format: uuid
            type: string
        - name: role_id
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Role ID
            jpn: |-
              ロールID

          example: 55ca0a9d-f2f3-4ca5-87b6-4ec622a2bf88
          schema:
            format: uuid
            type: string
        - name: client_id
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライエントID

          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
          schema:
            format: uuid
            type: string
        - name: public
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Public Status
            jpn: |-
              公開状態

          example: true
          schema:
            type: boolean
        - name: actions
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Action
            jpn: |-
              アクション

          example: string
          schema:
            type: string
        - name: ip_address
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              IP address condition
            jpn: |-
              IPアドレス条件

          example: 192.168.0.1
          schema:
            type: string
        - name: latitude
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Latitude condition
            jpn: |-
              緯度条件

          example: '35.65702795'
          schema:
            type: string
        - name: longitude
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Longtitude condition
            jpn: |-
              経度条件

          example: '139.7626623'
          schema:
            type: string
        - name: altitude
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Altitude condition (m)
            jpn: |-
              高度条件 (m)

          example: '350'
          schema:
            type: string
        - name: datetime
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Date and time condition
            jpn: |-
              日時条件

          example: '2016-08-15T16:04:33+00:00'
          schema:
            type: string
        - name: day_week
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Day of the week condition

              * ```monday```: Monday
              * ```tuesday```: Tuesday
              * ```wednesday```: Wednesday
              * ```thursday```: Thursday
              * ```friday```: Friday
              * ```saturday```: Saturday
              * ```sunday```: Sunday
            jpn: |-
              曜日条件

              * ```monday```: 月曜日
              * ```tuesday```: 火曜日
              * ```wednesday```: 水曜日
              * ```thursday```: 木曜日
              * ```friday```: 金曜日
              * ```saturday```: 土曜日
              * ```sunday```: 日曜日

          example: monday
          schema:
            enum:
              - monday
              - tuesday
              - wednesday
              - thursday
              - friday
              - saturday
              - sunday
            type: string
        - name: offset
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of items to be skipped, 0 or more
            jpn: |-
              取得を開始する位置、0以上

          example: 0
          schema:
            minimum: 0
            type: integer
        - name: page
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Pagination
            jpn: |-
              ページネーション

          example: 1
          schema:
            minimum: 1
            default: 1
            type: integer
        - name: limit
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Number of items to be included in the result
            jpn: |-
              ページあたりの返却件数

          example: 1
          schema:
            minimum: 1
            default: 100
            type: integer
        - name: order_by
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Order by

              * ```resource_type``` or ```priority```
            jpn: |-
              ソート項目

              * ```resource_type``` ```priority```のみ指定可

          schema:
            enum:
              - resource_type
              - priority
            type: string
        - name: order
          required: false
          in: query
          description: |-

            :::x-description-i18n:
            eng: |-
              Sort direction
              * ```asc```： Ascending
              * ```desc```：Descending
            jpn: |-
              ソート順
              * ```asc```：昇順
              * ```desc```：降順

          example: asc
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: Authorization
          in: header
          description: '```Bearer <json_web_token>```'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetAcls'
      tags: *ref_29
      security:
        - BearerAuth: []
  /v2/agreements/{agreement_id}:
    get:
      operationId: AgreementsController_getAgreementById
      x-internal: true
      summary: Read Agreement
      description: 指定したidの利用規約を取得する
      parameters:
        - name: agreement_id
          required: true
          in: path
          description: 利用規約(UUID)
          schema:
            format: uuid
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetAgreementsAgreementId'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Agreement API
      security:
        - BearerAuth: []
  /v2/datastore/channels/{channel_id}/objects:
    post:
      operationId: ObjectsController_createObject
      x-internal: true
      x-hidden-in: internal
      summary: Create Object
      description: Objectを新規登録する。
      parameters:
        - name: channel_id
          required: true
          in: path
          description: チャネルID
          example: brpf5c73ivgff7iahkog
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: channel_protocol_id
          required: false
          in: query
          description: チャネルプロトコルID
          schema:
            pattern: ^[0-9a-v]{20}$
            default: チャンネルの設定に従う
            type: string
        - name: channel_protocol_version
          required: false
          in: query
          description: チャネルプロトコルバージョン。`channel_protocol_id`が必須。1以上
          schema:
            default: チャンネルの設定に従う
            type: number
        - name: session_id
          required: false
          in: query
          description: セッションID
          schema:
            pattern: ^(?!.{101,})([a-zA-Z0-9]+([-_.][a-zA-Z0-9]+)*)$
            type: string
        - name: location
          required: false
          in: query
          description: >-
            位置情報。`＜緯度＞,＜経度＞,＜高度＞`の形式。緯度:10進表記(-90°〜90°),経度:10進表記(-180°〜180°),高度:海抜(メートル)。location指定時
            緯度、経度必須、高度は任意指定。
          schema:
            pattern: ^(-?d*(.d*)?)(,-?d*(.d*)?){1,2}$
            type: string
        - name: timestamp
          required: false
          in: query
          description: 時間。UNIX時間(ナノ秒)
          example: '1675222667898003416'
          schema:
            pattern: ^d{19}$
            default: リクエスト時間
            type: string
        - name: label
          required: false
          in: query
          description: >-
            ラベル。key=valueの形式をURLエンコードしたもの。最大20個のlabelを同時に指定可能。keyとvalueは、labelを設定する場合、必須。key正規表現:^(?!.{51,})([a-zA-Z0-9]+([-_][a-zA-Z0-9]+)*)$,
            value正規表現:^.{1,50}$
          schema:
            pattern: ^(?!.{51,})([a-zA-Z0-9]+([-_][a-zA-Z0-9]+)*)=(.{1,50})$
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2PostDatastoreChannelsChannelIdObjectsResponse
        '400':
          description: >-
            invalid_request or invalid_context or validation_failed or
            quota_exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes or permission_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: &ref_30
        - Pubsub Datastore API
      security:
        - BearerAuth: []
    get:
      operationId: ObjectsController_listObjects
      x-hidden-in: internal
      x-internal: true
      summary: List Object
      description: Channelに紐づいたObject情報一覧を取得する。
      parameters:
        - name: channel_id
          required: true
          in: path
          description: チャネルID
          example: brpf5c73ivgff7iahkog
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: limit
          required: false
          in: query
          description: ページあたりの返却件数、1以上1000以下
          schema:
            minimum: 1
            maximum: 1000
            nullable: true
            default: 100
            type: integer
        - name: offset
          required: false
          in: query
          description: 取得を開始する位置、0以上
          schema:
            minimum: 0
            nullable: true
            type: integer
        - name: ascending
          required: false
          in: query
          description: timestampでのソート順序。trueの場合は昇順、falseの場合は降順
          schema:
            nullable: true
            default: false
            type: boolean
        - name: channel_protocol_id
          required: false
          in: query
          description: チャネルプロトコルのIDでの完全一致検索
          schema:
            pattern: ^[0-9a-v]{20}$
            nullable: true
            type: string
        - name: channel_protocol_version
          required: false
          in: query
          description: チャネルプロトコルのバージョンでの完全一致検索。channel_protocol_idが必須。1以上
          schema:
            nullable: true
            type: integer
        - name: session_id
          required: false
          in: query
          description: セッションIDでの完全一致検索
          schema:
            pattern: (?!.{101,})([a-zA-Z0-9]+([-_.][a-zA-Z0-9]+)*)
            nullable: true
            type: string
        - name: location
          required: false
          in: query
          description: >-
            緯度経度でのピンポイント検索。＜緯度＞,＜経度＞の形式。緯度:10進表記(-90°〜90°),経度:10進表記(-180°〜180°)。正規表現:/(-?(0|[1-9]d*)(.d*)?),(-?(0|[1-9]d*)(.d*)?)/
          schema:
            pattern: (-?(0|[1-9]d*)(.d*)?),(-?(0|[1-9]d*)(.d*)?)
            nullable: true
            type: string
        - name: location_range
          required: false
          in: query
          description: 緯度経度での範囲検索
          schema:
            pattern: >-
              (-?(0|[1-9]d*)(.d*)?),(-?(0|[1-9]d*)(.d*)?):(-?(0|[1-9]d*)(.d*)?),(-?(0|[1-9]d*)(.d*)?)
            nullable: true
            type: string
        - name: timestamp
          required: false
          in: query
          description: 時間でのピンポイント検索
          example: '1675222667898003416'
          schema:
            nullable: true
            type: string
        - name: timestamp_range
          required: false
          in: query
          description: 時間での範囲検索
          example: '1675222667898003416'
          schema:
            nullable: true
            type: string
        - name: label
          required: false
          in: query
          description: ラベルのkeyとvalueでの完全一致検索
          schema:
            pattern: (?! {51,})([a-zA-Z0-9]+([-_][a-zA-Z0-9]+)*)=(.{1,50})
            nullable: true
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2GetDatastoreChannelsChannelIdObjectsResponseEntity
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes or permission_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_30
      security:
        - BearerAuth: []
  /v2/datastore/channels/{channel_id}/objects/{object_id}:
    get:
      operationId: ObjectsController_getObjectByObjectId
      x-hidden-in: internal
      x-internal: true
      summary: Get Object
      description: Object情報を取得する。
      parameters:
        - name: channel_id
          required: true
          in: path
          description: チャネルID
          example: brpf5c73ivgff7iahkog
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: object_id
          required: true
          in: path
          description: オブジェクトID
          example: brpf5c73ivgff7iahkog
          schema:
            pattern: ^[0-9a-v]{20}$
            type: string
        - name: packer_format
          required: false
          in: query
          description: Packerのフォーマット
          schema:
            nullable: true
            default: payload_only
            enum:
              - payload_only
              - json
              - msgpack
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              description: >-
                レスポンスボディのMIMETYPE。データのメタデータに設定されているMIMETYPE。`text/plain`,`application/xml`,`application/json`,`application/octet-stream
              schema:
                oneOf:
                  - type: string
                    enum:
                      - application/octet-stream
                  - type: string
                    enum:
                      - application/json
                  - type: string
                    enum:
                      - application/xml
                  - type: string
                    enum:
                      - text/plain
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/V2GetDatastoreChannelsChannelIdObjectsResponseEntity
        '400':
          description: invalid_request or invalid_context or validation_failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scopes or permission_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: resource_not_found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags: *ref_30
      security:
        - BearerAuth: []
  /v2/emails/enable:
    get:
      operationId: EmailsController_getEmailsEnable
      x-internal: true
      summary: Get Emails Enable
      description: メールアドレス使用可否チェック
      parameters:
        - name: q
          required: false
          in: query
          description: 使用可否を調べたいメールアドレス
          schema:
            type: string
        - name: Authorization
          in: header
          description: |-

            :::x-description-i18n:
            eng: |-
              ```Bearer <json_web_token>```
            jpn: |-
              ```Bearer <json_web_token>```
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2GetEmailsEnable'
        '400':
          description: invalid_request or invalid_context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: invalid_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: insufficient_scope or authority_required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal_server_error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: server_temporarily_unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - Emails API
      security:
        - BearerAuth: []
info:
  title: LandLog API
  description: LandLog API description
  version: '2.0'
  contact: {}
tags:
  - name: Corporation API
    description: |-

      :::x-description-i18n:
      eng: |-
        > ✅ Important
        >
        > Use this API set to operate on a corporation, a user belonging to corporation, a group of corporation, or a member joining corporation.

        > ℹ️ Info
        >
        > Status codes and error responses common to APIs are not described in a specific API reference. Refer to Commons.

      jpn: |-
        > ✅ Important
        >
        > 企業、企業所属のユーザー、企業所属のグループ、それに参加しているメンバーを操作する場合、 本APIセットを利用します。

        > ℹ️ Info
        >
        > ステータスコード、エラーレスポンスなどが非掲載の場合はAPI共通の内容です。 Commons を参照してください。

  - name: Site API
    description: |-

      :::x-description-i18n:
      eng: |-
        > ✅ Important
        >
        >  Use this API set to perform operation such as listing sites, inviting members, or listing site members.

        > ℹ️ Info
        >
        > Status codes and error responses common to APIs are not described in a specific API reference. Refer to Commons.

        > ℹ️ Info
        >
        > See here for the list of operations and permissions granted to participants on site.

      jpn: |-
        > ✅ Important
        >
        >  この API セットを使用して、サイトの一覧表示、メンバーの招待、サイト メンバーの一覧表示などの操作を実行します。

        > ℹ️ Info
        >
        > ステータスコード、エラーレスポンスなどが非掲載の場合はAPI共通の内容です。 Commons を参照してください。

        > ℹ️ Info
        >
        > 現場参加者に付与される権限、及び操作一覧はこちらをご覧ください。

  - name: File Storage API
    description: |-

      :::x-description-i18n:
      eng: |-
        > ℹ️ Info
        > Status codes and error responses common to APIs are not described in a specific API reference. Refer to Commons.

      jpn: |-
        > ℹ️ Info
        >
        > ステータスコード、エラーレスポンスなどが非掲載の場合はAPI共通の内容です Commons を参照してください

  - name: Subscription API
    description: |-

      :::x-description-i18n:
      eng: |-
        > 🛑 Danger
        >
        > API for Marketplace. Use from other services and applications is prohibited. This API is an internal API that allows access to subscription/license information for all users/groups on the system (access privileges are not controlled).
        >
        > Please handle with utmost care.

      jpn: |-
        > 🛑 Danger
        >
        > Marketplace 向けの APIです。それ以外のサービス、アプリケーションからの利用は禁止します。 このAPIは、システム上に存在するすべてのユーザー/グループのサブスクリプション/ライセンス情報に対してアクセスが可能（アクセス権限の制御が行われていない）な内部向けAPIとなっています。
        >
        > 取扱には最大限の注意を払ってください。

  - name: Device API
    description: |-
      :::x-description-i18n:
      eng: |-
        > ℹ️ Note
        >
        > Status codes and error responses common to APIs are not described in a specific API reference. Refer to Commons.

        > ⚠️Warning
        >
        > ID format for devices, device-relations, or device-definitions is "20-digit random alphanumeric (excepts x - z)".
        > Regular expression pattern: ^[0-9a-v]{20}$

      jpn: |-
        > ℹ️ Note
        >
        > ステータスコード、エラーレスポンスなどが非掲載の場合はAPI共通の内容です。 Commons を参照してください。

        > ⚠️Warning
        >
        > デバイス、デバイス関係、またはデバイス定義の ID 形式は、「20 桁のランダムな英数字 (x ～ z を除く)」です。
        > 正規表現パターン: ^[0-9a-v]{20}$

  - name: License API
    description: |-

      :::x-description-i18n:
      eng: |-
        > ℹ️ Info
        > This API is alpha version. Subject to change without notice.

        > ℹ️ Info
        > Status codes and error responses common to APIs are not described in a specific API reference. Refer to Commons.

      jpn: |-
        > ℹ️ Info
        >
        > 本APIはalpha versionです。予告無く変更されることがあります。

        > ℹ️ Info
        >
        > ステータスコード、エラーレスポンスなどが非掲載の場合はAPI共通の内容です。 Commons を参照してください。

  - name: Account API
    description: |-

      :::x-description-i18n:
      eng: |-
        > 🛑 Danger
        >
        > This is an API for Account Manager. Use from other services and applications is prohibited. This API is an internal API that can be accessed by all users on the system (access privileges are not controlled).
        >
        > Please handle with utmost care.
      jpn: |-
        > 🛑 Danger
        >
        > Account Manager 向けの APIです。 それ以外のサービス、アプリケーションからの利用は禁止します。 このAPIは、システム上に存在するすべてのユーザーに対してアクセスが可能（アクセス権限の制御が行われていない）な内部向けAPIとなっています。
        >
        > 取扱には最大限の注意を払ってください。

  - name: Group API
    description: |-

      :::x-description-i18n:
      eng: |-
        > ✅ Important
        >
        > Use this API set to operate on joining groups, to create an independent group, or to operate on members joining groups.
        >
        > Use the Corporation APIs to operate the followings:
        > * Operation of corporations
        > * Operation of corporation users
        > * Operation of corporation groups
        > * Operation of members joining corporation groups
      jpn: |-
        > ✅ Important
        >
        > 参加グループの操作、および単独グループの作成、参加グループのメンバーを操作する場合、本APIセットを利用します。
        >
        > 以下のような操作をする場合は、Corporation API を利用してください。
        > * 企業操作
        > * 企業所属のユーザー操作
        > * 企業所属のグループ操作
        > * 企業所属のグループの参加メンバー操作

servers:
  - url: https://api-pre.pf.smartconstruction.com
    description: PRE
  - url: https://api.pf.smartconstruction.com
    description: PRD
components:
  securitySchemes:
    BearerAuth:
      scheme: bearer
      bearerFormat: JWT
      description: 'Please enter access token in following format: Bearer <JWT>'
      type: http
  schemas:
    V2GetCorporationsCorporationIdAddress:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Nation code
            jpn: |-
              国名コード
          format: ISO 3166-1 alpha-2
          nullable: true
          example: JP
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Zip code
            jpn: |-
              郵便番号
          pattern: .{1,255}
          nullable: true
          example: 105-0022
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Prefecture
            jpn: |-
              都道府県
          pattern: .{1,255}
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City
            jpn: |-
              市区町村
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address line 1(e.g. Street no.)
            jpn: |-
              住所1（番地など）
          pattern: .{1,255}
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address line 2(e.g. Building name)
            jpn: |-
              住所2 (ビル名など）
          pattern: .{1,255}
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2GetCorporationsCorporationId:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Company ID(Group ID)
            jpn: |-
              企業のID(グループID)
        parent_group_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Parent Group ID
            jpn: |-
              親グループID
          nullable: true
          example: c8a17724-caeb-4233-b8d8-ba38690a113d
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Company name
            jpn: |-
              企業名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
        domain:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Domain name
            jpn: |-
              ドメイン
          nullable: true
          example: earthbrain.co.jp
        domain_limitation:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Domain check flag

              If set to ```true```, the member's e-mail address will restrict to the company's domain name
            jpn: |-
              ドメイン制限フラグ

              ```true```の場合、メンバーのメールアドレスを企業に設定されたドメインのみに制限する
          example: true
        phone_number:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              Company's phone number 1
            jpn: |-
              企業の電話番号1
          nullable: true
          example: 03-1234-5678
        phone_number_2:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              Company's phone number 2
            jpn: |-
              企業の電話番号2
          nullable: true
          example: 03-9876-5432
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              企業の住所
          allOf:
            - $ref: '#/components/schemas/V2GetCorporationsCorporationIdAddress'
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Tags
            jpn: |-
              タグ
          example: &ref_31
            - tag1
            - tag2
          type: array
          items:
            type: string
        custom_fields:
          type: object
          description: |

            :::x-description-i18n:
            eng: |-
              Custom attribute. Freely key and values available(Length of key and value must be shorter than 256 characters)
            jpn: |-
              自由記述項目。任意のkey、valueを設定可能（key、valueともに256文字未満）
          example: &ref_32
            labelA: valueA
            labelB: valueB
      required:
        - id
        - parent_group_id
        - name
        - domain
        - domain_limitation
        - phone_number
        - phone_number_2
        - address
        - tags
        - custom_fields
    V2GetCorporations:
      type: object
      properties:
        total:
          type: number
          example: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Number of matched items
            jpn: |-
              該当するデータの全件数
        corporations:
          description: |

            :::x-description-i18n:
            eng: |-
              List of corporations.
            jpn: |-
              該当する企業のリスト。
          type: array
          items:
            $ref: '#/components/schemas/V2GetCorporationsCorporationId'
      required:
        - total
        - corporations
    ErrorDetail:
      type: object
      properties:
        error_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              A major classification of errors. For the error_code patterns, refer to [Status and Error Code Patterns](doc:status-and-error-code-patterns). For errors that may occur in validation processes, refer to [Status and Error Code Patterns](doc:status-and-error-code-patterns).
            jpn: |-
              エラーの大分類。 error_code のパターンついては、[Status and Error Code Patterns](doc:status-and-error-code-patterns)参照。バリデーションエラーの対象となるエラーについては、[Status and Error Code Patterns](doc:status-and-error-code-patterns)を参照してください。
        field:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              A message indicating the fields of the request that resulted in an error. Displayed only in case of validation error. For errors that may occur in validation processes, refer to [Status and Error Code Patterns](doc:status-and-error-code-patterns).
            jpn: |-
              エラーとなったリクエストのフィールドを示すメッセージ。バリデーションエラーの場合のみ表示。バリデーションエラーの対象となるエラーについては、[Status and Error Code Patterns](doc:status-and-error-code-patterns)を参照してください。
        reason:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              A code representing the error cause "reason" combined with "field" forms an error message for applications. For details, refer to [Reason Code Patterns](doc:reason-code-patterns). Returned only for validation errors. For errors that may occur in validation processes, refer to [Status and Error Code Patterns](doc:status-and-error-code-patterns).
            jpn: |-
              エラーの原因を説明するコード。field と reason を組み合わせてアプリケーション向けのエラーメッセージを構築する。詳細は、[Reason Code Patterns](doc:reason-code-patterns)を参照。バリデーションエラーの場合のみ表示。バリデーションエラーの対象となるエラーについては、[Status and Error Code Patterns](doc:status-and-error-code-patterns)を参照してください。
        message:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              An error overview. Not recommended for use as application error text or program logic.
            jpn: |-
              エラーに関する英語の簡易的な説明文。アプリケーションのエラー文言または、プログラムのロジックとして使用することは非推奨。
      required:
        - error_code
        - message
    ErrorResponse:
      type: object
      properties:
        error_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              A major classification of errors. For the error_code patterns, refer to [Status and Error Code Patterns](doc:status-and-error-code-patterns)
            jpn: |-
              エラーの大分類。 error_code のパターンついては、[Status and Error Code Patterns](doc:status-and-error-code-patterns)参照。
        message:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              An error overview. Not returned for validation errors. Not recommended for use as application error text or program logic
            jpn: |-
              エラーに関する英語の簡易的な説明文。バリデーションエラーの場合、非表示。アプリケーションのエラー文言または、プログラムのロジックとして使用することは非推奨。
        errors:
          description: |

            :::x-description-i18n:
            eng: |-
              Error details
            jpn: |-
              エラーに関する詳細情報
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
      required:
        - error_code
        - errors
    V2PutCorporationsCorporationIdAddress:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code, ISO 3166-1 alpha-2 compliant
            jpn: |-
              国名コード、ISO 3166-1 alpha-2形式
          example: JP
          minLength: 0
          maxLength: 2
          format: ISO 3166-1 alpha-2
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code, less than 255 characters
            jpn: |-
              郵便番号、255文字以下
          example: 105-0022
          minLength: 0
          maxLength: 255
          pattern: .{1,255}
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              State, less than 255 characters
            jpn: |-
              都道府県、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          minLength: 0
          maxLength: 255
          pattern: .{1,255}
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City/Town/Village, less than 255 characters
            jpn: |-
              市区町村、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          minLength: 0
          maxLength: 255
          pattern: .{1,255}
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 1, less than 255 characters
            jpn: |-
              住所1（番地など）、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          minLength: 0
          maxLength: 255
          pattern: .{1,255}
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 2, less than 255 characters
            jpn: |-
              住所2（ビル名など）、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          minLength: 0
          maxLength: 255
          pattern: .{1,255}
    V2PutCorporationsCorporationIdCustomFields:
      type: object
      properties: {}
    V2PatchCorporationsCorporationIdBodyDto:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation name if the group is a corporation
            jpn: |-
              グループ名、企業の場合は企業名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
          maxLength: 255
        domain:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Domain
            jpn: |-
              ドメイン
          example: earthbrain.co.jp
          minLength: 0
          maxLength: 255
          nullable: true
        domain_limitation:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Flag for restriction on domain, ```true``` : email address of a member is restricted to the domain of a corporation
            jpn: |-
              ドメイン制限フラグ、```true```：メンバーを所属させる際に登録するメールアドレスを、企業に設定されたドメインのみに制限
          example: true
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Primary phone number
            jpn: |-
              電話番号1
          example: 03-1234-5678
          minLength: 0
          maxLength: 255
          pattern: .{1,255}
        phone_number_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Secondary phone number
            jpn: |-
              電話番号2
          example: 03-9876-5432
          minLength: 0
          maxLength: 255
          pattern: .{1,255}
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所
          allOf:
            - $ref: '#/components/schemas/V2PutCorporationsCorporationIdAddress'
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Tags
            jpn: |-
              タグ
          example: &ref_33
            - tag1
            - tag2
          type: array
          items:
            type: string
            pattern: .{1,255}
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
              Custom fields, Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）
          example: &ref_34
            labelA: valueA
            labelB: valueB
          allOf:
            - $ref: '#/components/schemas/V2PutCorporationsCorporationIdCustomFields'
    V2PatchCorporationsCorporationId:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Company ID(Group ID)
            jpn: |-
              企業のID(グループID)
        parent_group_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Parent Group ID
            jpn: |-
              親グループID
          nullable: true
          example: c8a17724-caeb-4233-b8d8-ba38690a113d
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Company name
            jpn: |-
              企業名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
        domain:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Domain name
            jpn: |-
              ドメイン
          nullable: true
          example: earthbrain.co.jp
        domain_limitation:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Domain check flag

              If set to ```true```, the member's e-mail address will restrict to the company's domain name
            jpn: |-
              ドメイン制限フラグ

              ```true```の場合、メンバーのメールアドレスを企業に設定されたドメインのみに制限する
          example: true
        phone_number:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              Company's phone number 1
            jpn: |-
              企業の電話番号1
          nullable: true
          example: 03-1234-5678
        phone_number_2:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              Company's phone number 2
            jpn: |-
              企業の電話番号2
          nullable: true
          example: 03-9876-5432
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              企業の住所
          allOf:
            - $ref: '#/components/schemas/V2GetCorporationsCorporationIdAddress'
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Tags
            jpn: |-
              タグ
          example: *ref_31
          type: array
          items:
            type: string
        custom_fields:
          type: object
          description: |

            :::x-description-i18n:
            eng: |-
              Custom attribute. Freely key and values available(Length of key and value must be shorter than 256 characters)
            jpn: |-
              自由記述項目。任意のkey、valueを設定可能（key、valueともに256文字未満）
          example: *ref_32
      required:
        - id
        - parent_group_id
        - name
        - domain
        - domain_limitation
        - phone_number
        - phone_number_2
        - address
        - tags
        - custom_fields
    V2PutCorporationsCorporationIdBodyDto:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group name or company name if it is a company
            jpn: |-
              グループ名、企業の場合は企業名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
          maxLength: 255
        domain:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Domain
            jpn: |-
              ドメイン
          example: earthbrain.co.jp
          minLength: 0
          maxLength: 255
          nullable: true
        domain_limitation:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Flag for restriction on domain, ```true``` : email address of a member is restricted to the domain of a corporation
            jpn: |-
              ドメイン制限フラグ、```true```：メンバーを所属させる際に登録するメールアドレスを、企業に設定されたドメインのみに制限
          example: true
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Primary phone number
            jpn: |-
              電話番号1
          example: 03-1234-5678
          minLength: 0
          maxLength: 255
          pattern: .{1,255}
        phone_number_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Secondary phone number
            jpn: |-
              電話番号2
          example: 03-9876-5432
          minLength: 0
          maxLength: 255
          pattern: .{1,255}
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所
          allOf:
            - $ref: '#/components/schemas/V2PutCorporationsCorporationIdAddress'
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Tags
            jpn: |-
              タグ
          example: *ref_33
          type: array
          items:
            type: string
            pattern: .{1,255}
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
              Custom fields, Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）
          example: *ref_34
          allOf:
            - $ref: '#/components/schemas/V2PutCorporationsCorporationIdCustomFields'
    V2PutCorporationsCorporationId:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Company ID(Group ID)
            jpn: |-
              企業のID(グループID)
        parent_group_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Parent Group ID
            jpn: |-
              親グループID
          nullable: true
          example: c8a17724-caeb-4233-b8d8-ba38690a113d
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Company name
            jpn: |-
              企業名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
        domain:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Domain name
            jpn: |-
              ドメイン
          nullable: true
          example: earthbrain.co.jp
        domain_limitation:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Domain check flag

              If set to ```true```, the member's e-mail address will restrict to the company's domain name
            jpn: |-
              ドメイン制限フラグ

              ```true```の場合、メンバーのメールアドレスを企業に設定されたドメインのみに制限する
          example: true
        phone_number:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              Company's phone number 1
            jpn: |-
              企業の電話番号1
          nullable: true
          example: 03-1234-5678
        phone_number_2:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              Company's phone number 2
            jpn: |-
              企業の電話番号2
          nullable: true
          example: 03-9876-5432
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              企業の住所
          allOf:
            - $ref: '#/components/schemas/V2GetCorporationsCorporationIdAddress'
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Tags
            jpn: |-
              タグ
          example: *ref_31
          type: array
          items:
            type: string
        custom_fields:
          type: object
          description: |

            :::x-description-i18n:
            eng: |-
              Custom attribute. Freely key and values available(Length of key and value must be shorter than 256 characters)
            jpn: |-
              自由記述項目。任意のkey、valueを設定可能（key、valueともに256文字未満）
          example: *ref_32
      required:
        - id
        - parent_group_id
        - name
        - domain
        - domain_limitation
        - phone_number
        - phone_number_2
        - address
        - tags
        - custom_fields
    V2PostCorporationsGroupAddressDto:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード
          example: JP
          minLength: 0
          maxLength: 2
          format: ISO 3166-1 alpha-2
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号
          example: 105-0022
          minLength: 0
          maxLength: 255
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Prefectures
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          minLength: 0
          maxLength: 255
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Municipalities
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          minLength: 0
          maxLength: 255
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 1 (street number, etc.)
            jpn: |-
              住所1（番地など）
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          minLength: 0
          maxLength: 255
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 2 (building name, etc.)
            jpn: |-
              住所2（ビル名など）
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          minLength: 0
          maxLength: 255
    V2PostCorporationsGroupCustomFieldsDto:
      type: object
      properties: {}
    V2PostCorporationsGroupSingleSignOnDto:
      type: object
      properties:
        issuer:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unique identifier for the external identity infrastructure (IdP). Required if use_sso = ```true``` (UUID format recommended)
            jpn: |-
              外部ID基盤(IdP) の一意識別子。use_sso=```true```の場合必須（UUID形式推奨)
          example: 84a46f5f-76c3-497f-acac-5903afc0cf7e
          minLength: 0
          maxLength: 255
          nullable: true
        idp_type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              IdP type Required if use_sso = ```true```. Specify ```microsoft_azure_active_directory```
            jpn: |-
              IdP種別 use_sso = ```true```の場合必須。```microsoft_azure_active_directory``` を指定
          example: 35b1e72c-51ac-417b-81cf-818eec28715d
          minLength: 0
          maxLength: 255
          enum:
            - microsoft_azure_active_directory
          nullable: true
    V2PostCorporationsGroupDto:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Company name
            jpn: |-
              企業の名称
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
        domain:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Domain
            jpn: |-
              ドメイン
          example: earthbrain.co.jp
        domain_limitation:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Domain restriction flag, ```true```: Restricts the email address registered when assigning members to only the domain set for the company
            jpn: |-
              ドメイン制限フラグ、```true```：メンバーを所属させる際に登録するメールアドレスを、企業に設定されたドメインのみに制限
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporate phone number 1
            jpn: |-
              企業の電話番号1
          example: 03-1234-5678
          minLength: 0
          maxLength: 255
        phone_number_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporate phone number 2
            jpn: |-
              企業の電話番号2
          example: 03-9876-5432
          minLength: 0
          maxLength: 255
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Business address
            jpn: |-
              企業の住所
          allOf:
            - $ref: '#/components/schemas/V2PostCorporationsGroupAddressDto'
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Tag
            jpn: |-
              タグ
          example:
            - tag1
            - tag2
          type: array
          items:
            type: string
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
              Free description field, arbitrary key and value can be set (both key and value 255 characters or less)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）
          example:
            label1: value1
            label2: value2
          allOf:
            - $ref: '#/components/schemas/V2PostCorporationsGroupCustomFieldsDto'
        single_sign_on:
          description: |

            :::x-description-i18n:
            eng: |-
              Single sign-on
            jpn: |-
              シングルサインオン
          allOf:
            - $ref: '#/components/schemas/V2PostCorporationsGroupSingleSignOnDto'
      required:
        - name
    V2PostCorporationsUserExternalIdentityDto:
      type: object
      properties:
        subject:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              External ID-based ID, required if use_sso=```true``` (UUID format recommended)
            jpn: |-
              外部ID基盤のID, use_sso=```true``` の場合必須（UUID形式推奨)
      required:
        - subject
    V2PostCorporationsUserMailAgreementDto:
      type: object
      properties:
        proper:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Consent status for sending email notifications from Landlog. ```true``` if agreed
            jpn: |-
              ランドログからのお知らせメール送信の同意状況。同意している場合は```true```
        partner:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Consent status for sending notification emails from Landlog partners. ```true``` if agreed
            jpn: |-
              ランドログパートナーからのお知らせメール送信の同意状況。同意している場合は```true```
      required:
        - proper
        - partner
    V2PostCorporationsUserCustomFieldsDto:
      type: object
      properties: {}
    V2PostCorporationsUserDto:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Username (full name)
            jpn: |-
              ユーザー名(氏名)
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
          maxLength: 255
        family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Family name
            jpn: |-
              性
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
          maxLength: 255
        given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Given name
            jpn: |-
              名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
          maxLength: 255
        phonetic_family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name. Less than 255 characters (Double-byte or single-byte characters and any types of character are supported)
            jpn: |-
              性(振り仮名)。255文字以下(全角や半角、文字種は問わない)
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
          maxLength: 255
        phonetic_given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name. Less than 255 characters (Double-byte or single-byte characters and any types of character are supported.)
            jpn: |-
              名(振り仮名)。255文字以下(全角や半角、文字種は問わない)
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
          maxLength: 255
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address (also used as login ID)
            jpn: |-
              メールアドレス（ログインIDにもなる)
          example: taro.earthbraion@example.com
          format: email
        emails:
          description: |

            :::x-description-i18n:
            eng: |-
              Email address to receive. Notification (multiple addresses can be specified)
            jpn: |-
              通知メールを受け取るメールアドレス（複数指定可能）
          example:
            - taro.earthbrain2@earthbrain.co.jp
            - taro.earthbrain3@earthbrain.co.jp
          uniqueItems: true
          type: array
          items:
            type: string
        use_sso:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Whether to use single sign-on, ```true```: Available
            jpn: |-
              シングルサインオンの利用有無, ```true```: 利用有
        password:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Password
            jpn: |-
              パスワード
          example: P@ssw0rd
          minLength: 8
        picture:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Icon image: Image converted to Base64 format, below 1 megabyte
            jpn: |-
              アイコン画像 Base64形式に変換した画像, 1Mbyte以下
          example: VGhpcyBpcyBsaW5...lIG9uZQpUaGlzIG
          format: base64
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number 1
            jpn: |-
              電話番号1
          example: '09012345678'
        phone_number_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number 2
            jpn: |-
              電話番号2
          example: '09087654321'
        language:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Language setting (if not specified, browser language is used)
              * ```ja```/ ```ja-JP```: Japanese
              * ```en-US```: English
              * ```de-DE```: German
              * ```fr-FR```: French
              * ```es-ES```: Spanish
              * ```cs-CZ```: Czech
            jpn: |-
              言語設定 (未指定の場合はブラウザの言語設定が使用される）
              * ```ja```/ ```ja-JP```: 日本語
              * ```en-US```: 英語
              * ```de-DE```: ドイツ語
              * ```fr-FR```: フランス語
              * ```es-ES```: スペイン語
              * ```cs-CZ```: チェコ語
          enum:
            - ja
            - ja-JP
            - en-US
            - cs-CZ
            - de-DE
            - fr-FR
            - es-ES
          maxLength: 5
          format: ISO639
        external_identity:
          description: |

            :::x-description-i18n:
            eng: |-
              External ID infrastructure integration
            jpn: |-
              外部ID基盤連携
          allOf:
            - $ref: '#/components/schemas/V2PostCorporationsUserExternalIdentityDto'
        mail_agreement:
          description: |

            :::x-description-i18n:
            eng: |-
              Consent status for email sending
            jpn: |-
              メール送信の同意状況
          allOf:
            - $ref: '#/components/schemas/V2PostCorporationsUserMailAgreementDto'
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Tag
            jpn: |-
              タグ
          example:
            - tag1
            - tag2
          type: array
          items:
            type: string
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
              Custom fields. Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）
          example:
            labelA: valueA
            labelB: valueB
          allOf:
            - $ref: '#/components/schemas/V2PostCorporationsUserCustomFieldsDto'
      required:
        - name
        - email
        - password
    V2PostCorporationsBodyDto:
      type: object
      properties:
        group:
          description: |

            :::x-description-i18n:
            eng: |-
              Group
            jpn: |-
              グループ
          allOf:
            - $ref: '#/components/schemas/V2PostCorporationsGroupDto'
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User
            jpn: |-
              ユーザー
          allOf:
            - $ref: '#/components/schemas/V2PostCorporationsUserDto'
      required:
        - group
        - user
    V2PostCorporationsGroupAddress:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード
          example: JP
          nullable: true
          format: ISO 3166-1 alpha-2
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号
          example: 105-0022
          pattern: .{1,255}
          nullable: true
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Prefectures
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          pattern: .{1,255}
          nullable: true
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Municipalities
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          nullable: true
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 1 (street number, etc.)
            jpn: |-
              住所1（番地など）
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          pattern: .{1,255}
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 2 (building name, etc.)
            jpn: |-
              住所2（ビル名など）
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          pattern: .{1,255}
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2PostCorporationsGroupSingleSignOn:
      type: object
      properties:
        issuer:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unique identifier for the external identity infrastructure (IdP)
            jpn: |-
              外部ID基盤(IdP) の一意識別子
          example: 84a46f5f-76c3-497f-acac-5903afc0cf7e
          minLength: 0
          maxLength: 255
          nullable: true
        idp_type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              IdP type. Required if use_sso = ```true```, specify ```microsoft_azure_active_directory```
            jpn: |-
              IdP種別. use_sso = ```true```の場合必須, ```microsoft_azure_active_directory``` を指定
          example: 35b1e72c-51ac-417b-81cf-818eec28715d
          minLength: 0
          maxLength: 255
          nullable: true
      required:
        - issuer
        - idp_type
    V2PostCorporationGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID
        parent_group_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Parent group ID
            jpn: |-
              親グループID
          nullable: true
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group name
            jpn: |-
              グループ名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
        domain:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Domain
            jpn: |-
              ドメイン
          example: earthbrain.co.jp
          nullable: true
        domain_limitation:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Domain restriction flag
            jpn: |-
              ドメイン制限フラグ
        phone_number:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              Corporate phone number 1
            jpn: |-
              企業の電話番号1
          example: 03-1234-5678
          nullable: true
        phone_number_2:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              Corporate phone number 2
            jpn: |-
              企業の電話番号2
          example: 03-9876-5432
          nullable: true
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Business address
            jpn: |-
              企業の住所
          allOf:
            - $ref: '#/components/schemas/V2PostCorporationsGroupAddress'
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Group tag
            jpn: |-
              グループタグ
          example:
            - tag1
            - tag2
          type: array
          items:
            type: string
        custom_fields:
          type: object
          description: |

            :::x-description-i18n:
            eng: |-
              Free description field, arbitrary key and value can be set (both key and value 255 characters or less)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）
          example:
            labelA: value1
            labelB: value2
        single_sign_on:
          description: |

            :::x-description-i18n:
            eng: |-
              Single sign-on
            jpn: |-
              シングルサインオン
          allOf:
            - $ref: '#/components/schemas/V2PostCorporationsGroupSingleSignOn'
      required:
        - id
        - parent_group_id
        - name
        - domain
        - domain_limitation
        - phone_number
        - phone_number_2
        - address
        - tags
    V2PostCorporationUserExternal:
      type: object
      properties:
        subject:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              External ID-based ID, required if use_sso=```true``` (UUID format recommended)
            jpn: |-
              外部ID基盤のID, use_sso=```true``` の場合必須（UUID形式推奨)
          example: 60edbbae-71be-4fbc-b2c1-f38d95f4b1b6
      required:
        - subject
    V2PostCorporationUserMailAgreement:
      type: object
      properties:
        proper:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Consent status for sending email notifications from Landlog. ```true``` if agreed
            jpn: |-
              ランドログからのお知らせメール送信の同意状況。同意している場合は```true```
        partner:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Consent status for sending notification emails from Landlog partners. ```true``` if agreed
            jpn: |-
              ランドログパートナーからのお知らせメール送信の同意状況。同意している場合は```true```
      required:
        - proper
        - partner
    V2PostCorporationUserCustomFields:
      type: object
      properties: {}
    V2PostCorporationUser:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID
          format: uuid
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Username (full name)
            jpn: |-
              ユーザー名（氏名）
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address (also serves as login ID)
            jpn: |-
              メールアドレス（ログインIDにもなる）
          example: taro.earthbraion@example.com
          format: email
        emails:
          description: |

            :::x-description-i18n:
            eng: |-
              Email address to receive notification email (multiple specifications can be specified)
            jpn: |-
              通知メールを受け取るメールアドレス（複数指定可能）
          example:
            - taro.earthbrain2@earthbrain.co.jp
            - taro.earthbrain3@earthbrain.co.jp
          uniqueItems: true
          type: array
          items:
            type: string
        use_sso:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Whether to use single sign-on
            jpn: |-
              シングルサインオンの利用有無
        family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Family name
            jpn: |-
              性
          example: |-

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン

          nullable: true
        given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Given name
            jpn: |-
              名
          example: |-

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎

          nullable: true
        phonetic_family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name
            jpn: |-
              性(振り仮名)
          example: |-

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん

          nullable: true
        phonetic_given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name
            jpn: |-
              名(振り仮名)
          example: |-

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう

          nullable: true
        picture:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              URL where icon images can be downloaded, URI format
            jpn: |-
              アイコン画像をダウンロード可能なURL、URI形式
          example: https://api.landlog.info/v2/profile_image/pictures/default.png
          format: uri
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number 1
            jpn: |-
              電話番号1
          example: '09012345678'
          nullable: true
        phone_number_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number 2
            jpn: |-
              電話番号2
          example: '09087654321'
          nullable: true
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Account type, only has ```managed``` value
            jpn: |-
              アカウント種別, 値が ```managed``` のみです
          example: managed
          default: managed
        language:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Language setting (if not specified, browser language is used)
              * ```ja```/ ```ja-JP```: Japanese
              * ```en-US```: English
              * ```de-DE```: German
              * ```fr-FR```: French
              * ```es-ES```: Spanish
              * ```cs-CZ```: Czech
            jpn: |-
              言語設定 (未指定の場合はブラウザの言語設定が使用される）
              * ```ja```/ ```ja-JP```: 日本語
              * ```en-US```: 英語
              * ```de-DE```: ドイツ語
              * ```fr-FR```: フランス語
              * ```es-ES```: スペイン語
              * ```cs-CZ```: チェコ語
          enum:
            - ja
            - ja-JP
            - en-US
            - de-DE
            - fr-FR
            - es-ES
            - cs-CZ
          maxLength: 5
          nullable: true
        external_id:
          description: |

            :::x-description-i18n:
            eng: |-
              External ID infrastructure integration
            jpn: |-
              外部ID基盤連携
          allOf:
            - $ref: '#/components/schemas/V2PostCorporationUserExternal'
        mail_agreement:
          description: |

            :::x-description-i18n:
            eng: |-
              Consent status for email sending
            jpn: |-
              メール送信の同意状況
          allOf:
            - $ref: '#/components/schemas/V2PostCorporationUserMailAgreement'
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation tag
            jpn: |-
              タグ
          example:
            - tag1
            - tag2
          type: array
          items:
            type: string
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
              Free description item
            jpn: |-
              自由記述項目
          example:
            label1: valueA
            label2: valueB
          allOf:
            - $ref: '#/components/schemas/V2PostCorporationUserCustomFields'
      required:
        - id
        - name
        - email
        - emails
        - family_name
        - given_name
        - phonetic_family_name
        - phonetic_given_name
        - picture
        - phone_number
        - phone_number_2
        - type
        - language
    V2PostCorporations:
      type: object
      properties:
        group:
          description: |

            :::x-description-i18n:
            eng: |-
              Group
            jpn: |-
              グループ
          allOf:
            - $ref: '#/components/schemas/V2PostCorporationGroup'
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User
            jpn: |-
              ユーザー
          allOf:
            - $ref: '#/components/schemas/V2PostCorporationUser'
      required:
        - group
        - user
    V2GetCorporationsCorporationIdFilesizeEntity:
      type: object
      properties:
        corporation_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Target corporation_id
            jpn: |-
              対象のcorporation_id
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name of corporation involved
            jpn: |-
              対処企業名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
        total_file_size:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              Total file size
            jpn: |-
              合計ファイルサイズ
          example: 123456789
          format: Bytes
      required:
        - corporation_id
        - name
        - total_file_size
    V2GetCorporationUsersUserAddress:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード
          format: ISO 3166-1 alpha-2
          maxLength: 2
          nullable: true
          example: JP
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号
          example: 105-0022
          nullable: true
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          nullable: true
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          nullable: true
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 1 (street address etc)
            jpn: |-
              住所1（番地など）
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 2 (building name, etc.)
            jpn: |-
              住所2（ビル名など）
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2GetCorporationUsersUserExternalIdentity:
      type: object
      properties:
        subject:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of external ID base
            jpn: |-
              外部ID基盤のID
          example: 1234567890-xyz
          nullable: true
      required:
        - subject
    V2GetCorporationUsersUserCustomFields:
      type: object
      properties: {}
    V2GetCorporationUsersUser:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation user ID
            jpn: |-
              ユーザーID
          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
          format: uuid
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Account type
              * ```managed```:  User is managed by a corporation
            jpn: |-
              アカウント種別
              * ```managed```: ユーザーは企業によって管理されています
          enum:
            - managed
          nullable: true
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Username(full name)
            jpn: |-
              ユーザー名（氏名）
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
        family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Family name
            jpn: |-
              姓
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
          nullable: true
        given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Given name
            jpn: |-
              名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
          nullable: true
        phonetic_family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name
            jpn: |-
              姓（振り仮名）
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
          nullable: true
        phonetic_given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name
            jpn: |-
              名（振り仮名)
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
          nullable: true
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address (also used as login ID)
            jpn: |-
              メールアドレス（ログインIDにもなる）
          example: taro.earthbrain@earthbrain.co.jp
          format: email
        emails:
          description: |

            :::x-description-i18n:
            eng: |-
              Email address to receive notification (multiple specifications can be specified)
            jpn: |-
              通知メールを受け取るメールアドレス（複数指定可能）
          example:
            - taro.earthbrain2@earthbrain.co.jp
            - taro.earthbrain3@earthbrain.co.jp
          uniqueItems: true
          type: array
          items:
            type: string
        picture:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              URL of an icon image
            jpn: |-
              アイコン画像をダウンロード可能なURL
          format: uri
          example: https://sample.co.jp/v2/profile_image/pictures/default.png
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Primary phone number
            jpn: |-
              電話番号1
          example: 1-234-567-8900
          nullable: true
          minLength: 0
          maxLength: 255
        phone_number_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Secondary phone number
            jpn: |-
              電話番号2
          example: 1-987-654-3210
          nullable: true
          minLength: 0
          maxLength: 255
        language:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Language setting (if not specified, browser language is used)
              * ```ja```/ ```ja-JP```: Japanese
              * ```en-US```: English
              * ```de-DE```: German
              * ```fr-FR```: French
              * ```es-ES```: Spanish
              * ```cs-CZ```: Czech
            jpn: |-
              言語設定 (未指定の場合はブラウザの言語設定が使用される）
              * ```ja```/ ```ja-JP```: 日本語
              * ```en-US```: 英語
              * ```de-DE```: ドイツ語
              * ```fr-FR```: フランス語
              * ```es-ES```: スペイン語
              * ```cs-CZ```: チェコ語
          example: en-US
          enum:
            - ja
            - ja-JP
            - en-US
            - de-DE
            - fr-FR
            - es-ES
            - cs-CZ
          maxLength: 5
          nullable: true
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所
          allOf:
            - $ref: '#/components/schemas/V2GetCorporationUsersUserAddress'
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role in the group, ```super_admin```, ```admin```, ```manager```, ```staff```
            jpn: |-
              ロール ```super_admin```、 ```admin```、 ```manager```、 ```staff```
          example: admin
          enum:
            - super_admin
            - admin
            - manager
            - staff
        category:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group joining form
              * ```guest```: : when a user joins a corporation or a group
              * ```member```: when a user belongs to a corporation
            jpn: |-
              ユーザーの参加形態
              * 企業に所属する場合は```member```
              * 企業に参加する場合は```guest```
          example: guest
          enum:
            - member
            - guest
        invited:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation status
              * ```true```: Pending
              * ```false```: Accepted invitation
            jpn: |-
              招待の有無
              * ```true```: 招待中のとき
              * ```false```: 招待承諾済み
          example: true
        joined_from:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              How a user participated in a corporation
              * ```invite```: guest of corporation
              * ```add```: member of corporation
            jpn: |-
              どう参加したか
              * ```invite```: 企業のゲスト
              * ```add```: 企業のメンバー
          example: invite
          enum:
            - invite
            - add
        external_identity:
          description: |

            :::x-description-i18n:
            eng: |-
              External ID base information
            jpn: |-
              外部ID基盤情報
          allOf:
            - $ref: '#/components/schemas/V2GetCorporationUsersUserExternalIdentity'
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation tag
            jpn: |-
              タグ、
          example:
            - tag1
            - tag2
          type: array
          items:
            type: string
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
                Custom fields. Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）
          example:
            labelA: valueA
            labelB: valueB
          allOf:
            - $ref: '#/components/schemas/V2GetCorporationUsersUserCustomFields'
        created_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Creation time
            jpn: |-
              作成時間
          example: '2017-01-01T00:00:00Z'
          nullable: true
          format: ISO8601
        updated_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Update time
            jpn: |-
              最終更新時間
          example: '2017-01-01T00:00:00Z'
          nullable: true
          format: ISO8601
        last_access_token_issued:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Last access token issuance time
            jpn: |-
              アクセストークンの最終発行時間
          example: '2017-01-01T00:00:00Z'
          nullable: true
          format: ISO8601
      required:
        - id
        - email
        - role
        - category
        - invited
        - joined_from
        - created_at
        - updated_at
        - last_access_token_issued
    V2GetCorporationUsers:
      type: object
      properties:
        total:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of items matched. 0 or more
            jpn: |-
              該当するデータの全件数 0以上
          example: 1
        users:
          description: |

            :::x-description-i18n:
            eng: |-
              List of corporation users. 0 or more
            jpn: |-
              該当するユーザーのリスト 0以上
          type: array
          items:
            $ref: '#/components/schemas/V2GetCorporationUsersUser'
      required:
        - total
        - users
    V2PostCorporationsCorporationIdUsersAddressDto:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード
          example: JP
          format: ISO 3166-1 alpha-2
          minLength: 0
          maxLength: 2
          nullable: true
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code. Less than 255 characters
            jpn: |-
              郵便番号、255文字以下
          example: 105-0022
          minLength: 0
          maxLength: 255
          nullable: true
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              State. Less than 255 characters
            jpn: |-
              都道府県、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          minLength: 0
          maxLength: 255
          nullable: true
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City/Town/Village. Less than 255 characters
            jpn: |-
              市区町村、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          minLength: 0
          maxLength: 255
          nullable: true
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 1 (street address etc). Less than 255 characters
            jpn: |-
              住所1（番地など）、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          minLength: 0
          maxLength: 255
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 2 (building name, etc.). Less than 255 characters
            jpn: |-
              住所2（ビル名など）、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          minLength: 0
          maxLength: 255
          nullable: true
    V2PostCorporationsCorporationIdUsersExternalIdentityDto:
      type: object
      properties:
        subject:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              ID of external ID base. Less than 255 characters
            jpn: |-
              外部ID基盤のID、255文字以下
          nullable: true
          minLength: 0
          maxLength: 255
    V2PostCorporationsCorporationIdUsersCustomFieldsDto:
      type: object
      properties: {}
    V2PostCorporationsCorporationIdUsersBodyDto:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Username (full name). Less than 255 characters
            jpn: |-
              メンバー名（氏名）、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
          minLength: 1
          maxLength: 255
        family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Family name Less than 120 characters
            jpn: |-
              性、120文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
          minLength: 1
          maxLength: 120
          nullable: true
        given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Given name. Less than 120 characters
            jpn: |-
              名、120文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
          minLength: 1
          maxLength: 120
          nullable: true
        phonetic_family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name. Less than 255 characters (Double-byte or single-byte characters and any types of character are supported.)
            jpn: |-
              姓（振り仮名）部分一致、255文字以下（全角や半角は問わない）
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
          minLength: 0
          maxLength: 255
          nullable: true
        phonetic_given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name.
              Less than 255 characters (Double-byte or single-byte characters and any types of character are supported.)
            jpn: |-
              名（振り仮名）部分一致、255文字以下（全角や半角は問わない）
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
          minLength: 0
          maxLength: 255
          nullable: true
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address (also used as login ID)
            jpn: |-
              メールアドレス（ログインIDにもなる）
          example: earthbrain@earthbrain.co.jp
        emails:
          description: |

            :::x-description-i18n:
            eng: |-
              Email address to receive. Notification (multiple addresses can be specified)
            jpn: |-
              通知メールを受け取るメールアドレス（複数指定可能）
          example:
            - earthbrain2@earthbrain.co.jp
            - earthbrain3@earthbrain.co.jp
          uniqueItems: true
          nullable: true
          type: array
          items:
            type: string
        set_password:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Password setting flag
              * ```true```: Default
              * ```false```: Password is ignored even if specified
            jpn: |-
              パスワード設定フラグ
              * defaultは```true```
              * ```false```の場合はpasswordを指定しても無視する
          example: true
          default: true
        use_sso:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Use SSO (Single Sign On)
            jpn: |-
              SSO (シングル サインオン) を使用する
          example: false
          nullable: true
        password:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Password. 8 or more. Required when set_password is ```true```
            jpn: |-
              パスワード、8文字以上。set_passwordが```true```の場合は必須
          example: P@ssw0rd
          minLength: 8
        picture:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              URL of an icon image. Image converted to Base64 format. Smaller than 1MB
            jpn: |-
              アイコン画像、Base64形式に変換した画像、1Mbyte以下
          example: VGhpcyBpcyBsaW5...lIG9uZQpUaGlzIG
          format: uri
          nullable: true
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Primary phone number. Less than 255 characters
            jpn: |-
              電話番号1、255文字以下
          example: '09012345678'
          nullable: true
          minLength: 0
          maxLength: 255
        phone_number_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Secondary phone number. Less than 255 characters
            jpn: |-
              電話番号1、255文字以下
          example: '09087654321'
          nullable: true
          minLength: 0
          maxLength: 255
        language:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Language setting (if not specified, browser language is used)
              * ```ja```/ ```ja-JP```: Japanese
              * ```en-US```: English
              * ```de-DE```: German
              * ```fr-FR```: French
              * ```es-ES```: Spanish
              * ```cs-CZ```: Czech
            jpn: |-
              言語設定 (未指定の場合はブラウザの言語設定が使用される）
              * ```ja```/ ```ja-JP```: 日本語
              * ```en-US```: 英語
              * ```de-DE```: ドイツ語
              * ```fr-FR```: フランス語
              * ```es-ES```: スペイン語
              * ```cs-CZ```: チェコ語
          example: ja
          enum:
            - ja
            - ja-JP
            - en-US
            - de-DE
            - fr-FR
            - es-ES
            - cs-CZ
          maxLength: 5
          nullable: true
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所
          allOf:
            - $ref: >-
                #/components/schemas/V2PostCorporationsCorporationIdUsersAddressDto
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role. Role in the group, ```super_admin ```, ```admin ```, ```manager ``` or ```staff ```
            jpn: |-
              ロール、ユーザーの権限　 ```super_admin ```、```admin ```、```manager ```、```staff ```
          example: staff
          enum:
            - super_admin
            - admin
            - manager
            - staff
        external_identity:
          description: |

            :::x-description-i18n:
            eng: |-
              External ID base information
            jpn: |-
              外部ID基盤情報
          example:
            subject: 1234567890-xyz
          allOf:
            - $ref: >-
                #/components/schemas/V2PostCorporationsCorporationIdUsersExternalIdentityDto
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation tag. Less than 255 characters
            jpn: |-
              タグ、255文字以下
          example:
            - tag1
            - tag2
          type: array
          items:
            type: string
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
              Custom fields. Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）
          example:
            user-label1: user-value1
            user-label2: user-value2
          allOf:
            - $ref: >-
                #/components/schemas/V2PostCorporationsCorporationIdUsersCustomFieldsDto
      required:
        - name
        - email
        - role
    V2PostCorporationsCorporationIdUsersAddress:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード
          example: JP
          format: ISO 3166-1 alpha-2
          nullable: true
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号
          example: 105-0022
          pattern: .{1,255}
          nullable: true
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          pattern: .{1,255}
          nullable: true
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          nullable: true
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 1 (street address etc)
            jpn: |-
              住所1（番地など）
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          pattern: .{1,255}
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 2 (building name, etc.)
            jpn: |-
              住所2（ビル名など）
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          pattern: .{1,255}
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2PostCorporationsCorporationIdUsersExternalIdentity:
      type: object
      properties:
        subject:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of external ID base
            jpn: |-
              外部ID基盤のID
          nullable: true
      required:
        - subject
    V2PostCorporationsCorporationIdUsersCustomFields:
      type: object
      properties: {}
    V2PostCorporationsCorporationIdUsers:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation user ID
            jpn: |-
              ユーザーID
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Account type
              * ```managed```:  User is managed by a corporation
            jpn: |-
              アカウント種別
              * ```managed```: ユーザーは企業によって管理されています
          example: managed
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User name(full name)
            jpn: |-
              ユーザー名（氏名）
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
        family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Family name
            jpn: |-
              姓
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
        given_name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Given name
            jpn: |-
              名

          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
          nullable: true
        phonetic_family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name
            jpn: |-
              姓（振り仮名）
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
        phonetic_given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name
            jpn: |-
              名（振り仮名)
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address (also used as login ID)
            jpn: |-
              メールアドレス（ログインIDにもなる）
          example: example@example.co.jp
        emails:
          description: |

            :::x-description-i18n:
            eng: |-
              Email address to receive notification (multiple specifications can be specified)
            jpn: |-
              通知メールを受け取るメールアドレス（複数指定可能）
          example:
            - example2@example.co.jp
            - example3@example.co.jp
          type: array
          items:
            type: string
        picture:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              URL of an icon image
            jpn: |-
              アイコン画像をダウンロード可能なURL
          example: VGhpcyBpcyBsaW5...lIG9uZQpUaGlzIG
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Primary phone number
            jpn: |-
              電話番号1
          nullable: true
          example: '09012345678'
          minLength: 0
          maxLength: 255
        phone_number_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Secondary phone number
            jpn: |-
              電話番号2
          nullable: true
          example: '09087654321'
          minLength: 0
          maxLength: 255
        language:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Language setting (if not specified, browser language is used)
              * ```ja```/ ```ja-JP```: Japanese
              * ```en-US```: English
              * ```de-DE```: German
              * ```fr-FR```: French
              * ```es-ES```: Spanish
              * ```cs-CZ```: Czech
            jpn: |-
              言語設定 (未指定の場合はブラウザの言語設定が使用される）
              * ```ja```/ ```ja-JP```: 日本語
              * ```en-US```: 英語
              * ```de-DE```: ドイツ語
              * ```fr-FR```: フランス語
              * ```es-ES```: スペイン語
              * ```cs-CZ```: チェコ語
          enum:
            - ja
            - ja-JP
            - en-US
            - de-DE
            - fr-FR
            - es-ES
            - cs-CZ
          nullable: true
          example: ja
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所
          allOf:
            - $ref: '#/components/schemas/V2PostCorporationsCorporationIdUsersAddress'
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role in the group, ```super_admin```, ```admin```, ```manager```, ```staff```
            jpn: |-
              ロール ```super_admin```、 ```admin```、 ```manager```、 ```staff```
          enum:
            - super_admin
            - admin
            - manager
            - staff
          example: staff
        category:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group joining form
              * ```guest```: when a user joins a corporation or a group
              * ```member```: when a user belongs to a corporation
            jpn: |-
              ユーザーの参加形態
              * 企業に所属する場合は```member```
              * 企業に参加する場合は```guest```
          enum:
            - member
            - guest
        invited:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation status
              * ```true```: Pending
              * ```false```: Accepted invitation
            jpn: |-
              招待の有無
              * ```true```: 招待中のとき
              * ```false```: 招待承諾済み
        joined_from:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              How a user participated in a corporation
              * ```invite```: guest of corporation
              * ```add```: member of corporation
            jpn: |-
              どう参加したか
              * ```invite```: 企業のゲスト
              * ```add```: 企業のメンバー
          enum:
            - invite
            - add
        external_identity:
          description: |

            :::x-description-i18n:
            eng: |-
              External ID base information
            jpn: |-
              外部ID基盤情報
          example:
            subject: 1234567890-xyz
          allOf:
            - $ref: >-
                #/components/schemas/V2PostCorporationsCorporationIdUsersExternalIdentity
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation tag
            jpn: |-
              タグ、
          example:
            - tag1
            - tag2
          type: array
          items:
            type: string
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
                Custom fields. Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）
          example:
            user-label1: user-value1
            user-label2: user-value2
          allOf:
            - $ref: >-
                #/components/schemas/V2PostCorporationsCorporationIdUsersCustomFields
      required:
        - id
        - type
        - name
        - family_name
        - given_name
        - phonetic_family_name
        - phonetic_given_name
        - email
        - emails
        - picture
        - phone_number
        - phone_number_2
        - language
        - role
        - category
        - invited
        - joined_from
    V2PutCorporationUsersUserIdAddressDto:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード
          nullable: true
          minLength: 0
          maxLength: 2
          format: ISO 3166-1 alpha-2
          example: |

            :::x-example-i18n:
            eng: |-
              US
            jpn: |-
              JP
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Post code
            jpn: |-
              郵便番号
          minLength: 0
          maxLength: 255
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              22162-1010
            jpn: |-
              105-0022
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Prefectures
            jpn: |-
              都道府県
          minLength: 0
          maxLength: 255
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City
            jpn: |-
              市区町村
          minLength: 0
          maxLength: 255
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Minato
            jpn: |-
              港区
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 1 (street number, etc.)
            jpn: |-
              住所1（番地など）
          minLength: 0
          maxLength: 255
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Roppongi
            jpn: |-
              六本木1-2-20
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 2 (building name, etc.)
            jpn: |-
              住所2（ビル名など）
          minLength: 0
          maxLength: 255
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Roppongi Tower
            jpn: |-
              六本木タワー
    V2PutCorporationUsersUserIdExternalIdentityDto:
      type: object
      properties:
        subject:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              ID of external ID base
            jpn: |-
              外部ID基盤のID
          maxLength: 255
          nullable: true
          example: 84a46f5f-76c3-497f-acac-5903afc0cf7e
    V2PutCorporationUsersUserIdCustomFieldsDto:
      type: object
      properties: {}
    V2PutCorporationUsersUserIdBodyDto:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Username (full name)
            jpn: |-
              ユーザー名（氏名）
          minLength: 0
          maxLength: 255
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
        family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Family name
            jpn: |-
              姓
          minLength: 0
          maxLength: 120
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
        given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Given name
            jpn: |-
              名
          minLength: 0
          maxLength: 120
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
        phonetic_family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Family name (furigana)
              * Partial match
              * full-width or half-width characters do not matter
            jpn: |-
              姓（振り仮名）
              * 部分一致
              * 全角や半角は問わない
          minLength: 0
          maxLength: 255
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
        phonetic_given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Given name (furigana)
              * Partial match
              * full-width or half-width characters do not matter
            jpn: |-
              名（振り仮名）
              * 部分一致
              * 全角や半角は問わない
          minLength: 0
          maxLength: 255
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address (also serves as login ID)
            jpn: |-
              メールアドレス（ログインIDにもなる）
          example: taro.earthbrain@earthbrain.co.jp
        emails:
          description: |

            :::x-description-i18n:
            eng: |-
              Email address to receive notification email (multiple specifications can be specified)
            jpn: |-
              通知メールを受け取るメールアドレス（複数指定可能）
          uniqueItems: true
          nullable: true
          example:
            - taro.earthbrain2@earthbrain.co.jp
            - taro.earthbrain3@earthbrain.co.jp
          type: array
          items:
            type: string
        picture:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Icon image
              * image converted to Base64 format
              * 1Mbyte or less
            jpn: |-
              アイコン画像
              * Base64形式に変換した画像
              * 1Mbyte以下
          format: URI
          nullable: true
          example: iVBORw0KGgoAAAANSU...AAAElFTkSuQmCC
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number 1
            jpn: |-
              電話番号1
          nullable: true
          example: '09012345678'
        phone_number_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number 2
            jpn: |-
              電話番号2
          nullable: true
          example: '09087654321'
        language:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Language settings (If not set, use browser language)
              * ```ja```/```ja-JP```: Japanese
              * ```en-US```: English
              * ```de-DE```: German
              * ```fr-FR```: French
              * ```es-ES```: Spanish
              * ```cs-CZ```: Czech
            jpn: |-
              言語設定（未設定の場合はブラウザ言語を利用）
              * ```ja```/```ja-JP```: 日本語
              * ```en-US```: 英語
              * ```de-DE```: ドイツ語
              * ```fr-FR```: フランス語
              * ```es-ES```: スペイン語
              * ```cs-CZ```: チェコ語
          enum:
            - ja
            - ja-JP
            - en-US
            - de-DE
            - fr-FR
            - es-ES
            - cs-CZ
          maxLength: 5
          nullable: true
          format: ISO639
          example: ja-JP
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所
          nullable: true
          allOf:
            - $ref: '#/components/schemas/V2PutCorporationUsersUserIdAddressDto'
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Roles, user privileges
              * ```super_admin```
              * ```admin```
              * ```manager```
              * ```staff```
            jpn: |-
              ロール、ユーザーの権限
              * ```super_admin```
              * ```admin```
              * ```manager```
              * ```staff```
          enum:
            - super_admin
            - admin
            - manager
            - staff
          example: manager
        external_identity:
          description: |

            :::x-description-i18n:
            eng: |-
              External ID base information
            jpn: |-
              外部ID基盤情報
          nullable: true
          allOf:
            - $ref: >-
                #/components/schemas/V2PutCorporationUsersUserIdExternalIdentityDto
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Tags
              * 255 characters or less
            jpn: |-
              タグ
              * 255文字以下
          nullable: true
          example:
            - Deleted_Item
            - appType:PosiCom
          type: array
          items:
            type: string
            maxLength: 255
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
              Free description item
              * Any key and value can be set (both key and value must be 255 characters or less)
            jpn: |-
              自由記述項目
              * 任意のkey、valueを設定可能（key、valueともに255文字以下）
          nullable: true
          pattern: .{1,255}
          example:
            labelA: valueA
            labelB: valueB
          allOf:
            - $ref: '#/components/schemas/V2PutCorporationUsersUserIdCustomFieldsDto'
      required:
        - name
        - email
        - role
    V2PutCorporationUsersUserIdAddress:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード
          nullable: true
          format: ISO 3166-1 alpha-2
          example: |

            :::x-example-i18n:
            eng: |-
              US
            jpn: |-
              JP
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Post code
            jpn: |-
              郵便番号
          pattern: ^.{0,255}$
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              22162-1010
            jpn: |-
              105-0022
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Prefectures
            jpn: |-
              都道府県
          pattern: ^.{0,255}$
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Seattle
            jpn: |-
              東京都
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City
            jpn: |-
              市区町村
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Minato
            jpn: |-
              港区
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 1 (street number, etc.)
            jpn: |-
              住所1（番地など）
          pattern: ^.{0,255}$
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Roppongi
            jpn: |-
              六本木1-2-20
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 2 (building name, etc.)
            jpn: |-
              住所2（ビル名など）
          pattern: ^.{0,255}$
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Roppongi Tower
            jpn: |-
              六本木タワー
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2PutCorporationUsersUserIdExternalIdentity:
      type: object
      properties:
        subject:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of external ID base
            jpn: |-
              外部ID基盤のID
          nullable: true
          example: '116247407748456001'
      required:
        - subject
    V2PutCorporationUsersUserIdCustomFields:
      type: object
      properties: {}
    V2PutCorporationUsersUserId:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID
          format: uuid
          example: 35b1e72c-51ac-417b-81cf-818eec28715d
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Account type
            jpn: |-
              アカウント種別
          example: managed
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Username (full name)
            jpn: |-
              ユーザー名（氏名）
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
        family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Family name
            jpn: |-
              性
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
        given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Given name
            jpn: |-
              名
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
        phonetic_family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name
            jpn: |-
              姓（振り仮名）
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
        phonetic_given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name
            jpn: |-
              名（振り仮名）
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address (also serves as login ID)
            jpn: |-
              メールアドレス（ログインIDにもなる）
          example: taro.earthbrain@earthbrain.co.jp
        emails:
          description: |

            :::x-description-i18n:
            eng: |-
              Email address to receive notification email (multiple specifications can be specified)
            jpn: |-
              通知メールを受け取るメールアドレス（複数指定可能）
          example:
            - taro.earthbrain2@earthbrain.co.jp
            - taro.earthbrain3@earthbrain.co.jp
          type: array
          items:
            type: string
        picture:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              URL where icon images can be downloaded
            jpn: |-
              アイコン画像をダウンロード可能なURL
          format: URI
          example: https://sample.co.jp/v2/profile_image/pictures/default.png
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number 1
            jpn: |-
              電話番号1
          nullable: true
          example: '09012345678'
        phone_number_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number 2
            jpn: |-
              電話番号2
          nullable: true
          example: '09087654321'
        language:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Language settings (If not set, use browser language)
              * ```ja```/```ja-JP```: Japanese
              * ```en-US```: English
              * ```de-DE```: German
              * ```fr-FR```: French
              * ```es-ES```: Spanish
              * ```cs-CZ```: Czech
            jpn: |-
              言語設定（未設定の場合はブラウザ言語を利用）
              * ```ja```/```ja-JP```: 日本語
              * ```en-US```: 英語
              * ```de-DE```: ドイツ語
              * ```fr-FR```: フランス語
              * ```es-ES```: スペイン語
              * ```cs-CZ```: チェコ語
          enum:
            - ja
            - ja-JP
            - en-US
            - de-DE
            - fr-FR
            - es-ES
            - cs-CZ
          nullable: true
          format: ISO639
          example: ja-JP
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所
          allOf:
            - $ref: '#/components/schemas/V2PutCorporationUsersUserIdAddress'
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User privileges
              * ```super_admin```
              * ```admin```
              * ```manager```
              * ```staff```
            jpn: |-
              ユーザーの権限
              * ```super_admin```
              * ```admin```
              * ```manager```
              * ```staff```
          enum:
            - super_admin
            - admin
            - manager
            - staff
          example: manager
        category:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User participation form
              * ```member```:Belongs to a company
              * ```guest```:Join a company or group
            jpn: |-
              ユーザーの参加形態
              * ```member```:企業に所属
              * ```guest```:企業やグループに参加
          enum:
            - member
            - guest
          example: member
        invited:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Whether or not there is an invitation
              * ```true```: Pending
              * ```false```: Accepted invitation
            jpn: |-
              招待の有無
              * ```true```: 招待中
              * ```false```: 招待承認済み
          example: true
        joined_from:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              How a user participated in a corporation
              * ```invite```: guest of corporation
              * ```add```: member of corporation
            jpn: |-
              どう参加したか
              * ```invite```: 企業のゲスト
              * ```add```: 企業のメンバー
          enum:
            - invite
            - add
          example: invite
        external_identity:
          description: |

            :::x-description-i18n:
            eng: |-
              External ID base information
            jpn: |-
              外部ID基盤情報
          allOf:
            - $ref: '#/components/schemas/V2PutCorporationUsersUserIdExternalIdentity'
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Tags
            jpn: |-
              タグ
          example:
            - Deleted_Item
            - appType:PosiCom
          type: array
          items:
            type: string
            maxLength: 255
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
              Free description item
              * Any key and value can be set (both key and value must be 255 characters or less)
            jpn: |-
              自由記述項目
              * 任意のkey、valueを設定可能（key、valueともに255文字以下）
          pattern: ^.{1,255}$
          example:
            labelA: valueA
            labelB: valueB
          allOf:
            - $ref: '#/components/schemas/V2PutCorporationUsersUserIdCustomFields'
      required:
        - id
        - type
        - name
        - family_name
        - given_name
        - phonetic_family_name
        - phonetic_given_name
        - email
        - emails
        - picture
        - phone_number
        - phone_number_2
        - language
        - address
        - role
        - category
        - invited
        - joined_from
    V2PatchCorporationsCorporationIdUsersUserIdAddressDto:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code. ISO 3166-1 alpha-2 compliant
            jpn: |-
              国名コード ISO 3166-1 alpha-2形式
          example: JP
          format: ISO 3166-1 alpha-2
          nullable: true
          minLength: 0
          maxLength: 2
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code. Less than 255 characters
            jpn: |-
              郵便番号、255文字以下
          example: 105-0022
          minLength: 0
          maxLength: 255
          nullable: true
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              State. Less than 255 characters
            jpn: |-
              都道府県、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          minLength: 0
          maxLength: 255
          nullable: true
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City/Town/Village. Less than 255 characters
            jpn: |-
              市区町村、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          minLength: 0
          maxLength: 255
          nullable: true
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 1 (street address etc). Less than 255 characters
            jpn: |-
              住所1（番地など）、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          minLength: 0
          maxLength: 255
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 2 (building name, etc.). Less than 255 characters
            jpn: |-
              住所2（ビル名など）、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          minLength: 0
          maxLength: 255
          nullable: true
    V2PatchCorporationsCorporationIdUsersUserIdExternalIdentityDto:
      type: object
      properties:
        subject:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              ID of external ID base. Less than 255 characters
            jpn: |-
              外部ID基盤のID、255文字以下
          nullable: true
    V2PatchCorporationsCorporationIdUsersUserIdCustomFieldsDto:
      type: object
      properties: {}
    V2PatchCorporationsCorporationIdUsersUserIdBodyDto:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Username (full name). Less than 255 characters
            jpn: |-
              メンバー名（氏名）、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
          minLength: 0
          maxLength: 255
        family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Family name. Less than 120 characters
            jpn: |-
              性、120文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
          minLength: 0
          maxLength: 120
          nullable: true
        given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Given name. Less than 120 characters
            jpn: |-
              名、120文字以下
          example: |-

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎

          minLength: 0
          maxLength: 120
          nullable: true
        phonetic_family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name. Less than 255 characters (Double-byte or single-byte characters and any types of character are supported.)
            jpn: |-
              姓（振り仮名）、255文字以下（全角や半角は問わない）
          example: |-

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん

          minLength: 0
          maxLength: 255
          nullable: true
        phonetic_given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name.
              Less than 255 characters (Double-byte or single-byte characters and any types of character are supported.)
            jpn: |-
              名（振り仮名）、255文字以下（全角や半角は問わない）
          example: |-

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう

          minLength: 0
          maxLength: 255
          nullable: true
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address (also used as login ID)
            jpn: |-
              メールアドレス（ログインIDにもなる）
          example: taro.earthbrain@earthbrain.co.jp
          nullable: true
        emails:
          description: |

            :::x-description-i18n:
            eng: |-
              Email address to receive. Notification (multiple addresses can be specified)
            jpn: |-
              通知メールを受け取るメールアドレス（複数指定可能）
          example:
            - taro.earthbrain2@earthbrain.co.jp
            - taro.earthbrain3@earthbrain.co.jp
          uniqueItems: true
          nullable: true
          type: array
          items:
            type: string
        picture:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              URL of an icon image. Image converted to Base64 format. Smaller than 1MB
            jpn: |-
              アイコン画像、Base64形式に変換した画像、1Mbyte以下
          example: https://api.landlog.info/v2/profile_image/pictures/default.png
          format: uri
          nullable: true
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Primary phone number. Less than 255 characters
            jpn: |-
              電話番号1、255文字以下
          example: 1-234-567-8900
          nullable: true
          minLength: 0
          maxLength: 255
        phone_number_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Secondary phone number. Less than 255 characters
            jpn: |-
              電話番号2、255文字以下
          example: 1-987-654-3210
          nullable: true
          minLength: 0
          maxLength: 255
        language:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Language setting (if not specified, browser language is used)
              * ```ja```/ ```ja-JP```: Japanese
              * ```en-US```: English
              * ```de-DE```: German
              * ```fr-FR```: French
              * ```es-ES```: Spanish
              * ```cs-CZ```: Czech
            jpn: |-
              言語設定 (未指定の場合はブラウザの言語設定が使用される）
              * ```ja```/ ```ja-JP```: 日本語
              * ```en-US```: 英語
              * ```de-DE```: ドイツ語
              * ```fr-FR```: フランス語
              * ```es-ES```: スペイン語
              * ```cs-CZ```: チェコ語
          example: en-US
          enum:
            - ja
            - ja-JP
            - en-US
            - de-DE
            - fr-FR
            - es-ES
            - cs-CZ
          maxLength: 5
          nullable: true
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所
          nullable: true
          allOf:
            - $ref: >-
                #/components/schemas/V2PatchCorporationsCorporationIdUsersUserIdAddressDto
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role. Role in the group, ```super_admin ```, ```admin ```, ```manager ``` or ```staff ```
            jpn: |-
              ロール、ユーザーの権限　 ```super_admin ```、```admin ```、```manager ```、```staff ```
          enum:
            - super_admin
            - admin
            - manager
            - staff
        external_identity:
          description: |

            :::x-description-i18n:
            eng: |-
              External ID base information
            jpn: |-
              外部ID基盤情報
          nullable: true
          allOf:
            - $ref: >-
                #/components/schemas/V2PatchCorporationsCorporationIdUsersUserIdExternalIdentityDto
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation tag. Less than 255 characters
            jpn: |-
              タグ、255文字以下
          example:
            - tag1
            - tag2
          nullable: true
          type: array
          items:
            type: string
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
              Custom fields. Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）
          example:
            user-label1: user-value1
            user-label2: user-value2
          nullable: true
          allOf:
            - $ref: >-
                #/components/schemas/V2PatchCorporationsCorporationIdUsersUserIdCustomFieldsDto
    V2PatchCorporationsCorporationIdUsersUserIdAddress:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code. ISO 3166-1 alpha-2 compliant
            jpn: |-
              国名コード ISO 3166-1 alpha-2形式
          example: JP
          format: ISO 3166-1 alpha-2
          nullable: true
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号
          example: 105-0022
          pattern: .{0,255}
          nullable: true
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          pattern: .{0,255}
          nullable: true
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          nullable: true
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 1 (street address etc)
            jpn: |-
              住所1（番地など）
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          pattern: .{0,255}
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 2 (building name, etc.)
            jpn: |-
              住所2（ビル名など）
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          pattern: .{0,255}
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2PatchCorporationsCorporationIdUsersUserIdExternalIdentity:
      type: object
      properties:
        subject:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of external ID base
            jpn: |-
              外部ID基盤のID
          nullable: true
      required:
        - subject
    V2PatchCorporationsCorporationIdUsersUserIdCustomFields:
      type: object
      properties: {}
    V2PatchCorporationsCorporationIdUsersUserId:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation user ID
            jpn: |-
              ユーザーID
          format: uuid
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Account type
              * ```managed```: corporation user
            jpn: |-
              アカウント種別
              * 企業ユーザーは: ```managed```
          example: managed
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Username (full name)
            jpn: |-
              ユーザー名（氏名）
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
        family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Family name
            jpn: |-
              姓
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
        given_name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Given name
            jpn: |-
              名

          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
          nullable: true
        phonetic_family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name
            jpn: |-
              姓（振り仮名）
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
        phonetic_given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name
            jpn: |-
              名（振り仮名)
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address (also used as login ID)
            jpn: |-
              メールアドレス（ログインIDにもなる）
          example: example@example.co.jp
        emails:
          description: |

            :::x-description-i18n:
            eng: |-
              Email address to receive notification (multiple specifications can be specified)
            jpn: |-
              通知メールを受け取るメールアドレス（複数指定可能）
          example:
            - example2@example.co.jp
            - example3@example.co.jp
          type: array
          items:
            type: string
        picture:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              URL of an icon image
            jpn: |-
              アイコン画像をダウンロード可能なURL
          example: VGhpcyBpcyBsaW5...lIG9uZQpUaGlzIG
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Primary phone number
            jpn: |-
              電話番号1
          minLength: 0
          maxLength: 255
          nullable: true
          example: '09012345678'
        phone_number_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Secondary phone number
            jpn: |-
              電話番号2
          minLength: 0
          maxLength: 255
          nullable: true
          example: '09087654321'
        language:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Language setting (if not specified, browser language is used)
              * ```ja```/ ```ja-JP```: Japanese
              * ```en-US```: English
              * ```de-DE```: German
              * ```fr-FR```: French
              * ```es-ES```: Spanish
              * ```cs-CZ```: Czech
            jpn: |-
              言語設定 (未指定の場合はブラウザの言語設定が使用される）
              * ```ja```/ ```ja-JP```: 日本語
              * ```en-US```: 英語
              * ```de-DE```: ドイツ語
              * ```fr-FR```: フランス語
              * ```es-ES```: スペイン語
              * ```cs-CZ```: チェコ語
          enum:
            - ja
            - ja-JP
            - en-US
            - de-DE
            - fr-FR
            - es-ES
            - cs-CZ
          nullable: true
          example: ja
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所
          allOf:
            - $ref: >-
                #/components/schemas/V2PatchCorporationsCorporationIdUsersUserIdAddress
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role in the group, ```super_admin```, ```admin```, ```manager```, ```staff```
            jpn: |-
              ロール ```super_admin```、 ```admin```、 ```manager```、 ```staff```
          enum:
            - super_admin
            - admin
            - manager
            - staff
          example: staff
        category:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group joining form
              * ```guest```: when a user joins a corporation or a group
              * ```member```: when a user belongs to a corporation
            jpn: |-
              ユーザーの参加形態
              * ```member```: 企業に所属する場合
              * ```guest```: 企業に参加する場合
          enum:
            - member
            - guest
        invited:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation status
              * ```true```: Pending
              * ```false```: Accepted invitation
            jpn: |-
              招待の有無
              * ```true```: 招待中のとき
              * ```false```: 招待承諾済み
        joined_from:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              How a user participated in a corporation
              * ```invite```: guest of corporation
              * ```add```: member of corporation
            jpn: |-
              どう参加したか
              * ```invite```: 企業のゲスト
              * ```add```: 企業のメンバー
          enum:
            - invite
            - add
        external_identity:
          description: |

            :::x-description-i18n:
            eng: |-
              External ID base information
            jpn: |-
              外部ID基盤情報
          example:
            subject: 1234567890-xyz
          allOf:
            - $ref: >-
                #/components/schemas/V2PatchCorporationsCorporationIdUsersUserIdExternalIdentity
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation tag
            jpn: |-
              タグ、
          example:
            - tag1
            - tag2
          type: array
          items:
            type: string
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
                Custom fields. Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）
          example:
            user-label1: user-value1
            user-label2: user-value2
          allOf:
            - $ref: >-
                #/components/schemas/V2PatchCorporationsCorporationIdUsersUserIdCustomFields
      required:
        - id
        - type
        - name
        - family_name
        - given_name
        - phonetic_family_name
        - phonetic_given_name
        - email
        - emails
        - picture
        - phone_number
        - phone_number_2
        - language
        - address
        - role
        - category
        - invited
        - joined_from
    V2GetCorporationPeoplePerson:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Person ID
            jpn: |-
              人ID
          example: aca29db6-add9-40f6-a151-eb3036196847
          format: uuid
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Username(full name)
            jpn: |-
              氏名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
        family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Family name
            jpn: |-
              姓
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
          nullable: true
        given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Given name
            jpn: |-
              名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
          nullable: true
        phonetic_family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name
            jpn: |-
              姓（振り仮名）
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
          nullable: true
        phonetic_given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name
            jpn: |-
              名（振り仮名)
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
          nullable: true
        belonging:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Company’s name or department name and such where person belongs to
            jpn: |-
              所属する企業名や部署名など
          example: |

            :::x-example-i18n:
            eng: |-
              Construction Section 2
            jpn: |-
              建設２課
          nullable: true
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address
            jpn: |-
              メールアドレス
          example: taro.earthbrain@earthbrain.co.jp
          format: email
          nullable: true
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number
            jpn: |-
              電話番号
          example: 1-234-567-8900
          nullable: true
          minLength: 0
          maxLength: 255
      required:
        - id
        - name
        - family_name
        - given_name
        - phonetic_family_name
        - phonetic_given_name
        - belonging
        - email
        - phone_number
    V2GetCorporationPeople:
      type: object
      properties:
        total:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of items matched. 0 or more
            jpn: |-
              該当するデータの全件数 0以上
          example: 1
        people:
          description: |

            :::x-description-i18n:
            eng: |-
              List of corporation people 0 or more
            jpn: |-
              企業の人リスト 0以上
          type: array
          items:
            $ref: '#/components/schemas/V2GetCorporationPeoplePerson'
      required:
        - total
        - people
    V2PostCorporationsCorporationIdPeopleBodyDto:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              PersonName (full name). Less than 255 characters
            jpn: |-
              氏名、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
          minLength: 1
          maxLength: 255
        family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Family name Less than 120 characters
            jpn: |-
              性、120文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
          minLength: 1
          maxLength: 120
          nullable: true
        given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Given name. Less than 120 characters
            jpn: |-
              名、120文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
          minLength: 1
          maxLength: 120
          nullable: true
        phonetic_family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name. Less than 255 characters (Double-byte or single-byte characters and any types of character are supported.)
            jpn: |-
              姓（振り仮名）部分一致、255文字以下（全角や半角は問わない）
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
          minLength: 1
          maxLength: 255
          nullable: true
        phonetic_given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name.
              Less than 255 characters (Double-byte or single-byte characters and any types of character are supported.)
            jpn: |-
              名（振り仮名）部分一致、255文字以下（全角や半角は問わない）
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
          minLength: 1
          maxLength: 255
          nullable: true
        belonging:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
          description: |

            :::x-description-i18n:
            eng: |-
              Company's name or department name and such where person belongs to.
            jpn: |-
              人が所属する企業名や部署名など
          example: |

            :::x-example-i18n:
            eng: |-
              Construction Section 2
            jpn: |-
              建設２課
        email:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Email address
            jpn: |-
              メールアドレス
          example: earthbrain@earthbrain.co.jp
        phone_number:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number. Less than 255 characters
            jpn: |-
              電話番号、255文字以下
          example: '09012345678'
      required:
        - name
    V2PostCorporationsCorporationIdPeople:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation person ID
            jpn: |-
              人ID
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: |

            :::x-description-i18n:
            eng: |-
              Person name(full name)
            jpn: |-
              氏名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
        family_name:
          type: string
          nullable: true
          minLength: 1
          maxLength: 120
          description: |

            :::x-description-i18n:
            eng: |-
              Family name
            jpn: |-
              姓
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
        given_name:
          type: string
          nullable: true
          minLength: 1
          maxLength: 120
          description: |

            :::x-description-i18n:
            eng: |-
              Given name
            jpn: |-
              名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
        phonetic_family_name:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name
            jpn: |-
              姓（振り仮名）
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
        phonetic_given_name:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name
            jpn: |-
              名（振り仮名)
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
        belonging:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
          description: |

            :::x-description-i18n:
            eng: |-
              Company’s name or department name and such where person belongs to.
            jpn: |-
              人が所属する企業名や部署名など
          example: |

            :::x-example-i18n:
            eng: |-
              Construction Section 2
            jpn: |-
              建設２課
        email:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
          description: |

            :::x-description-i18n:
            eng: |-
              Email address
            jpn: |-
              メールアドレス
          example: example@example.co.jp
        phone_number:
          type: string
          nullable: true
          minLength: 0
          maxLength: 255
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number
            jpn: |-
              電話番号
          example: '09012345678'
      required:
        - id
        - name
    V2PatchCorporationsCorporationIdPeoplePersonIdBodyDto:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              PersonName (full name). Less than 255 characters
            jpn: |-
              氏名、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
          minLength: 1
          maxLength: 255
        family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Family name Less than 120 characters
            jpn: |-
              性、120文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
          minLength: 1
          maxLength: 120
          nullable: true
        given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Given name. Less than 120 characters
            jpn: |-
              名、120文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
          minLength: 1
          maxLength: 120
          nullable: true
        phonetic_family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name. Less than 255 characters (Double-byte or single-byte characters and any types of character are supported.)
            jpn: |-
              姓（振り仮名）部分一致、255文字以下（全角や半角は問わない）
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
          minLength: 1
          maxLength: 255
          nullable: true
        phonetic_given_name:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name.
              Less than 255 characters (Double-byte or single-byte characters and any types of character are supported.)
            jpn: |-
              名（振り仮名）部分一致、255文字以下（全角や半角は問わない）
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
        belonging:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
          description: |

            :::x-description-i18n:
            eng: |-
              Company's name or department name and such where person belongs to.
            jpn: |-
              人が所属する企業名や部署名など
          example: |

            :::x-example-i18n:
            eng: |-
              Construction Section 2
            jpn: |-
              建設２課
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address
            jpn: |-
              メールアドレス
          example: earthbrain@earthbrain.co.jp
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number. Less than 255 characters
            jpn: |-
              電話番号、255文字以下
          example: '09012345678'
          nullable: true
          minLength: 1
          maxLength: 255
    V2PatchCorporationsCorporationIdPeoplePersonId:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation person ID
            jpn: |-
              人ID
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: |

            :::x-description-i18n:
            eng: |-
              Person name(full name)
            jpn: |-
              氏名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
        family_name:
          type: string
          nullable: true
          minLength: 1
          maxLength: 120
          description: |

            :::x-description-i18n:
            eng: |-
              Family name
            jpn: |-
              姓
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
        given_name:
          type: string
          nullable: true
          minLength: 1
          maxLength: 120
          description: |

            :::x-description-i18n:
            eng: |-
              Given name
            jpn: |-
              名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
        phonetic_family_name:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name
            jpn: |-
              姓（振り仮名）
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
        phonetic_given_name:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name
            jpn: |-
              名（振り仮名)
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
        belonging:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
          description: |

            :::x-description-i18n:
            eng: |-
              Company’s name or department name and such where person belongs to.
            jpn: |-
              人が所属する企業名や部署名など
          example: |

            :::x-example-i18n:
            eng: |-
              Construction Section 2
            jpn: |-
              建設２課
        email:
          type: string
          nullable: true
          minLength: 1
          maxLength: 255
          description: |

            :::x-description-i18n:
            eng: |-
              Email address
            jpn: |-
              メールアドレス
          example: example@example.co.jp
        phone_number:
          type: string
          nullable: true
          minLength: 0
          maxLength: 255
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number
            jpn: |-
              電話番号
          example: '09012345678'
      required:
        - id
        - name
        - family_name
        - given_name
        - phonetic_family_name
        - phonetic_given_name
        - belonging
        - email
        - phone_number
    V2GetCorporationPersonPersonId:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Person ID
            jpn: |-
              人ID
          example: aca29db6-add9-40f6-a151-eb3036196847
          format: uuid
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Person name (full name)
            jpn: |-
              氏名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
        family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Family name
            jpn: |-
              姓
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
          nullable: true
        given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Given name
            jpn: |-
              名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
          nullable: true
        phonetic_family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name
            jpn: |-
              姓（振り仮名）
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
          nullable: true
        phonetic_given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name
            jpn: |-
              名（振り仮名)
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
          nullable: true
        belonging:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Company’s name or department name and such where person belongs to
            jpn: |-
              所属する企業名や部署名など
          example: |

            :::x-example-i18n:
            eng: |-
              Construction Section 2
            jpn: |-
              建設２課
          nullable: true
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address
            jpn: |-
              メールアドレス
          example: taro.earthbrain@earthbrain.co.jp
          format: email
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number
            jpn: |-
              電話番号
          example: 1-234-567-8900
          nullable: true
          minLength: 0
          maxLength: 255
      required:
        - id
        - name
        - email
    V2GetCorporationGroupsGroupAddress:
      type: object
      properties:
        country:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Country code, ISO 3166-1 alpha-2 compliant
            jpn: |-
              国名コード、ISO 3166-1 alpha-2形式

          format: ISO 3166-1 alpha-2
          example: JP
          minLength: 2
          maxLength: 2
          nullable: true
        zip_code:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号

          example: 105-0022
          nullable: true
        state:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県

          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          nullable: true
        city:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村

          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          nullable: true
        address_1:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 1(street number)
            jpn: |-
              住所1(番地など)

          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 2(building)
            jpn: |-
              住所2(ビル名など)
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2GetCorporationGroupsGroupCustomFields:
      type: object
      properties: {}
    V2GetCorporationGroupsGroup:
      type: object
      properties:
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID

          example: c8a17724-caeb-4233-b8d8-ba38690a113d
          format: uuid
        parent_group_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Parent group ID
            jpn: |-
              親グループID

          example: 6b07a1a1-3ee7-4b0f-845b-3deee6d29b58
          format: uuid
          nullable: true
        corporation_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID

          example: 25607d8a-b636-48bb-974a-345626601267
          format: uuid
          nullable: true
        name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group name
            jpn: |-
              グループ名

          example: |

            :::x-example-i18n:
            eng: |-
              Sales department
            jpn: |-
              販売部門
        phone_number:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Primary phone number
            jpn: |-
              電話番号1

          example: 1-234-567-8900
          nullable: true
        phone_number_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Secondary phone number
            jpn: |-
              電話番号2

          example: 1-987-654-3210
          nullable: true
        address:
          description: |-

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所

          allOf:
            - $ref: '#/components/schemas/V2GetCorporationGroupsGroupAddress'
        tags:
          type: array
          description: |-

            :::x-description-i18n:
            eng: |-
              Group tag
            jpn: |-
              グループタグ

          example:
            - tag1
            - tag2
          nullable: true
        custom_fields:
          description: |-

            :::x-description-i18n:
            eng: |-
              Custom fields, Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）

          example:
            labelA: valueB
            labelC: valueD
            labelE: valueF
          nullable: true
          allOf:
            - $ref: '#/components/schemas/V2GetCorporationGroupsGroupCustomFields'
      required:
        - id
        - corporation_id
        - name
        - phone_number
        - phone_number_2
        - tags
    V2GetCorporationGroups:
      type: object
      properties:
        total:
          type: number
          description: |-

            :::x-description-i18n:
            eng: |-
              Total number of items matched
            jpn: |-
              該当するデータの全件数

          example: 1
        groups:
          description: |-

            :::x-description-i18n:
            eng: |-
              List of groups
            jpn: |-
              該当するグループのリスト

          type: array
          items:
            $ref: '#/components/schemas/V2GetCorporationGroupsGroup'
      required:
        - total
        - groups
    V2PostCorporationsCorporationIdAddress:
      type: object
      properties:
        country:
          type: string
          format: ISO 3166-1 alpha-2
          description: |-

            :::x-description-i18n:
            eng: |-
              Country code, ISO 3166-1 alpha-2 compliant
            jpn: |-
              国名コード、ISO 3166-1 alpha-2形式

          example: JP
          minLength: 0
          maxLength: 2
          nullable: true
        zip_code:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Postal code, less than 255 characters
            jpn: |-
              郵便番号、255文字以下

          example: 105-0022
          pattern: .{1,255}
          minLength: 0
          maxLength: 255
          nullable: true
        state:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              State, less than 255 characters
            jpn: |-
              都道府県、255文字以下

          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          pattern: .{1,255}
          minLength: 0
          maxLength: 255
          nullable: true
        city:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              City/Town/Village, less than 255 characters
            jpn: |-
              市区町村、255文字以下

          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          minLength: 0
          maxLength: 255
          nullable: true
        address_1:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 1, less than 255 characters
            jpn: |-
              住所1（番地など）、255文字以下

          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          minLength: 0
          maxLength: 255
          nullable: true
        address_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 2, less than 255 characters
            jpn: |-
              住所2（ビル名など）、255文字以下

          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          minLength: 0
          maxLength: 255
          nullable: true
    V2PostCorporationsCorporationIdCustomFields:
      type: object
      properties: {}
    V2PostCorporationsCorporationIdBodyDto:
      type: object
      properties:
        parent_group_id:
          type: string
          format: uuid
          description: |-

            :::x-description-i18n:
            eng: |-
              Parent group ID
            jpn: |-
              親グループID

          example: f965f8a0-b73a-4c73-a7f9-0efebc4873b5
          nullable: true
        name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group name
            jpn: |-
              グループ名

          example: |

            :::x-example-i18n:
            eng: |-
              Sales department,
            jpn: |-
              販売部門
          minLength: 1
          maxLength: 255
        phone_number:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Primary phone number
            jpn: |-
              電話番号1

          example: 1-234-567-8900
          minLength: 0
          maxLength: 255
        phone_number_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Secondary phone number
            jpn: |-
              電話番号2

          example: 1-234-567-8900
          minLength: 0
          maxLength: 255
        address:
          description: |-

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所

          allOf:
            - $ref: '#/components/schemas/V2PostCorporationsCorporationIdAddress'
        tags:
          description: |-

            :::x-description-i18n:
            eng: |-
              Tags
            jpn: |-
              タグ

          example:
            - tag1
            - tag2
          type: array
          items:
            type: string
        custom_fields:
          description: |-

            :::x-description-i18n:
            eng: |-
              Custom fields, Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）

          example:
            labelA: valueB
            labelC: valueD
            labelE: valueF
          allOf:
            - $ref: '#/components/schemas/V2PostCorporationsCorporationIdCustomFields'
      required:
        - name
    V2PostCorporationsCorporationId:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |-

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID

          example: c8a17724-caeb-4233-b8d8-ba38690a113d
        corporation_id:
          type: string
          format: uuid
          description: |-

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID

          example: 9d338e51-78d7-4ab0-b55a-f0088340c98d
        parent_group_id:
          type: string
          format: uuid
          description: |-

            :::x-description-i18n:
            eng: |-
              Parent group ID
            jpn: |-
              親グループID

          example: f965f8a0-b73a-4c73-a7f9-0efebc4873b5
        name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group name
            jpn: |-
              グループ名

          example: Sales department
        phone_number:
          type: string
          pattern: .{1,255}
          description: |-

            :::x-description-i18n:
            eng: |-
              Primary phone number
            jpn: |-
              企業の電話番号1

          example: 1-234-567-8900
          nullable: true
        phone_number_2:
          type: string
          pattern: .{1,255}
          description: |-

            :::x-description-i18n:
            eng: |-
              Secondary phone number
            jpn: |-
              企業の電話番号2

          example: 1-987-654-3210
          nullable: true
        address:
          description: |-

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所

          allOf:
            - $ref: '#/components/schemas/V2PostCorporationsCorporationIdAddress'
        tags:
          description: |-

            :::x-description-i18n:
            eng: |-
              Tags
            jpn: |-
              タグ

          example:
            - tag1
            - tag2
          type: array
          items:
            type: string
        custom_fields:
          type: object
          description: |-

            :::x-description-i18n:
            eng: |-
              Custom fields, Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）

          example:
            labelA: valueB
            labelC: valueD
            labelE: valueF
      required:
        - id
        - corporation_id
        - parent_group_id
        - name
        - phone_number
        - phone_number_2
        - address
        - tags
    V2GetCorporationsCorporationIdGroupsGroupIdAddress:
      type: object
      properties:
        country:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
                Country code, ISO 3166-1 alpha-2 compliant
            jpn: |-
                国名コード、ISO 3166-1 alpha-2形式

          format: ISO 3166-1 alpha-2
          example: JP
          nullable: true
        zip_code:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号

          example: 105-0022
          pattern: .{1,255}
          nullable: true
        state:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県

          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          pattern: .{1,255}
          nullable: true
        city:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村

          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          pattern: .{1,255}
          nullable: true
        address_1:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 1
            jpn: |-
              住所1（番地など）

          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          pattern: .{1,255}
          nullable: true
        address_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 2
            jpn: |-
              住所2（ビル名など）

          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          pattern: .{1,255}
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2GetCorporationsCorporationIdGroupsGroupIdCustomFields:
      type: object
      properties: {}
    V2GetCorporationsCorporationIdGroupsGroupId:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |-

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID

          example: c8a17724-caeb-4233-b8d8-ba38690a113d
        parent_group_id:
          type: string
          format: uuid
          description: |-

            :::x-description-i18n:
            eng: |-
              Parent group ID
            jpn: |-
              親グループID

          example: 2d113086-f9b6-401f-871c-2ffa403e338b
          nullable: true
        corporation_id:
          type: string
          format: uuid
          description: |-

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID

          example: 0f515aa5-fd12-4cfc-b3d6-0c5984055901
        name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group name
            jpn: |-
              グループ名

          example: |

            :::x-example-i18n:
            eng: |-
              Sales department,
            jpn: |-
              販売部門
        phone_number:
          type: string
          pattern: .{1,255}
          description: |-

            :::x-description-i18n:
            eng: |-
              Primary phone number
            jpn: |-
              電話番号1

          example: 1-234-567-8900
          nullable: true
        phone_number_2:
          type: string
          pattern: .{1,255}
          description: |-

            :::x-description-i18n:
            eng: |-
              Secondary phone number
            jpn: |-
              電話番号2

          example: 1-987-654-3210
          nullable: true
        address:
          description: |-

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所

          allOf:
            - $ref: >-
                #/components/schemas/V2GetCorporationsCorporationIdGroupsGroupIdAddress
        tags:
          description: |-

            :::x-description-i18n:
            eng: |-
              Tags
            jpn: |-
              タグ

          example:
            - tag1
            - tag2
          type: array
          items:
            type: string
        custom_fields:
          description: |-

            :::x-description-i18n:
            eng: |-
              Custom fields, Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）

          example:
            labelA: valueB
            labelC: valueD
            labelE: valueF
          allOf:
            - $ref: >-
                #/components/schemas/V2GetCorporationsCorporationIdGroupsGroupIdCustomFields
      required:
        - id
        - parent_group_id
        - corporation_id
        - name
        - phone_number
        - phone_number_2
        - address
        - tags
    V2PutCorporationsCorporationIdGroupsGroupIdAddressDto:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code, ISO 3166-1 alpha-2 compliant
            jpn: |-
              国名コード、ISO 3166-1 alpha-2形式
          example: JP
          format: ISO 3166-1 alpha-2
          minLength: 0
          maxLength: 2
          nullable: true
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code, less than 255 characters
            jpn: |-
              郵便番号、255文字以下
          example: 105-0022
          minLength: 0
          maxLength: 255
          nullable: true
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              State, less than 255 characters
            jpn: |-
              都道府県、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          minLength: 0
          maxLength: 255
          nullable: true
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City/Town/Village, less than 255 characters
            jpn: |-
              市区町村、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          minLength: 0
          maxLength: 255
          nullable: true
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 1, less than 255 characters
            jpn: |-
              住所1（番地など）、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          minLength: 0
          maxLength: 255
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 2, less than 255 characters
            jpn: |-
              住所2（ビル名など）、255文字以下
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          minLength: 0
          maxLength: 255
          nullable: true
    V2PutCorporationsCorporationIdGroupsGroupIdCustomFieldsDto:
      type: object
      properties: {}
    V2PutCorporationsCorporationIdGroupsGroupIdBodyDto:
      type: object
      properties:
        parent_group_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Parent group ID. A corporation specified for corporation_id or a group whose parent is the specified corporation can be set

              admin or higher level of right is required in the specified group. When the key is not sent, the value is not updated and remains the same
            jpn: |-
              親グループID。corporation_idで指定している企業、もしくはその企業を親に持つグループのみ指定可能

              指定したグループでadmin以上の権限を持つ必要がある。キーを送らない場合、値は更新せずにそのままとなる
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group name
            jpn: |-
              グループ名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
          minLength: 1
          maxLength: 255
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Primary phone number
            jpn: |-
              電話番号1
          example: 03-1234-5678
          nullable: true
          minLength: 0
          maxLength: 255
        phone_number_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Secondary phone number
            jpn: |-
              電話番号2
          example: 03-9876-5432
          nullable: true
          minLength: 0
          maxLength: 255
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所
          nullable: true
          allOf:
            - $ref: >-
                #/components/schemas/V2PutCorporationsCorporationIdGroupsGroupIdAddressDto
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Tags
            jpn: |-
              タグ
          example:
            - tag1
            - tag2
          nullable: true
          type: array
          items:
            type: string
            maxLength: 255
            minLength: 1
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
              Custom fields, Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）
          example:
            labelA: valueB
            labelC: valueD
            labelE: valueF
          nullable: true
          allOf:
            - $ref: >-
                #/components/schemas/V2PutCorporationsCorporationIdGroupsGroupIdCustomFieldsDto
      required:
        - name
    V2PutCorporationsCorporationIdGroupsGroupIdAddress:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Nation code
            jpn: |-
              国名コード
          example: JP
          format: ISO 3166-1 alpha-2
          nullable: true
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Zip code
            jpn: |-
              郵便番号
          example: 105-0022
          pattern: .{0,255}
          nullable: true
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Prefecture
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          pattern: .{0,255}
          nullable: true
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          pattern: .{0,255}
          nullable: true
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address line 1(e.g. Street no.)
            jpn: |-
              住所1（番地など）
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          pattern: .{0,255}
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address line 2(e.g. Building name)
            jpn: |-
              住所2 (ビル名など）
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          pattern: .{0,255}
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2PutCorporationsCorporationIdGroupsGroupId:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID
        parent_group_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Parent Group ID
            jpn: |-
              親グループID
          nullable: true
        corporation_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID. ID of a corporation that the group belongs to
            jpn: |-
              企業ID。所属企業のID
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group name
            jpn: |-
              グループ名
          example: |

            :::x-example-i18n:
            eng: |-
              Sales department,
            jpn: |-
              販売部門
        domain:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Domain name
            jpn: |-
              ドメイン
          example: https:localhost.com
          nullable: true
        phone_number:
          type: string
          pattern: .{0,255}
          description: |

            :::x-description-i18n:
            eng: |-
              Primary phone number
            jpn: |-
              電話番号1
          example: 1-234-567-8900
          nullable: true
        phone_number_2:
          type: string
          pattern: .{0,255}
          description: |

            :::x-description-i18n:
            eng: |-
              Secondary phone number
            jpn: |-
              電話番号2
          example: 1-987-654-3210
          nullable: true
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              企業の住所
          allOf:
            - $ref: >-
                #/components/schemas/V2PutCorporationsCorporationIdGroupsGroupIdAddress
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Group tags
            jpn: |-
              グループタグ
          example:
            - tag1
            - tag2
          type: array
          items:
            type: string
        custom_fields:
          type: object
          description: |

            :::x-description-i18n:
            eng: |-
              Custom attribute. Freely key and values available(Length of key and value must be shorter than 256 characters)
            jpn: |-
              自由記述項目。任意のkey、valueを設定可能（key、valueともに256文字未満）
          example:
            labelA: valueB
            labelC: valueD
            labelE: valueF
      required:
        - id
        - parent_group_id
        - corporation_id
        - name
        - domain
        - phone_number
        - phone_number_2
        - address
        - tags
    V2GetCorporationCorporationIdGroupsGroupIdMembersAddress:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code. ISO 3166-1 alpha-2 compliant
            jpn: |-
              国名コード ISO 3166-1 alpha-2形式
          format: ISO 3166-1 alpha-2
          example: JP
          nullable: true
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号
          example: 105-0022
          nullable: true
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          nullable: true
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          nullable: true
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 1 (street address etc)
            jpn: |-
              住所1（番地など）
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 2 (building name, etc.)
            jpn: |-
              住所2（ビル名など）
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2GetCorporationCorporationIdGroupsGroupIdMembersProfile:
      type: object
      properties:
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Account type
              * ```managed```:  User is managed by a corporation
            jpn: |-
              アカウント種別
              * ```managed```: ユーザーは企業によって管理されています
          enum:
            - managed
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User name(full name)
            jpn: |-
              ユーザー名（氏名）
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
        family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Family name
            jpn: |-
              姓
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
          nullable: true
        given_name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Given name
            jpn: |-
              名

          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
          nullable: true
        phonetic_family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name. Full-width or half-width does not matter
            jpn: |-
              姓（振り仮名) 全角や半角は問わない
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
          nullable: true
        phonetic_given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name. Full-width or half-width does not matter
            jpn: |-
              名（振り仮名) 全角や半角は問わない
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
          nullable: true
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address (also used as login ID)
            jpn: |-
              メールアドレス（ログインIDにもなる）
          example: earthbrain@earthbrain.co.jp
          format: email
        emails:
          description: |

            :::x-description-i18n:
            eng: |-
              Email address to receive notification (multiple specifications can be specified)
            jpn: |-
              通知メールを受け取るメールアドレス（複数指定可能）
          example:
            - earthbrain2@earthbrain.co.jp
            - earthbrain3@earthbrain.co.jp
          uniqueItems: true
          type: array
          items:
            type: string
        picture:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              URL of an icon image
            jpn: |-
              アイコン画像をダウンロード可能なURL
          example: https://api.landlog.info/v2/profile_image/pictures/default.png
          format: uri
          nullable: true
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Primary phone number
            jpn: |-
              電話番号1
          example: 1-234-567-8900
          nullable: true
        phone_number_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Secondary phone number
            jpn: |-
              電話番号2
          example: 1-987-654-3210
          nullable: true
        language:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Language setting (if not specified, browser language is used)
              * ```ja```/ ```ja-JP```: Japanese
              * ```en-US```: English
              * ```de-DE```: German
              * ```fr-FR```: French
              * ```es-ES```: Spanish
              * ```cs-CZ```: Czech
            jpn: |-
              言語設定 (未指定の場合はブラウザの言語設定が使用される）
              * ```ja```/ ```ja-JP```: 日本語
              * ```en-US```: 英語
              * ```de-DE```: ドイツ語
              * ```fr-FR```: フランス語
              * ```es-ES```: スペイン語
              * ```cs-CZ```: チェコ語
          enum:
            - ja
            - ja-JP
            - en-US
            - de-DE
            - fr-FR
            - es-ES
            - cs-CZ
          nullable: true
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所の情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetCorporationCorporationIdGroupsGroupIdMembersAddress
      required:
        - email
    V2GetCorporationCorporationIdGroupsGroupIdMembersMembers:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group member ID
            jpn: |-
              グループメンバーID
          format: uuid
        user_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User ID of a group member
            jpn: |-
              グループメンバーとなっているユーザーのID
          format: uuid
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Refine search by role. ```super_admin```, ```admin```, ```manager```, or ```staff```. None specified by default
            jpn: |-
              ロールでの絞り込み。```super_admin```、```admin```、```manager```、```staff```を指定可能。デフォルトは指定なし。
          enum:
            - super_admin
            - admin
            - manager
            - staff
        category:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group joining form. Alway ```guest```
            jpn: |-
              ユーザーの参加形態 ```guest```固定
          enum:
            - guest
        profile:
          description: |

            :::x-description-i18n:
            eng: |-
              Group member profile. Displayed only when ```profile``` is specified for the includes query parameter
            jpn: |-
              メンバーに紐づくユーザー情報、クエリパラメータのincludesに```profile```が指定された場合のみ表示
          allOf:
            - $ref: >-
                #/components/schemas/V2GetCorporationCorporationIdGroupsGroupIdMembersProfile
      required:
        - id
        - user_id
        - role
        - category
    V2GetCorporationCorporationIdGroupsGroupIdMembers:
      type: object
      properties:
        total:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of items which match filters
            jpn: |-
              該当するデータの全件数
          example: 1
        members:
          description: |

            :::x-description-i18n:
            eng: |-
              List of group members
            jpn: |-
              メンバー
          type: array
          items:
            $ref: >-
              #/components/schemas/V2GetCorporationCorporationIdGroupsGroupIdMembersMembers
      required:
        - total
        - members
    V2PutCorporationsGroupsMemberDto:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group member ID
            jpn: |-
              グループメンバーID
          format: uuid
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role in the group. ```super_admin```, ```admin```, ```manager```, or ```staff```. None specified by default
            jpn: |-
              ユーザーの権限 ```super_admin```, ```admin```, ```manager```, or ```staff``` を指定可能。デフォルトは指定なし。
          enum:
            - super_admin
            - admin
            - manager
            - staff
      required:
        - id
        - role
    V2PutCorporationsGroupsMembersBodyDto:
      type: object
      properties:
        members:
          description: |

            :::x-description-i18n:
            eng: |-
              List of group members
            jpn: |-
              グループメンバーの一覧
          type: array
          items:
            $ref: '#/components/schemas/V2PutCorporationsGroupsMemberDto'
      required:
        - members
    V2PutCorporationsGroupsMember:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group member ID
            jpn: |-
              グループメンバーのID
          format: uuid
          example: 84ef1b90-8e60-4d6d-8f50-16870d28d555
        user_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーのID
          format: uuid
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Refine search by role. ```super_admin```, ```admin```, ```manager```, or ```staff```. None specified by default
            jpn: |-
              ロールでの絞り込み。```super_admin```、```admin```、```manager```、```staff```を指定可能。デフォルトは指定なし
          enum:
            - super_admin
            - admin
            - manager
            - staff
          example: staff
        category:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group joining form. Only ```guest```
            jpn: |-
              ユーザーの参加形態、```guest```固定
          enum:
            - guest
      required:
        - id
        - user_id
        - role
        - category
    V2PutCorporationsGroupsMembers:
      type: object
      properties:
        total:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of items which match filters. 0 or more
            jpn: |-
              該当するデータの全件数、 0以上
          example: 1
        members:
          description: |

            :::x-description-i18n:
            eng: |-
              List of group members. 0 or more
            jpn: |-
              メンバー、 0以上
          type: array
          items:
            $ref: '#/components/schemas/V2PutCorporationsGroupsMember'
      required:
        - total
        - members
    V2PostCorporationsCorporationIdInvitesBodyDto:
      type: object
      properties:
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address
            jpn: |-
              メールアドレス
    V2PostCorporationsCorporationIdInvites:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation member ID
            jpn: |-
              企業メンバーID
        user_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              User ID of a corporation member
            jpn: |-
              企業メンバーになっているユーザーのID
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role in the group
              * Can not set role when calling API so the response will only have ```staff```
            jpn: |-
              メンバーの権限
              * API 呼び出し時にロールを設定できないため、応答には ```staff``` のみが含まれます
          enum:
            - super_admin
            - admin
            - manager
            - staff
        category:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group joining form
              * All users invited to the corporation via this API will have the category ```guest```
            jpn: |-
              * このAPIを通じて企業に招待されたすべてのユーザーは、カテゴリー```guest```を持ちます
          enum:
            - member
            - guest
        invited:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation status
              * ```true```: pending
            jpn: |-
              招待の有無, 招待中のときは```true```
      required:
        - id
        - user_id
        - role
        - category
        - invited
    V2CorporationInvite:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Site invite ID (UUID format)
            jpn: |-
              招待ID
        user_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              User ID (UUID format)
            jpn: |-
              ユーザーID
        status:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Invite status, ```accept```, ```pending```, or ```expired```
            jpn: |-
              招待ステータス, ```accept```（承認済み）、```pending```（保留中）、```expired```（期限切れ）
          enum:
            - accept
            - pending
            - expired
      required:
        - id
        - user_id
        - status
    V2GetCorporationsCorporationIdInvites:
      type: object
      properties:
        total:
          type: number
          example: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of records data
            jpn: |-
              該当するデータの全件数
        invites:
          description: |

            :::x-description-i18n:
            eng: |-
              List of invited users matched
            jpn: |-
              該当する招待のリスト
          type: array
          items:
            $ref: '#/components/schemas/V2CorporationInvite'
      required:
        - total
        - invites
    V2PatchCorporationsCorporationIdInvitesBodyDto:
      type: object
      properties:
        accept:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              ```true``` means approve, ```false``` means reject
            jpn: |-
              ```true```は承認、```false```は拒否
      required:
        - accept
    V2GetCorporationsCorporationIdAuthorizationSetting:
      type: object
      properties:
        two_factor_authentication:
          type: string
          description: 企業の二要素認証の設定
          example: always
        login_notification:
          type: string
          description: 企業のログイン通知の設定
          example: enabled
      required:
        - two_factor_authentication
        - login_notification
    V2PatchCorporationsCorporationIdAuthenticationSettingBodyDto:
      type: object
      properties:
        two_factor_authentication:
          type: string
          description: 企業の二要素認証の設定
          enum:
            - always
            - risk_based
            - disabled
            - none
        login_notification:
          type: string
          description: 企業のログイン通知の設定
          enum:
            - enabled
            - disabled
            - none
    V2CorporationsCorporationIdAuthenticationSetting:
      type: object
      properties:
        two_factor_authentication:
          type: string
          description: |-
            always: 常時有効
                risk_based: ハイリスク時のみ
                disabled: 無効
                none: 未設定
          enum:
            - always
            - risk_based
            - disabled
            - none
        login_notification:
          type: string
          description: |-
            enabled: 有効
                disabled: 無効
                none: 未設定
          enum:
            - enabled
            - disabled
            - none
      required:
        - two_factor_authentication
        - login_notification
    V2GetCorporationBatchPending:
      type: object
      properties:
        uuid:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Batch ID
            jpn: |-
              バッチID

          example: c8a17724-caeb-4233-b8d8-ba38690a113d
          format: uuid
        corporation_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID

          example: 3b2d6f26-bada-438c-b329-47c974eec445
          format: uuid
        action:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Action type
            jpn: |-
              アクションの種類

          example: Delete
          enum:
            - Delete
            - Restore
        created_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Creation time
            jpn: |-
              作成時間
          example: '2021-08-02T00:00:00+00:00'
      required:
        - uuid
        - corporation_id
        - action
        - created_at
    V2GetCorporationBatchesPending:
      type: object
      properties:
        total:
          type: number
          description: |-

            :::x-description-i18n:
            eng: |-
              Total number of items matched
            jpn: |-
              該当するデータの全件数

          example: 1
        batches:
          description: |-

            :::x-description-i18n:
            eng: |-
              List of batch jobs waiting to be processed
            jpn: |-
              処理待ちバッチジョブのリスト

          type: array
          items:
            $ref: '#/components/schemas/V2GetCorporationBatchPending'
      required:
        - total
        - batches
    V2GetCorporationBatchExecuted:
      type: object
      properties:
        uuid:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Batch ID
            jpn: |-
              バッチID

          example: c8a17724-caeb-4233-b8d8-ba38690a113d
          format: uuid
        corporation_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID

          example: 3b2d6f26-bada-438c-b329-47c974eec445
          format: uuid
        action:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Action type
            jpn: |-
              アクションの種類

          example: Delete
          enum:
            - Delete
            - Restore
        status:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Status of batch
            jpn: |-
              バッチのステータス

          example: Successful
          enum:
            - Successful
            - Failed
        message:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Message
            jpn: |-
              メッセージ

          nullable: true
          example: Constrant failed
        performed_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Performance time
            jpn: |-
              パフォーマンス時間
          example: '2021-08-02T00:00:00+00:00'
      required:
        - uuid
        - corporation_id
        - action
        - status
        - message
        - performed_at
    V2GetCorporationBatchesExecuted:
      type: object
      properties:
        total:
          type: number
          description: |-

            :::x-description-i18n:
            eng: |-
              Total number of items matched
            jpn: |-
              該当するデータの全件数

          example: 1
        batches:
          description: |-

            :::x-description-i18n:
            eng: |-
              List of processed batch jobs
            jpn: |-
              処理されたバッチジョブのリスト

          type: array
          items:
            $ref: '#/components/schemas/V2GetCorporationBatchExecuted'
      required:
        - total
        - batches
    V2GetSitesCorporation:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          format: uuid
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation name
            jpn: |-
              企業名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
      required:
        - id
        - name
    V2GetSitesAuthor:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Creator ID
            jpn: |-
              作成者ID
          format: uuid
          nullable: true
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Creator name
            jpn: |-
              作成者名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
          nullable: true
      required:
        - id
        - name
    V2GetSitesAddress:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード
          example: JP
          format: ISO 3166-1 alpha-2
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号
          example: 105-0022
          nullable: true
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              町名・番地
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Building name
            jpn: |-
              建物名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2GetSitesCoordinate:
      type: object
      properties:
        latitude:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Latitude
            jpn: |-
              緯度
          example: '35.66689081094339'
        longitude:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Longitude
            jpn: |-
              経度
          example: '139.76969528307006'
        time_zone:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Time zone
            jpn: |-
              タイムゾーン
          example: Asia/Tokyo
          nullable: true
      required:
        - latitude
        - longitude
        - time_zone
    V2GetSitesUnit:
      type: object
      properties:
        distance:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (distance)
            jpn: |-
              単位(距離)
          default: m
        area:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (area)
            jpn: |-
              単位(面積)
          default: m2
        volume:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (volume)
            jpn: |-
              単位(体積)
          default: m3
        currency:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (currency)
            jpn: |-
              単位(通貨)
          default: JPY
        weight:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (weight)
            jpn: |-
              単位(重量)
          default: kg
      required:
        - distance
        - area
        - volume
        - currency
        - weight
    V2GetSitesWorkPeriod:
      type: object
      properties:
        planned_start_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Planned construction period (start date)
            jpn: |-
              予定工期(開始日)
          example: '2019-08-01'
          pattern: ^\d{4}-\d{2}-\d{2}
          format: ISO 8601 YYYY-MM-DD
        planned_end_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Planned construction period (end date)
            jpn: |-
              予定工期(終了日)
          example: '2020-07-30'
          pattern: ^\d{4}-\d{2}-\d{2}
          format: ISO 8601 YYYY-MM-DD
        start_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Actual construction period (start date)
            jpn: |-
              実績工期(開始日)
          example: '2019-08-01'
          pattern: ^\d{4}-\d{2}-\d{2}
          format: ISO 8601 YYYY-MM-DD
          nullable: true
        end_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Actual construction period (start date)
            jpn: |-
              実績工期(終了日)
          example: '2020-07-30'
          pattern: ^\d{4}-\d{2}-\d{2}
          nullable: true
          format: ISO 8601 YYYY-MM-DD
      required:
        - planned_start_date
        - planned_end_date
        - start_date
        - end_date
    V2GetSitesWorkType:
      type: object
      properties:
        i_con:
          type: string
          description: |+

            :::x-description-i18n:
            eng: |-
              Compatible with i-Con
              * ```supported```: Supported
              * ```unsupported```: Unsupported
              * ```other```: Other

            jpn: |-
              工種i-Con対応
              * ```supported```: サポートされている
              * ```unsupported```: サポートされていない
              * ```other```: その他

          enum:
            - supported
            - unsupported
            - other
          default: other
          nullable: true
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction type
              * i_con: ```other```: Other
              * i_con: ```supported```
                * ```Road work```
                * ```River work```
                * ```Shore work```
                * ```Erosion control```
                * ```Pavement work```
              * i-con: ```unsupported```
                * e.g: ```1.Land preparation work```
            jpn: |-
              工種タイプ
              * i_con: ```other```: その他
              * i_con: ```supported```
                * ```道路土工```
                * ```河川土工```
                * ```海岸土工```
                * ```砂防土工```
                * ```舗装工```
              * i-con: ```unsupported```
                * e.g: ```1.土地造成工事 ```
          enum:
            - 道路土工
            - 河川土工
            - 海岸土工
            - 砂防土工
            - 舗装工
            - Road work
            - River work
            - Shore work
            - Erosion control
            - Pavement work
          nullable: true
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction type text Cannot be specified if other than ```other```
            jpn: |-
              工種テキスト、```other``` 以外の場合、指定不可
          example: Road work
      required:
        - i_con
        - type
        - name
    V2GetSitesDetailedPreference:
      type: object
      properties:
        working_start_time:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Working hours (start time)
            jpn: |-
              就業時間(開始時間)
          example: '09:30'
          pattern: ^(?:2[0-3]|[01][0-9]):[0-5][0-9]
          nullable: true
        working_end_time:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Working hours (end time)
            jpn: |-
              就業時間(終了時間)
          example: '18:30'
          pattern: ^(?:2[0-3]|[01][0-9]):[0-5][0-9]
          nullable: true
        agent_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site representative name
            jpn: |-
              現場代理人名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
          nullable: true
        earthmoving_start_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Earthworks start date
            jpn: |-
              土工開始日
          example: '2019-08-01'
          pattern: ^\d{4}-\d{2}-\d{2}
          format: ISO 8601 YYYY-MM-DD
          nullable: true
        earthmoving_end_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Earthworks end
            jpn: |-
              土工終了日
          example: '2019-09-30'
          pattern: ^\d{4}-\d{2}-\d{2}
          format: ISO 8601 YYYY-MM-DD
          nullable: true
        earthmoving_area:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Earthwork area
            jpn: |-
              土工面積
          example: '100'
          pattern: ^([1-9]\d*|0)(\.\d+)?$
          nullable: true
        construction_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction number
            jpn: |-
              施工番号
          example: '2019082900014412'
          nullable: true
        work_place_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Workplace name
            jpn: |-
              作業所名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          nullable: true
        tel:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number. 15 characters or less, half-width alphanumeric characters and some symbols (+-#*) only
            jpn: |-
              電話番号。15文字以下、半角英数字と一部記号(+-#*)のみ
          example: 03-3578-7757
          nullable: true
        fax:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Fax number
            jpn: |-
              FAX番号
          example: 03-3578-7758
          nullable: true
        contractor_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contractor name
            jpn: |-
              契約者名
          example: |

            :::x-example-i18n:
            eng: |-
              ZIRO EARTHBRAIN
            jpn: |-
              アースブレイン 二郎
          nullable: true
        permit_industries:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Permitted industries
            jpn: |-
              許可業種
          example: |

            :::x-example-i18n:
            eng: |-
              Civil engineering business
            jpn: |-
              土木工事業
          nullable: true
        permit_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Permission number
            jpn: |-
              許可番号
          example: |

            :::x-example-i18n:
            eng: |-
              No.00001
            jpn: |-
              第00001号
          nullable: true
        permit_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Permission (update) Year/month/day
            jpn: |-
              許可(更新)年月日
          example: '2019-04-01'
          pattern: ^\d{4}-\d{2}-\d{2}
          nullable: true
          format: ISO 8601 YYYY-MM-DD
        management:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Design/Supervisor
            jpn: |-
              設計・監理
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
          nullable: true
        manager_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Supervising engineer name
            jpn: |-
              監理技術者名
          example: |

            :::x-example-i18n:
            eng: |-
              SABURO EARTHBRAIN
            jpn: |-
              アースブレイン 三郎
          nullable: true
        chief_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Chief engineer name
            jpn: |-
              主任技術者名
          example: |

            :::x-example-i18n:
            eng: |-
              SHIRO EARTHBRAIN
            jpn: |-
              アースブレイン 四郎
          nullable: true
        construction_responsible_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction person in charge
            jpn: |-
              施工担当者名
          example: |

            :::x-example-i18n:
            eng: |-
              GORO EARTHBRAIN
            jpn: |-
              アースブレイン 五郎
          nullable: true
        construction_detail:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction contents
            jpn: |-
              施工内容
          example: |

            :::x-example-i18n:
            eng: |-
              River work
            jpn: |-
              河川土工
          nullable: true
        purpose:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Main purpose
            jpn: |-
              主要用途
          example: |

            :::x-example-i18n:
            eng: |-
              Disaster prevention station
            jpn: |-
              防災ステーション
          nullable: true
        orderer_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Orderer name
            jpn: |-
              発注者名
          example: |

            :::x-example-i18n:
            eng: |-
              ROKURO EARTHBRAIN
            jpn: |-
              アースブレイン 六郎
          nullable: true
        orderer_zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Orderer postal code
            jpn: |-
              発注者の郵便番号
          example: 105-0022
          nullable: true
        orderer_state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Orderer state
            jpn: |-
              発注者の都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          nullable: true
        orderer_city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Orderer city/town/village
            jpn: |-
              発注者の市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          nullable: true
        orderer_address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Orderer address 1
            jpn: |-
              発注者の町名・番地
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
        orderer_address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Orderer address 2
            jpn: |-
              発注者の建物名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          nullable: true
        responsible_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Responsible person name
            jpn: |-
              担当者名
          example: |

            :::x-example-i18n:
            eng: |-
              NANARO EARTHBRAIN
            jpn: |-
              アースブレイン 七郎
          nullable: true
        contract_money_initially:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contract price (initial)
            jpn: |-
              契約額（当初）
          example: '1000000'
          nullable: true
        contract_money_change:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contract price (revised)
            jpn: |-
              契約額（変更）
          example: '1000000'
          nullable: true
        document_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Specification number
            jpn: |-
              設計書番号
          example: 001-000001
          nullable: true
      required:
        - working_start_time
        - working_end_time
        - agent_name
        - earthmoving_start_date
        - earthmoving_end_date
        - earthmoving_area
        - construction_number
        - work_place_name
        - tel
        - fax
        - contractor_name
        - permit_industries
        - permit_number
        - permit_date
        - management
        - manager_name
        - chief_name
        - construction_responsible_name
        - construction_detail
        - purpose
        - orderer_name
        - orderer_zip_code
        - orderer_state
        - orderer_city
        - orderer_address_1
        - orderer_address_2
        - responsible_name
        - contract_money_initially
        - contract_money_change
        - document_number
    V2GetSitesSite:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          format: uuid
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site name
            jpn: |-
              現場名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome new construction
            jpn: |-
              汐留新築工事
        corporation:
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation
            jpn: |-
              企業
          allOf:
            - $ref: '#/components/schemas/V2GetSitesCorporation'
        author:
          description: |

            :::x-description-i18n:
            eng: |-
              Author
            jpn: |-
              作成者
          allOf:
            - $ref: '#/components/schemas/V2GetSitesAuthor'
        abbreviated_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site name (abbreviation)
            jpn: |-
              現場名略称
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome
            jpn: |-
              汐留工事
          nullable: true
        is_daylight_saving_time:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Determine whether the site is on summer time
            jpn: |-
              現場が夏時間かを判定する
          example: false
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所
          allOf:
            - $ref: '#/components/schemas/V2GetSitesAddress'
        coordinate:
          description: |

            :::x-description-i18n:
            eng: |-
              Coordinate
            jpn: |-
              座標
          allOf:
            - $ref: '#/components/schemas/V2GetSitesCoordinate'
        unit:
          description: |

            :::x-description-i18n:
            eng: |-
              Unit
            jpn: |-
              単位
          allOf:
            - $ref: '#/components/schemas/V2GetSitesUnit'
        work_period:
          description: |

            :::x-description-i18n:
            eng: |-
              Work period
            jpn: |-
              工期
          allOf:
            - $ref: '#/components/schemas/V2GetSitesWorkPeriod'
        work_type:
          description: |

            :::x-description-i18n:
            eng: |-
              Work type
            jpn: |-
              工種
          allOf:
            - $ref: '#/components/schemas/V2GetSitesWorkType'
        photo_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site image The URL where images can be downloaded
            jpn: |-
              現場画像、画像をダウンロード可能なURL
          format: uri
          nullable: true
        note:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Remarks
            jpn: |-
              備考
          example: |

            :::x-example-i18n:
            eng: |-
              note test,
            jpn: |-
              備考テスト
          nullable: true
        detailed_preference:
          description: |

            :::x-description-i18n:
            eng: |-
              Detailed preference
            jpn: |-
              詳細設定
          allOf:
            - $ref: '#/components/schemas/V2GetSitesDetailedPreference'
        archive:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Archived state, At the time of Create, false is entered by default
            jpn: |-
              アーカイブ状態、Create時はデフォルトで false が入る
          default: 'false'
        status:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Status. Changes depending on the current date
              * If it is before the actual construction period (start date), it is ```waiting```
              * If it is after the actual construction period (start date), it is ```working```
              * If it is after the actual construction period (end date), it is ```completed```
            jpn: |-
              ステータス。現在日によって変化
              * 実績工期(開始日)より前なら ```waiting```
              * 実績工期(開始日)を過ぎていたら ```working```
              * 実績工期(終了日)を過ぎていたら ```completed```
          enum:
            - waiting
            - working
            - completed
        transfer_active:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer execution status
              * ```true```: in progress
              * ```false```: not executed
            jpn: |-
              移管実行状態
              * ```true```: 実行中
              * ```false```: 未実行
          default: false
        link_group_active:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Linking status of group
              * ```true```:link
              * ```false```:unlink
            jpn: |-
              グループ連携状態
              * ```true```：連携中　
              * ```false```：未連携
          default: false
        link_group_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group link status
              * ```true```: linked
              * ```false```: not linked
            jpn: |-
              グループ連携状態
              * ```true```: 連携中
              * ```false```: 未連携
          format: uuid
          nullable: true
      required:
        - id
        - name
        - corporation
        - author
        - abbreviated_name
        - is_daylight_saving_time
        - address
        - coordinate
        - unit
        - work_period
        - work_type
        - photo_url
        - note
        - detailed_preference
        - archive
        - status
        - transfer_active
        - link_group_active
        - link_group_id
    V2GetSites:
      type: object
      properties:
        total:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of items matched
            jpn: |-
              該当するデータの全件数
          example: 1
        sites:
          description: |

            :::x-description-i18n:
            eng: |-
              List site
            jpn: |-
              リスト現場
          type: array
          items:
            $ref: '#/components/schemas/V2GetSitesSite'
      required:
        - total
        - sites
    V2GetSitesNearbyCorporation:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          format: uuid
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Company name
            jpn: |-
              企業名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
      required:
        - id
        - name
    V2GetSitesNearbySiteAddress:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード
          format: ISO 3166-1 alpha-2
          example: JP
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号
          nullable: true
          example: 105-0022
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              町名・番地
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Building name
            jpn: |-
              建物名
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2GetSitesNearbySite:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          format: uuid
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site name
            jpn: |-
              現場名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome new construction
            jpn: |-
              汐留新築工事
        corporation:
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation
            jpn: |-
              企業
          allOf:
            - $ref: '#/components/schemas/V2GetSitesNearbyCorporation'
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所
          allOf:
            - $ref: '#/components/schemas/V2GetSitesNearbySiteAddress'
      required:
        - id
        - name
        - corporation
        - address
    V2GetSitesNearby:
      type: object
      properties:
        total:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              Total of applicable data
            jpn: |-
              該当するデータの全件数
          example: 1
        sites:
          type: array
          items:
            $ref: '#/components/schemas/V2GetSitesNearbySite'
      required:
        - total
        - sites
    V2GetSitesSiteIdCorporation:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          format: uuid
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation name
            jpn: |-
              企業名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
      required:
        - id
        - name
    V2GetSitesSiteIdAuthor:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Creator ID
            jpn: |-
              作成者ID
          format: uuid
          nullable: true
        name:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Creator name
            jpn: |-
              作成者名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
      required:
        - id
        - name
    V2GetSitesSiteIdAddress:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード
          example: JP
          format: ISO 3166-1 alpha-2
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号
          example: 105-0022
          nullable: true
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              町名・番地
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Building name
            jpn: |-
              建物名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2GetSitesSiteIdCoordinate:
      type: object
      properties:
        latitude:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Latitude
            jpn: |-
              緯度
          example: '35.66689081094339'
        longitude:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Longtitude
            jpn: |-
              経度
          example: '139.76969528307006'
        time_zone:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Time zone
            jpn: |-
              タイムゾーン
          example: Asia/Tokyo
          nullable: true
      required:
        - latitude
        - longitude
        - time_zone
    V2GetSitesSiteIdUnit:
      type: object
      properties:
        distance:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (distance)
            jpn: |-
              単位(距離)
          default: m
        area:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (area)
            jpn: |-
              単位(面積)
          default: m2
        volume:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (volume)
            jpn: |-
              単位(体積)
          default: m3
        currency:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (currency)
            jpn: |-
              単位(通貨)
          default: JPY
        weight:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (weight)
            jpn: |-
              単位(重量)
          default: kg
      required:
        - distance
        - area
        - volume
        - currency
        - weight
    V2GetSitesSiteIdWorkPeriod:
      type: object
      properties:
        planned_start_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Planned construction period (start date)
            jpn: |-
              予定工期(開始日)
          pattern: ^\d{4}-\d{2}-\d{2}
          format: ISO 8601 standard, YYYY-MM-DD
        planned_end_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Planned construction period (end date)
            jpn: |-
              予定工期(終了日)
          pattern: ^\d{4}-\d{2}-\d{2}
          format: ISO 8601 standard, YYYY-MM-DD
        start_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Actual construction period (start date)
            jpn: |-
              実績工期(開始日)
          pattern: ^\d{4}-\d{2}-\d{2}
          nullable: true
          format: ISO 8601 standard, YYYY-MM-DD
        end_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Actual construction period (end date)
            jpn: |-
              実績工期(終了日)
          pattern: ^\d{4}-\d{2}-\d{2}
          nullable: true
          format: ISO 8601 standard, YYYY-MM-DD
      required:
        - planned_start_date
        - planned_end_date
        - start_date
        - end_date
    V2GetSitesSiteIdWorkType:
      type: object
      properties:
        i_con:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Compatible with i-Con, ```supported```, ```unsupported```, ```other```
            jpn: |-
              工種i-Con対応, ```supported```, ```unsupported```, ```other``` のいずれか
          enum:
            - supported
            - unsupported
            - other
          default: other
          nullable: true
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction type
              * i_con: ```other```: Other
              * i_con: ```supported```
                * ```Road work```
                * ```River work```
                * ```Shore work```
                * ```Erosion control```
                * ```Pavement work```
              * i-con: ```unsupported```
                * e.g: ```1.Land preparation work```
            jpn: |-
              工種タイプ
              * i_con: ```other```: その他
              * i_con: ```supported```
                * ```道路土工```
                * ```河川土工```
                * ```海岸土工```
                * ```砂防土工```
                * ```舗装工```
              * i-con: ```unsupported```
                * e.g: ```1.土地造成工事 ```
          enum:
            - 道路土工
            - 河川土工
            - 海岸土工
            - 砂防土工
            - 舗装工
            - Road work
            - River work
            - Shore work
            - Erosion control
            - Pavement work
          nullable: true
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction type text, cannot be specified if other than ```other```
            jpn: |-
              工種テキスト、```other``` 以外の場合、指定不可
      required:
        - i_con
        - type
        - name
    V2GetSitesSiteIdDetailedPreference:
      type: object
      properties:
        working_start_time:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Working hours (start time)
            jpn: |-
              就業時間(開始時間)
          example: '09:30'
          pattern: ^(?:2[0-3]|[01][0-9]):[0-5][0-9]
          nullable: true
          format: ISO 8601 standard, hh:mm
        working_end_time:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Working hours (end time)
            jpn: |-
              就業時間(終了時間)
          example: '18:30'
          pattern: ^(?:2[0-3]|[01][0-9]):[0-5][0-9]
          nullable: true
          format: ISO 8601 standard, hh:mm
        agent_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site representative name
            jpn: |-
              現場代理人名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
          nullable: true
        earthmoving_start_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Earthworks start date
            jpn: |-
              土工開始日
          example: '2019-08-01'
          pattern: ^\d{4}-\d{2}-\d{2}
          nullable: true
          format: ISO 8601 standard, hh:mm
        earthmoving_end_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Earthworks end date
            jpn: |-
              土工終了日
          example: '2019-09-30'
          pattern: ^\d{4}-\d{2}-\d{2}
          nullable: true
          format: ISO 8601 standard, hh:mm
        earthmoving_area:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Earthwork area
            jpn: |-
              土工面積
          example: '100'
          pattern: ^([1-9]\d*|0)(\.\d+)?$
          nullable: true
        construction_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction number
            jpn: |-
              施工番号
          example: '2019082900014412'
          nullable: true
        work_place_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Workplace name
            jpn: |-
              作業所名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
          nullable: true
        tel:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number
            jpn: |-
              電話番号
          example: 03-3578-7757
          nullable: true
        fax:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Fax number
            jpn: |-
              FAX番号
          example: 03-3578-7758
          nullable: true
        contractor_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contractor name
            jpn: |-
              契約者名
          example: |

            :::x-example-i18n:
            eng: |-
              ZIRO EARTHBRAIN
            jpn: |-
              アースブレイン 二郎
          nullable: true
        permit_industries:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Permitted industries
            jpn: |-
              許可業種
          example: |

            :::x-example-i18n:
            eng: |-
              Civil engineering business
            jpn: |-
              土木工事業
          nullable: true
        permit_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Permission number
            jpn: |-
              許可番号
          example: |

            :::x-example-i18n:
            eng: |-
              No.00001
            jpn: |-
              第00001号
          nullable: true
        permit_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Permission (update) date
            jpn: |-
              許可(更新)年月日
          example: '2019-04-01'
          pattern: ^\d{4}-\d{2}-\d{2}
          nullable: true
          format: ISO 8601 standard, YYYY-MM-DD
        management:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Design/Supervisor
            jpn: |-
              設計・監理
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
          nullable: true
        manager_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Supervising engineer name
            jpn: |-
              監理技術者名
          example: |

            :::x-example-i18n:
            eng: |-
              SABURO EARTHBRAIN
            jpn: |-
              アースブレイン 三郎
          nullable: true
        chief_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Chief engineer name
            jpn: |-
              主任技術者名
          example: |

            :::x-example-i18n:
            eng: |-
              SHIRO EARTHBRAIN
            jpn: |-
              アースブレイン 四郎
          nullable: true
        construction_responsible_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction person in charge
            jpn: |-
              施工担当者名
          example: |

            :::x-example-i18n:
            eng: |-
              GORO EARTHBRAIN
            jpn: |-
              アースブレイン 五郎
          nullable: true
        construction_detail:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction contents
            jpn: |-
              施工内容
          example: |

            :::x-example-i18n:
            eng: |-
              River work
            jpn: |-
              河川土工
          nullable: true
        purpose:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Main purpose
            jpn: |-
              主要用途
          example: |

            :::x-example-i18n:
            eng: |-
              Disaster prevention station
            jpn: |-
              防災ステーション
          nullable: true
        orderer_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client's name
            jpn: |-
              発注者名
          example: |

            :::x-example-i18n:
            eng: |-
              ROKURO EARTHBRAIN
            jpn: |-
              アースブレイン 六郎
          nullable: true
        orderer_zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client's postal code
            jpn: |-
              発注者の郵便番号
          example: 105-0022
          nullable: true
        orderer_state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client's state
            jpn: |-
              注者の都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          nullable: true
        orderer_city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client's city/town/village
            jpn: |-
              発注者の市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          nullable: true
        orderer_address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client's address 1
            jpn: |-
              発注者の町名・番地
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
        orderer_address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client's address 2
            jpn: |-
              発注者の建物名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
          nullable: true
        responsible_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name of person in charge
            jpn: |-
              担当者名
          example: |

            :::x-example-i18n:
            eng: |-
              NANARO EARTHBRAIN
            jpn: |-
              アースブレイン 七郎
          nullable: true
        contract_money_initially:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contract price (initial)
            jpn: |-
              契約額（当初)
          example: '1000000'
          nullable: true
        contract_money_change:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contract price (revised)
            jpn: |-
              契約額（変更)
          example: '1000000'
          nullable: true
        document_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Specification number
            jpn: |-
              設計書番号
          example: 001-000001
          nullable: true
      required:
        - working_start_time
        - working_end_time
        - agent_name
        - earthmoving_start_date
        - earthmoving_end_date
        - earthmoving_area
        - construction_number
        - work_place_name
        - tel
        - fax
        - contractor_name
        - permit_industries
        - permit_number
        - permit_date
        - management
        - manager_name
        - chief_name
        - construction_responsible_name
        - construction_detail
        - purpose
        - orderer_name
        - orderer_zip_code
        - orderer_state
        - orderer_city
        - orderer_address_1
        - orderer_address_2
        - responsible_name
        - contract_money_initially
        - contract_money_change
        - document_number
    V2GetSitesSiteId:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          format: uuid
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site name
            jpn: |-
              現場名
          format: uuid
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome new construction
            jpn: |-
              汐留新築工事
        corporation:
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation information
            jpn: |-
              企業情報
          allOf:
            - $ref: '#/components/schemas/V2GetSitesSiteIdCorporation'
        author:
          description: |

            :::x-description-i18n:
            eng: |-
              Creator information
            jpn: |-
              作成者情報
          allOf:
            - $ref: '#/components/schemas/V2GetSitesSiteIdAuthor'
        abbreviated_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site name (abbreviation)
            jpn: |-
              現場名略称
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome
            jpn: |-
              汐留工事
        is_daylight_saving_time:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Determine whether the site is on summer time
            jpn: |-
              現場が夏時間かを判定する
          example: false
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所
          allOf:
            - $ref: '#/components/schemas/V2GetSitesSiteIdAddress'
        coordinate:
          description: |

            :::x-description-i18n:
            eng: |-
              Coordinate
            jpn: |-
              座標
          allOf:
            - $ref: '#/components/schemas/V2GetSitesSiteIdCoordinate'
        unit:
          description: |

            :::x-description-i18n:
            eng: |-
              Unit
            jpn: |-
              単位
          allOf:
            - $ref: '#/components/schemas/V2GetSitesSiteIdUnit'
        work_period:
          description: |

            :::x-description-i18n:
            eng: |-
              Work period
            jpn: |-
              作業期間
          example:
            planned_start_date: '2019-08-01'
            planned_end_date: '2020-07-30'
            start_date: '2019-08-01'
            end_date: '2020-07-30'
          allOf:
            - $ref: '#/components/schemas/V2GetSitesSiteIdWorkPeriod'
        work_type:
          description: |

            :::x-description-i18n:
            eng: |-
              Work type
            jpn: |-
              作業の種類
          example:
            i_con: supported
            type: 道路土工
            name: null
          allOf:
            - $ref: '#/components/schemas/V2GetSitesSiteIdWorkType'
        photo_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site image,The URL where images can be downloaded
            jpn: |-
              現場画像、画像をダウンロード可能なURL
          format: uri
          nullable: true
          example: https://img.landlog.info/site_photo/default.png
        note:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Remarks
            jpn: |-
              備考
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Notes.
            jpn: |-
              備考。
        detailed_preference:
          description: |

            :::x-description-i18n:
            eng: |-
              Detailed preference
            jpn: |-
              詳しい好み
          allOf:
            - $ref: '#/components/schemas/V2GetSitesSiteIdDetailedPreference'
        archive:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Archived state, at the time of Create, ```false``` is entered by default
            jpn: |-
              アーカイブ状態、Create時はデフォルトで ```false``` が入る
          default: 'false'
          example: false
        status:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              status,
              Status changes depending on the current date
              * ```Waiting```: if it is before the start date of the actual construction period
              * ```Working```: if it is after the start date of the actual construction period
              * ```Completed```: if the end date of the actual Construction period has passed
            jpn: |-
              ステータス、現在日によって変化
              * ```waiting```: 実績工期(開始日)より前なら
              * ```working```: 実績工期(開始日)を過ぎていたら
              * ```completed```: 実績工期(終了日)を過ぎていたら
          enum:
            - waiting
            - working
            - completed
          example: working
        transfer_active:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Running status of transfer, ```true```: Running ```false```: Stopped
            jpn: |-
              移管実行状態、```true```：実行中 ```false```：未実
          default: false
          example: true
        link_group_active:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Group collaboration status, ```true```: Collaborating ```false```: Not collaborating
            jpn: |-
              グループ連携状態、```true```：連携中 ```false```：未連携
          default: false
          example: true
        link_group_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Cooperation group ID
            jpn: |-
              連携先グループID
          format: uuid
          nullable: true
          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
      required:
        - id
        - name
        - corporation
        - author
        - abbreviated_name
        - is_daylight_saving_time
        - address
        - coordinate
        - unit
        - work_period
        - work_type
        - photo_url
        - note
        - detailed_preference
        - archive
        - status
        - transfer_active
        - link_group_active
        - link_group_id
    V2PostSitesCorporationDTO:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              所属する企業ID
          format: uuid
      required:
        - id
    V2PostSitesAddressDTO:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード
          example: JP
          format: ISO 3166-1 alpha-2
          minLength: 2
          maxLength: 2
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号
          example: 105-0022
          maxLength: 255
          nullable: true
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          maxLength: 255
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          maxLength: 255
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              町名・番地
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          maxLength: 255
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Building name
            jpn: |-
              建物名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          maxLength: 255
          nullable: true
      required:
        - country
        - state
        - city
    V2PostSitesCoordinateDTO:
      type: object
      properties:
        latitude:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Latitude
            jpn: |-
              緯度
          example: '35.66689081094339'
          maxLength: 20
        longitude:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Longitude
            jpn: |-
              経度
          example: '139.76969528307006'
          maxLength: 20
      required:
        - latitude
        - longitude
    V2PostSitesUnitDTO:
      type: object
      properties:
        distance:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (distance)
              * ```m```: meter
              * ```ft```: feet
              * ```ftUS```: feet (US)
            jpn: |-
              単位(距離)
              * ```m```: メートル
              * ```ft```: フィート
              * ```ftUS```: フィート(米国)
          enum:
            - m
            - ft
            - ftUS
        area:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (area)
              * ```m2```: square meter
              * ```ft2```: square feet
              * ```ac```: acre
              * ```ha```: hectare
            jpn: |-
              単位(面積)
              * ```m2```: 平方メートル
              * ```ft2```: 平方フィート
              * ```ac```: エーカー
              * ```ha```: ヘクタール
          enum:
            - m2
            - ft2
            - ac
            - ha
        volume:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (volume)
              * ```m3```: cubic meter
              * ```yd3```: cubic yard
            jpn: |-
              単位(体積)
              * ```m3```: 立方メートル
              * ```yd3```: 立方ヤード
          enum:
            - m3
            - yd3
        currency:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (currency)
              * ```CAD```: Canadian dollar
              * ```NZD```: New Zealand dollar
              * ```SGD```: Singapore dollar
              * ```AUD```: Australian dollar
              * ```GBP```: British pound
              * ```EUR```: Euro
              * ```JPY```: Japanese yen
              * ```USD```: United States dollar
            jpn: |-
              単位(通貨)
              * ```CAD```: カナダドル
              * ```NZD```: ニュージーランドドル
              * ```SGD```: シンガポールドル
              * ```AUD```: オーストラリアドル
              * ```GBP```: 英国ポンド
              * ```EUR```: ユーロ
              * ```JPY```: 日本円
              * ```USD```: 米国ドル
          enum:
            - CAD
            - NZD
            - SGD
            - AUD
            - GBP
            - EUR
            - JPY
            - USD
        weight:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (weight)
              * ```kg```: kilogram
              * ```lb```: pound
            jpn: |-
              単位(重量)
              * ```kg```: キログラム
              * ```lb```: ポンド
          enum:
            - kg
            - lb
      required:
        - distance
        - area
        - volume
        - currency
    V2PostSitesWorkPeriodDTO:
      type: object
      properties:
        planned_start_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Planned construction period (start date)
            jpn: |-
              予定工期(開始日)
          example: '2019-08-01'
          format: ISO 8601 YYYY-MM-DD
          pattern: ^d{4}-d{2}-d{2}
        planned_end_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Planned construction period (end date)
            jpn: |-
              予定工期(終了日)
          example: '2020-07-30'
          format: ISO 8601 YYYY-MM-DD
          pattern: ^d{4}-d{2}-d{2}
      required:
        - planned_start_date
        - planned_end_date
    V2PostSitesWorkTypeDTO:
      type: object
      properties:
        i_con:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Compatible with i-Con
            jpn: |-
              工種i-Con対応。 現場の国が日本の場合必須
          enum:
            - supported
            - unsupported
            - other
          nullable: true
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction type

              `work_type.type` is in Japanese regardless of the language it is used in.
              * i_con: ```other```: Other
              * i_con: ```supported```
                * ```道路土工```: Road work
                * ```河川土工```: River work
                * ```海岸土工```: Shore work
                * ```砂防土工```: Erosion control
                * ```舗装工```: Pavement work
              * i-con: ```unsupported```
                * e.g: ```1.Land preparation work```
            jpn: |-
              工種タイプ
              * i_con: ```other```: その他
              * i_con: ```supported```
                * ```道路土工```
                * ```河川土工```
                * ```海岸土工```
                * ```砂防土工```
                * ```舗装工```
              * i-con: ```unsupported```
                * e.g: ```1.土地造成工事 ```
          nullable: true
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction type text. Cannot be specified if other than ```other```
            jpn: |-
              工種テキスト。```other``` 以外の場合、指定不可
          example: null
          maxLength: 255
          nullable: true
    V2PostSitesDetailedPreferenceDTO:
      type: object
      properties:
        working_start_time:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Working hours (start time)
            jpn: |-
              就業時間(開始時間)
          example: '09:30'
          format: ISO 8601 YYYY-MM-DD
          pattern: ^([01]d|2[0-3]):?(00|15|30|45)$
          nullable: true
        working_end_time:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Working hours (end time)
            jpn: |-
              就業時間(終了時間)
          example: '18:30'
          format: ISO 8601 YYYY-MM-DD
          pattern: ^([01]d|2[0-3]):?(00|15|30|45)$
          nullable: true
        agent_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site representative name
            jpn: |-
              現場代理人名
          example: |

            :::x-example-i18n:
            eng: |-
              ICHIRO EARTHBRAIN
            jpn: |-
              アースブレイン 一郎
          maxLength: 255
          nullable: true
        earthmoving_start_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Earthworks start date
            jpn: |-
              土工開始日
          example: '2019-08-01'
          format: ISO 8601 YYYY-MM-DD
          pattern: ^d{4}-d{2}-d{2}
          nullable: true
        earthmoving_end_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Earthworks end date
            jpn: |-
              土工終了日
          example: '2019-09-30'
          format: ISO 8601 YYYY-MM-DD
          pattern: ^d{4}-d{2}-d{2}
          nullable: true
        earthmoving_area:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Earthwork area
            jpn: |-
              土工面積
          example: '100'
          pattern: ^([1-9][0-9]{0,11})?(.[0-9]{1,3})?$
          nullable: true
        construction_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction number
            jpn: |-
              施工番号
          example: '2019082900014412'
          maxLength: 255
          nullable: true
        work_place_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Workplace name
            jpn: |-
              作業所名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
          maxLength: 255
          nullable: true
        tel:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number. 15 characters or less, half-width alphanumeric characters and some symbols (+-#*) only
            jpn: |-
              電話番号。15文字以下、半角英数字と一部記号(+-#*)のみ
          example: 03-3578-7757
          maxLength: 15
          pattern: ^([0-9a-zA-Z-+*#]{0,15})$
          nullable: true
        fax:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Fax number
            jpn: |-
              FAX番号
          example: 03-3578-7758
          maxLength: 255
          nullable: true
        contractor_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contractor name
            jpn: |-
              契約者名
          example: |

            :::x-example-i18n:
            eng: |-
              ZIRO EARTHBRAIN
            jpn: |-
              アースブレイン 二郎
          maxLength: 255
          nullable: true
        permit_industries:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Permitted industries
            jpn: |-
              許可業種
          example: |

            :::x-example-i18n:
            eng: |-
              Civil engineering business
            jpn: |-
              土木工事業
          maxLength: 255
          nullable: true
        permit_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Permission number
            jpn: |-
              許可番号
          example: |

            :::x-example-i18n:
            eng: |-
              No.00001
            jpn: |-
              第00001号
          maxLength: 255
          nullable: true
        permit_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Permission (update) date
            jpn: |-
              許可(更新)年月日
          example: '2019-04-01'
          format: ISO 8601 YYYY-MM-DD
          pattern: ^d{4}-d{2}-d{2}
          nullable: true
        management:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Design/Supervisor
            jpn: |-
              設計・監理
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
          maxLength: 255
          nullable: true
        manager_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Supervising engineer name
            jpn: |-
              監理技術者名
          example: |

            :::x-example-i18n:
            eng: |-
              SABURO EARTHBRAIN
            jpn: |-
              アースブレイン 三郎
          maxLength: 255
          nullable: true
        chief_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Chief engineer name
            jpn: |-
              主任技術者
          example: |

            :::x-example-i18n:
            eng: |-
              SHIRO EARTHBRAIN
            jpn: |-
              アースブレイン 四郎
          maxLength: 255
          nullable: true
        construction_responsible_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction person in charge
            jpn: |-
              施工担当者
          example: |

            :::x-example-i18n:
            eng: |-
              GORO EARTHBRAIN
            jpn: |-
              アースブレイン 五郎
          maxLength: 255
          nullable: true
        construction_detail:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction contents
            jpn: |-
              設計・監理
          example: |

            :::x-example-i18n:
            eng: |-
              River work
            jpn: |-
              河川土工
          maxLength: 255
          nullable: true
        purpose:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Main purpose
            jpn: |-
              主要目的
          example: |

            :::x-example-i18n:
            eng: |-
              Disaster prevention station
            jpn: |-
              防災ステーション
          maxLength: 255
          nullable: true
        orderer_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Orderer name
            jpn: |-
              発注者名
          example: |

            :::x-example-i18n:
            eng: |-
              ROKURO EARTHBRAIN
            jpn: |-
              アースブレイン 六郎
          maxLength: 255
          nullable: true
        orderer_zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Orderer postal code
            jpn: |-
              発注者の郵便番号
          example: 105-0022
          maxLength: 255
          nullable: true
        orderer_state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Orderer state
            jpn: |-
              発注者の都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          maxLength: 255
          nullable: true
        orderer_city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Orderer city/town/village
            jpn: |-
              発注者の市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          maxLength: 255
          nullable: true
        orderer_address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Orderer address 1
            jpn: |-
              発注者の町名・番地
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          maxLength: 255
          nullable: true
        orderer_address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Orderer address 2
            jpn: |-
              発注者の建物名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          maxLength: 255
          nullable: true
        responsible_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name of person in charge
            jpn: |-
              担当者名
          example: |

            :::x-example-i18n:
            eng: |-
              NANARO EARTHBRAIN
            jpn: |-
              アースブレイン 七郎
          maxLength: 255
          nullable: true
        contract_money_initially:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contract price (initial)
            jpn: |-
              契約額（当初）
          example: '1000000'
          maxLength: 13
          nullable: true
        contract_money_change:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contract price (revised)
            jpn: |-
              契約額（変更）
          example: '1000000'
          maxLength: 13
          nullable: true
        document_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Specification number
            jpn: |-
              設計書番号
          example: 001-000001
          maxLength: 255
          nullable: true
    V2PostSitesBodyDto:
      type: object
      properties:
        corporation:
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation
            jpn: |-
              企業
          allOf:
            - $ref: '#/components/schemas/V2PostSitesCorporationDTO'
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site name
            jpn: |-
              現場名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome new construction
            jpn: |-
              汐留新築工事
          maxLength: 255
        is_daylight_saving_time:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Determine whether the site is on summer time
            jpn: |-
              現場が夏時間かを判定する
          example: 'false'
        abbreviated_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Abbreviated site name
            jpn: |-
              現場名略称
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome
            jpn: |-
              汐留工事
          maxLength: 255
          nullable: true
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所
          allOf:
            - $ref: '#/components/schemas/V2PostSitesAddressDTO'
        coordinate:
          description: |

            :::x-description-i18n:
            eng: |-
              Coordinate
            jpn: |-
              座標
          allOf:
            - $ref: '#/components/schemas/V2PostSitesCoordinateDTO'
        unit:
          description: |

            :::x-description-i18n:
            eng: |-
              Unit
            jpn: |-
              単位
          allOf:
            - $ref: '#/components/schemas/V2PostSitesUnitDTO'
        work_period:
          description: |

            :::x-description-i18n:
            eng: |-
              Work period
            jpn: |-
              工期
          allOf:
            - $ref: '#/components/schemas/V2PostSitesWorkPeriodDTO'
        work_type:
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Work type. Required if the country of the site is Japan
            jpn: |-
              工種タイプ。現場の国が日本の場合必須
          allOf:
            - $ref: '#/components/schemas/V2PostSitesWorkTypeDTO'
        photo:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site image. The URL where images can be downloaded
            jpn: |-
              現場画像。画像をダウンロード可能なURL
          example: MTIzNDU2Nzg5MA==
          nullable: true
        note:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Remarks
            jpn: |-
              備考。
          example: |

            :::x-example-i18n:
            eng: |-
              note test,
            jpn: |-
              備考テスト
          maxLength: 65535
          nullable: true
        detailed_preference:
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Detailed preference
            jpn: |-
              詳細設定
          allOf:
            - $ref: '#/components/schemas/V2PostSitesDetailedPreferenceDTO'
        link_group_active:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Group cooperation status. When creating, ```false``` is entered by default
              * ```true``` : Work together
              * ```false``` : Not working together
            jpn: |-
              グループ連携状態。Create時はデフォルトで```false```が入る
              * ```true``` : 連携する
              * ```false``` : 連携しない
          default: false
          nullable: true
      required:
        - corporation
        - name
        - address
        - coordinate
        - unit
        - work_period
    V2PostSitesCorporation:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業ID
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation name
            jpn: |-
              企業名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
      required:
        - id
        - name
    V2PostSitesAuthor:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Author ID
            jpn: |-
              作成者ID
          format: uuid
        name:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Author name
            jpn: |-
              作成者名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
      required:
        - id
        - name
    V2PostSitesAddress:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード
          example: JP
          format: ISO 3166-1 alpha-2
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号
          example: 105-0022
          nullable: true
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              町名・番地
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Building name
            jpn: |-
              建物名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2PostSitesCoordinate:
      type: object
      properties:
        latitude:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Latitude.
            jpn: |-
              緯度。
          example: '35.66689081094339'
        longitude:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Longitude.
            jpn: |-
              経度。
          example: '139.76969528307006'
        time_zone:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Time zone.
            jpn: |-
              タイムゾーン。
          example: Asia/Tokyo
          nullable: true
      required:
        - latitude
        - longitude
        - time_zone
    V2PostSitesUnit:
      type: object
      properties:
        distance:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (distance)
            jpn: |-
              単位(距離)
          example: m
        area:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (area)
            jpn: |-
              単位(面積)
          example: m2
        volume:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (volume)
            jpn: |-
              単位(体積)
          example: m3
        currency:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (currency)
            jpn: |-
              単位(通貨)
          example: JPY
        weight:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (weight)
            jpn: |-
              単位(重量)
          example: kg
      required:
        - distance
        - area
        - volume
        - currency
        - weight
    V2PostSitesWorkPeriod:
      type: object
      properties:
        planned_start_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Planned construction period (start date)
            jpn: |-
              予定工期(開始日)
          example: '2020-01-01'
          pattern: ^\d{4}-\d{2}-\d{2}
          format: ISO 8601 YYYY-MM-DD
        planned_end_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Planned construction period (end date)
            jpn: |-
              予定工期(終了日)
          example: '2020-01-01'
          pattern: ^\d{4}-\d{2}-\d{2}
          format: ISO 8601 YYYY-MM-DD
        start_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Actual construction period (start date)
            jpn: |-
              実績工期(開始日)
          example: '2020-01-01'
          pattern: ^\d{4}-\d{2}-\d{2}
          format: ISO 8601 YYYY-MM-DD
        end_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Actual construction period (end date)
            jpn: |-
              実績工期(終了日)
          example: '2020-01-01'
          pattern: ^\d{4}-\d{2}-\d{2}
          format: ISO 8601 YYYY-MM-DD
      required:
        - planned_start_date
        - planned_end_date
        - start_date
        - end_date
    V2PostSitesWorkType:
      type: object
      properties:
        i_con:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Compatible with i-Con
            jpn: |-
              工種i-Con対応。 現場の国が日本の場合必須
          enum:
            - supported
            - unsupported
            - other
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction type
              * i_con: ```other```: Other
              * i_con: ```supported```
                * ```Road work```
                * ```River work```
                * ```Shore work```
                * ```Erosion control```
                * ```Pavement work```
              * i-con: ```unsupported```
                * e.g: ```1.Land preparation work```
            jpn: |-
              工種タイプ
              * i_con: ```other```: その他
              * i_con: ```supported```
                * ```道路土工```
                * ```河川土工```
                * ```海岸土工```
                * ```砂防土工```
                * ```舗装工```
              * i-con: ```unsupported```
                * e.g: ```1.土地造成工事 ```
          example: 道路土工
          nullable: true
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction type text. Cannot be specified if other than ```other```
            jpn: |-
              工種テキスト。```other``` 以外の場合、指定不可
          example: null
          nullable: true
      required:
        - i_con
        - type
        - name
    V2PostSitesDetailedPreference:
      type: object
      properties:
        working_start_time:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Working hours (start time)
            jpn: |-
              就業時間(開始時間)。
          example: '09:30'
          pattern: ^(?:2[0-3]|[01][0-9]):[0-5][0-9]
          nullable: true
        working_end_time:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Working hours (end time)
            jpn: |-
              就業時間(終了時間)。
          example: '18:30'
          pattern: ^(?:2[0-3]|[01][0-9]):[0-5][0-9]
          nullable: true
        agent_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site representative name
            jpn: |-
              現場代理人名。
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
          nullable: true
        earthmoving_start_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Earthworks start date
            jpn: |-
              土工開始日。
          example: '2019-08-01'
          pattern: ^\d{4}-\d{2}-\d{2}
          format: ISO 8601 YYYY-MM-DD
          nullable: true
        earthmoving_end_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Earthworks end date
            jpn: |-
              土工終了日。
          example: '2019-09-30'
          pattern: ^\d{4}-\d{2}-\d{2}
          format: ISO 8601 YYYY-MM-DD
          nullable: true
        earthmoving_area:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Earthwork area
            jpn: |-
              土工面積。
          example: '100'
          pattern: ^([1-9]\d*|0)(\.\d+)?$
          nullable: true
        construction_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction number
            jpn: |-
              施工番号。
          example: '2019082900014412'
          nullable: true
        work_place_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Workplace name
            jpn: |-
              作業所名。
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
          nullable: true
        tel:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number. 15 characters or less, half-width alphanumeric characters and some symbols (+-#*) only
            jpn: |-
              電話番号。15文字以下、半角英数字と一部記号(+-#*)のみ
          example: 03-3578-7757
          nullable: true
        fax:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Fax number
            jpn: |-
              FAX番号。
          example: 03-3578-7758
          nullable: true
        contractor_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contractor name
            jpn: |-
              契約者名。
          example: |

            :::x-example-i18n:
            eng: |-
              ZIRO EARTHBRAIN
            jpn: |-
              アースブレイン 二郎
          nullable: true
        permit_industries:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Permitted industries
            jpn: |-
              許可業種。
          example: |

            :::x-example-i18n:
            eng: |-
              Civil engineering business
            jpn: |-
              土木工事業
          nullable: true
        permit_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Permission number
            jpn: |-
              許可番号
          example: |

            :::x-example-i18n:
            eng: |-
              No.00001
            jpn: |-
              第00001号
          nullable: true
        permit_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Permission (update) date
            jpn: |-
              許可(更新)年月日
          example: '2019-04-01'
          pattern: ^\d{4}-\d{2}-\d{2}
          format: ISO 8601 YYYY-MM-DD
          nullable: true
        management:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Design/Supervisor
            jpn: |-
              設計・監理
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
          nullable: true
        manager_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Manager name
            jpn: |-
              監理技術者名
          example: |

            :::x-example-i18n:
            eng: |-
              SABURO EARTHBRAIN
            jpn: |-
              アースブレイン 三郎
          nullable: true
        chief_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Chief engineer name
            jpn: |-
              主任技術者
          example: |

            :::x-example-i18n:
            eng: |-
              SHIRO EARTHBRAIN
            jpn: |-
              アースブレイン 四郎
          nullable: true
        construction_responsible_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction responsible person
            jpn: |-
              施工担当者
          example: |

            :::x-example-i18n:
            eng: |-
              GORO EARTHBRAIN
            jpn: |-
              アースブレイン 五郎
          nullable: true
        construction_detail:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction content
            jpn: |-
              施工内容
          example: |

            :::x-example-i18n:
            eng: |-
              River work
            jpn: |-
              河川土工
          nullable: true
        purpose:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Main purpose
            jpn: |-
              主要用途
          example: |

            :::x-example-i18n:
            eng: |-
              Disaster prevention station
            jpn: |-
              防災ステーション
          nullable: true
        orderer_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Orderer name
            jpn: |-
              発注者名
          example: |

            :::x-example-i18n:
            eng: |-
              ROKURO EARTHBRAIN
            jpn: |-
              アースブレイン 六郎
          nullable: true
        orderer_zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Orderer zip code
            jpn: |-
              発注者の郵便番号
          example: 105-0022
          nullable: true
        orderer_state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Orderer state
            jpn: |-
              発注者の都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          nullable: true
        orderer_city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Orderer city
            jpn: |-
              発注者の市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          nullable: true
        orderer_address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Orderer address
            jpn: |-
              発注者の町名・番地
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
        orderer_address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Orderer building name
            jpn: |-
              発注者の建物名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
          nullable: true
        responsible_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Responsible person name
            jpn: |-
              担当者名
          example: |

            :::x-example-i18n:
            eng: |-
              NANARO EARTHBRAIN
            jpn: |-
              アースブレイン 七郎
          nullable: true
        contract_money_initially:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contract price (initial)
            jpn: |-
              契約額（当初）
          example: '1000000'
          nullable: true
        contract_money_change:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contract price (revised)
            jpn: |-
              契約額（変更）
          example: '1000000'
          nullable: true
        document_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Document number
            jpn: |-
              設計書番号
          example: 001-000001
          nullable: true
      required:
        - working_start_time
        - working_end_time
        - agent_name
        - earthmoving_start_date
        - earthmoving_end_date
        - earthmoving_area
        - construction_number
        - work_place_name
        - tel
        - fax
        - contractor_name
        - permit_industries
        - permit_number
        - permit_date
        - management
        - manager_name
        - chief_name
        - construction_responsible_name
        - construction_detail
        - purpose
        - orderer_name
        - orderer_zip_code
        - orderer_state
        - orderer_city
        - orderer_address_1
        - orderer_address_2
        - responsible_name
        - contract_money_initially
        - contract_money_change
        - document_number
    V2PostSitesSite:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID.
            jpn: |-
              現場ID。
          example: 60fa567c-3e3a-48d2-80e7-fac2c322a340
        corporation:
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation.
            jpn: |-
              企業。
          allOf:
            - $ref: '#/components/schemas/V2PostSitesCorporation'
        author:
          description: |

            :::x-description-i18n:
            eng: |-
              Author.
            jpn: |-
              作成者。
          allOf:
            - $ref: '#/components/schemas/V2PostSitesAuthor'
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site name.
            jpn: |-
              現場名。
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome new construction
            jpn: |-
              汐留新築工事
        abbreviated_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Abbreviated site name.
            jpn: |-
              現場名略称。
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome
            jpn: |-
              汐留工事
          nullable: true
        is_daylight_saving_time:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Determine whether the site is on summer time
            jpn: |-
              現場が夏時間かを判定する
          example: false
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address.
            jpn: |-
              住所。
          allOf:
            - $ref: '#/components/schemas/V2PostSitesAddress'
        coordinate:
          description: |

            :::x-description-i18n:
            eng: |-
              Coordinate.
            jpn: |-
              座標。
          allOf:
            - $ref: '#/components/schemas/V2PostSitesCoordinate'
        unit:
          description: |

            :::x-description-i18n:
            eng: |-
              Unit.
            jpn: |-
              単位。
          allOf:
            - $ref: '#/components/schemas/V2PostSitesUnit'
        work_period:
          description: |

            :::x-description-i18n:
            eng: |-
              Work period.
            jpn: |-
              工期。
          allOf:
            - $ref: '#/components/schemas/V2PostSitesWorkPeriod'
        work_type:
          description: |

            :::x-description-i18n:
            eng: |-
              Work type.
            jpn: |-
              工種。
          allOf:
            - $ref: '#/components/schemas/V2PostSitesWorkType'
        photo_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Photo URL that can be downloaded
            jpn: |-
              現場場像 画像をダウンロード可能なURL
          example: https://example.com
          nullable: true
        note:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Notes.
            jpn: |-
              備考。
          example: |

            :::x-example-i18n:
            eng: |-
              Notes.
            jpn: |-
              備考。
          nullable: true
        detailed_preference:
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Detailed preference.
            jpn: |-
              詳細設定。
          allOf:
            - $ref: '#/components/schemas/V2PostSitesDetailedPreference'
        archive:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Archive status.
              * ```false``` is set by default when creating.
            jpn: |-
              アーカイブ状態。
              * Create時はデフォルトで```false```が入る。
          example: false
        status:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Status. Changes depending on the current date.
              * If it is before the actual construction period (start date), it is ```waiting```
              * If it is after the actual construction period (start date), it is ```working```
              * If it is after the actual construction period (end date), it is ```completed```
            jpn: |-
              ステータス。現在日によって変化。
              * 実績工期(開始日)より前なら ```waiting```
              * 実績工期(開始日)を過ぎていたら ```working```
              * 実績工期(終了日)を過ぎていたら ```completed```
          example: waiting
        transfer_active:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer execution status.
              * ```true```: in progress
              * ```false```: not executed
            jpn: |-
              移管実行状態。
              * ```true```: 実行中
              * ```false```: 未実行
          example: false
        link_group_active:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Group link status.
              * ```true```: linked
              * ```false```: not linked
            jpn: |-
              グループ連携状態。
              * ```true```: 連携中
              * ```false```: 未連携
          example: false
        link_group_id:
          type: string
          format: uuid
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Linked group ID.
            jpn: |-
              グループ連携ID。
          example: 00000000-0000-0000-0000-000000000000
      required:
        - id
        - corporation
        - author
        - name
        - abbreviated_name
        - is_daylight_saving_time
        - address
        - coordinate
        - unit
        - work_period
        - work_type
        - photo_url
        - note
        - detailed_preference
        - archive
        - status
        - transfer_active
        - link_group_active
        - link_group_id
    V2PatchSitesSiteIdAddressDto:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード
          example: JP
          format: ISO 3166-1 alpha-2
          minLength: 2
          maxLength: 2
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号
          example: 105-0022
          maxLength: 255
          nullable: true
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          maxLength: 255
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          maxLength: 255
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              町名・番地
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          maxLength: 255
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Building name
            jpn: |-
              建物名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
          maxLength: 255
          nullable: true
    V2PatchSitesSiteIdCoordinateDto:
      type: object
      properties:
        latitude:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Latitude
            jpn: |-
              緯度
          example: '35.66689081094339'
          maxLength: 20
        longitude:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Longitude
            jpn: |-
              経度
          example: '139.76969528307006'
          maxLength: 20
    V2PatchSitesSiteIdUnitDto:
      type: object
      properties:
        distance:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (distance)
              * ```m```: meter
              * ```ft```: feet
              * ```ftUS```: feet (US)
            jpn: |-
              単位(距離)
              * ```m```: メートル
              * ```ft```: フィート
              * ```ftUS```: フィート(米国)
          enum:
            - m
            - ft
            - ftUS
        area:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (area)
              * ```m2```: square meter
              * ```ft2```: square feet
              * ```ac```: acre
              * ```ha```: hectare
            jpn: |-
              単位(面積)
              * ```m2```: 平方メートル
              * ```ft2```: 平方フィート
              * ```ac```: エーカー
              * ```ha```: ヘクタール
          enum:
            - m2
            - ft2
            - ac
            - ha
        volume:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (volume)
              * ```m3```: cubic meter
              * ```yd3```: cubic yard
            jpn: |-
              単位(体積)
              * ```m3```: 立方メートル
              * ```yd3```: 立方ヤード
          enum:
            - m3
            - yd3
        currency:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (currency)
              * ```CAD```: Canadian dollar
              * ```NZD```: New Zealand dollar
              * ```SGD```: Singapore dollar
              * ```AUD```: Australian dollar
              * ```GBP```: British pound
              * ```EUR```: Euro
              * ```JPY```: Japanese yen
              * ```USD```: United States dollar
            jpn: |-
              単位(通貨)
              * ```CAD```: カナダドル
              * ```NZD```: ニュージーランドドル
              * ```SGD```: シンガポールドル
              * ```AUD```: オーストラリアドル
              * ```GBP```: 英国ポンド
              * ```EUR```: ユーロ
              * ```JPY```: 日本円
              * ```USD```: 米国ドル
          enum:
            - CAD
            - NZD
            - SGD
            - AUD
            - GBP
            - EUR
            - JPY
            - USD
        weight:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (weight)
              * ```kg```: kilogram
              * ```lb```: pound
            jpn: |-
              単位(重量)
              * ```kg```: キログラム
              * ```lb```: ポンド
          enum:
            - kg
            - lb
    V2PatchSitesSiteIdWorkPeriodDto:
      type: object
      properties:
        planned_start_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Planned construction period (start date)
            jpn: |-
              予定工期(開始日)
          format: ISO 8601 YYYY-MM-DD
          pattern: ^d{4}-d{2}-d{2}
        planned_end_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Planned construction period (end date)
            jpn: |-
              予定工期(終了日)
          format: ISO 8601 YYYY-MM-DD
          pattern: ^d{4}-d{2}-d{2}
        start_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Actual construction period (start date)
            jpn: |-
              実績工期(開始日)
          format: ISO 8601 YYYY-MM-DD
          pattern: ^d{4}-d{2}-d{2}
        end_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Actual construction period (end date)
            jpn: |-
              実績工期(終了日)
          format: ISO 8601 YYYY-MM-DD
          pattern: ^d{4}-d{2}-d{2}
    V2PatchSitesSiteIdWorkTypeDto:
      type: object
      properties:
        i_con:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Compatible with i-Con. Required if the country of work is Japan
            jpn: |-
              工種i-Con対応。 現場の国が日本の場合必須
          enum:
            - supported
            - unsupported
            - other
          nullable: true
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction type
              * i_con: ```other```: Other
              * i_con: ```supported```
                * ```Road work```
                * ```River work```
                * ```Shore work```
                * ```Erosion control```
                * ```Pavement work```
              * i-con: ```unsupported```
                * e.g: ```1.Land preparation work```
            jpn: |-
              工種タイプ
              * i_con: ```other```: その他
              * i_con: ```supported```
                * ```道路土工```
                * ```河川土工```
                * ```海岸土工```
                * ```砂防土工```
                * ```舗装工```
              * i-con: ```unsupported```
                * e.g: ```1.土地造成工事 ```
          nullable: true
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction type text. Required if i_con is other. Cannot be specified in other cases
            jpn: |-
              工種テキスト。i_con が ```other``` の場合必須。そのほかの場合は指定不可
          maxLength: 255
          nullable: true
    V2PostSitesSiteIdDetailedPreferenceDto:
      type: object
      properties:
        working_start_time:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Working hours (start time)
            jpn: |-
              就業時間(開始時間)
          example: '09:30'
          format: ISO 8601 YYYY-MM-DD
          pattern: ^([01]d|2[0-3]):?(00|15|30|45)$
          nullable: true
        working_end_time:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Working hours (end time)
            jpn: |-
              就業時間(終了時間)
          example: '18:30'
          format: ISO 8601 YYYY-MM-DD
          pattern: ^([01]d|2[0-3]):?(00|15|30|45)$
          nullable: true
        agent_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site representative name
            jpn: |-
              現場代理人名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
          maxLength: 255
          nullable: true
        earthmoving_start_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Earthworks start date
            jpn: |-
              土工開始日
          example: '2019-08-01'
          format: ISO 8601 YYYY-MM-DD
          pattern: ^d{4}-d{2}-d{2}
          nullable: true
        earthmoving_end_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Earthworks end date
            jpn: |-
              土工終了日
          example: '2019-09-30'
          format: ISO 8601 YYYY-MM-DD
          pattern: ^d{4}-d{2}-d{2}
          nullable: true
        earthmoving_area:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Earthwork area
            jpn: |-
              土工面積
          example: '100'
          pattern: ^([1-9][0-9]{0,10})?(.[0-9]{1,3})?$
          nullable: true
        construction_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction number
            jpn: |-
              施工番号
          example: '2019082900014412'
          maxLength: 255
          nullable: true
        work_place_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Workplace name
            jpn: |-
              作業所名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
          maxLength: 255
          nullable: true
        tel:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number. 15 characters or less, half-width alphanumeric characters and some symbols (+-#*) only
            jpn: |-
              電話番号。15文字以下、半角英数字と一部記号(+-#*)のみ
          example: 03-3578-7757
          maxLength: 15
          pattern: ^([0-9a-zA-Z-+*#]{0,15})$
          nullable: true
        fax:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Fax number
            jpn: |-
              FAX番号
          example: 03-3578-7758
          maxLength: 255
          nullable: true
        contractor_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contractor name
            jpn: |-
              契約者名
          example: |

            :::x-example-i18n:
            eng: |-
              ZIRO EARTHBRAIN
            jpn: |-
              アースブレイン 二郎
          maxLength: 255
          nullable: true
        permit_industries:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Permitted industries
            jpn: |-
              許可業種
          example: |

            :::x-example-i18n:
            eng: |-
              Civil engineering business
            jpn: |-
              土木工事業
          maxLength: 255
          nullable: true
        permit_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Permission number
            jpn: |-
              許可番号
          example: |

            :::x-example-i18n:
            eng: |-
              No.00001
            jpn: |-
              第00001号
          maxLength: 255
          nullable: true
        permit_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Permission (update) date
            jpn: |-
              許可(更新)年月日
          example: '2019-04-01'
          format: ISO 8601 YYYY-MM-DD
          pattern: ^d{4}-d{2}-d{2}
          nullable: true
        management:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Design/Supervisor
            jpn: |-
              設計・監理
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
          maxLength: 255
          nullable: true
        manager_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Supervising engineer name
            jpn: |-
              監理技術者名
          example: |

            :::x-example-i18n:
            eng: |-
              SABURO EARTHBRAIN
            jpn: |-
              アースブレイン 三郎
          maxLength: 255
          nullable: true
        chief_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Chief engineer name
            jpn: |-
              主任技術者
          example: |

            :::x-example-i18n:
            eng: |-
              SHIRO EARTHBRAIN
            jpn: |-
              アースブレイン 四郎
          maxLength: 255
          nullable: true
        construction_responsible_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction person in charge
            jpn: |-
              施工担当者
          example: |

            :::x-example-i18n:
            eng: |-
              GORO EARTHBRAIN
            jpn: |-
              アースブレイン 五郎
          maxLength: 255
          nullable: true
        construction_detail:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction contents
            jpn: |-
              施工内容
          example: |

            :::x-example-i18n:
            eng: |-
              River work
            jpn: |-
              河川土工
          maxLength: 255
          nullable: true
        purpose:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Main purpose
            jpn: |-
              主要目的
          example: |

            :::x-example-i18n:
            eng: |-
              Disaster prevention station
            jpn: |-
              防災ステーション
          maxLength: 255
          nullable: true
        orderer_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client's name
            jpn: |-
              発注者名
          example: |

            :::x-example-i18n:
            eng: |-
              ROKURO EARTHBRAIN
            jpn: |-
              アースブレイン 六郎
          maxLength: 255
          nullable: true
        orderer_zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client's postal code
            jpn: |-
              発注者の郵便番号
          example: 105-0022
          maxLength: 255
          nullable: true
        orderer_state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client's state
            jpn: |-
              発注者の都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          maxLength: 255
          nullable: true
        orderer_city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client's city/town/village
            jpn: |-
              発注者の市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          maxLength: 255
          nullable: true
        orderer_address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client's address 1
            jpn: |-
              発注者の町名・番地
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          maxLength: 255
          nullable: true
        orderer_address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client's address 2
            jpn: |-
              発注者の建物名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
          maxLength: 255
          nullable: true
        responsible_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name of person in charge
            jpn: |-
              担当者名
          example: |

            :::x-example-i18n:
            eng: |-
              NANARO EARTHBRAIN
            jpn: |-
              アースブレイン 七郎
          maxLength: 255
          nullable: true
        contract_money_initially:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contract price (initial)
            jpn: |-
              契約額（当初）
          example: '1000000'
          maxLength: 13
          nullable: true
        contract_money_change:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contract price (revised)
            jpn: |-
              契約額（変更）
          example: '1000000'
          maxLength: 13
          nullable: true
        document_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Specification number
            jpn: |-
              設計書番号
          example: 001-000001
          maxLength: 255
          nullable: true
    V2PatchSitesSiteIdBodyDto:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site name
            jpn: |-
              現場名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome new construction
            jpn: |-
              汐留新築工事
          maxLength: 255
        is_daylight_saving_time:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Determine whether the site is on summer time
            jpn: |-
              現場が夏時間かを判定する
          example: 'false'
          nullable: false
        abbreviated_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site name abbreviation
            jpn: |-
              現場名略称
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome
            jpn: |-
              汐留工事
          maxLength: 255
          nullable: true
        address:
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Site address
            jpn: |-
              サイトアドレス
          allOf:
            - $ref: '#/components/schemas/V2PatchSitesSiteIdAddressDto'
        coordinate:
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Site coordinate
            jpn: |-
              サイト座標
          allOf:
            - $ref: '#/components/schemas/V2PatchSitesSiteIdCoordinateDto'
        unit:
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Site unit
            jpn: |-
              サイト単位
          example:
            distance: m
            area: m2
            volume: m3
            currency: CAD
            weight: kg
          allOf:
            - $ref: '#/components/schemas/V2PatchSitesSiteIdUnitDto'
        work_period:
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Site work_period
            jpn: |-
              現場作業期間
          example:
            planned_start_date: '2019-08-01'
            planned_end_date: '2020-07-30'
            start_date: '2019-08-01'
            end_date: '2020-07-30'
          allOf:
            - $ref: '#/components/schemas/V2PatchSitesSiteIdWorkPeriodDto'
        work_type:
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Site work_type
            jpn: |-
              現場作業の種類
          example:
            i_con: supported
            type: 道路土工
            name: null
          allOf:
            - $ref: '#/components/schemas/V2PatchSitesSiteIdWorkTypeDto'
        photo:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site image. The URL where images can be downloaded
            jpn: |-
              現場画像。画像をダウンロード可能なURL
          nullable: true
          example: https://img.landlog.info/site_photo/default.png
        note:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Remarks
            jpn: |-
              備考
          example: note
          maxLength: 65535
          nullable: true
        detailed_preference:
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Site detailed_preference
            jpn: |-
              サイトの詳細設定
          allOf:
            - $ref: '#/components/schemas/V2PostSitesSiteIdDetailedPreferenceDto'
        archive:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Archived state. When creating, ```false``` is entered by default

              * ```true``` : Archive
              * ```false``` : Do not archive
            jpn: |-
              アーカイブ状態。Create時はデフォルトで```false```が入る

              * ```true``` : アーカイブする
              * ```false``` : アーカイブしない
          nullable: true
        link_group_active:
          type: boolean
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Group cooperation status. When creating, ```false``` is entered by default

              * ```true``` : Work together
              * ```false``` : Not working together
            jpn: |-
              グループ連携状態。Create時はデフォルトで```false```が入る

              * ```true``` : 連携する
              * ```false``` : 連携しない
    V2PatchSitesSiteIdCorporation:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation  ID
            jpn: |-
              企業ID
          format: uuid
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Company name
            jpn: |-
              企業名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
      required:
        - id
        - name
    V2PatchSitesSiteIdAuthor:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Creator ID
            jpn: |-
              作成者ID
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Author name
            jpn: |-
              作成者名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
      required:
        - id
        - name
    V2PatchSitesSiteIdAddress:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード
          example: JP
          format: ISO 3166-1 alpha-2
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号
          example: 105-0022
          nullable: true
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              町名・番地
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Building name
            jpn: |-
              建物名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2PatchSitesSiteIdCoordinate:
      type: object
      properties:
        latitude:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Latitude
            jpn: |-
              緯度
          example: '35.66689081094339'
        longitude:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Longitude
            jpn: |-
              経度
          example: '139.76969528307006'
        time_zone:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Time zone
            jpn: |-
              タイムゾーン
          example: Asia/Tokyo
      required:
        - latitude
        - longitude
        - time_zone
    V2PatchSitesSiteIdUnit:
      type: object
      properties:
        distance:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (distance)
            jpn: |-
              単位(距離)
        area:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (area)
            jpn: |-
              単位(面積)
        volume:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (volume)
            jpn: |-
              単位(体積)
        currency:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (currency)
            jpn: |-
              単位(通貨)
        weight:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit (weight)
            jpn: |-
              単位(重量)
      required:
        - distance
        - area
        - volume
        - currency
        - weight
    V2PatchSitesSiteIdWorkPeriod:
      type: object
      properties:
        planned_start_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Planned construction period (start date)
            jpn: |-
              予定工期(開始日)
          format: ISO 8601 YYYY-MM-DD
          pattern: ^\d{4}-\d{2}-\d{2}
        planned_end_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Planned construction period (end date)
            jpn: |-
              予定工期(終了日)
          format: ISO 8601 YYYY-MM-DD
          pattern: ^\d{4}-\d{2}-\d{2}
        start_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Actual construction period (start date)
            jpn: |-
              実績工期(開始日)
          format: ISO 8601 YYYY-MM-DD
          pattern: ^\d{4}-\d{2}-\d{2}
          nullable: true
        end_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Actual construction period (end date)
            jpn: |-
              実績工期(終了日)
          format: ISO 8601 YYYY-MM-DD
          pattern: ^\d{4}-\d{2}-\d{2}
          nullable: true
      required:
        - planned_start_date
        - planned_end_date
        - start_date
        - end_date
    V2PatchSitesSiteIdWorkType:
      type: object
      properties:
        i_con:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Compatible with i-Con. Required if the country of work is Japan
            jpn: |-
              工種i-Con対応。 現場の国が日本の場合必須。
          nullable: true
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction type
              * i_con: ```other```: Other
              * i_con: ```supported```
                * ```Road work```
                * ```River work```
                * ```Shore work```
                * ```Erosion control```
                * ```Pavement work```
              * i-con: ```unsupported```
                * e.g: ```1.Land preparation work```
            jpn: |-
              工種タイプ
              * i_con: ```other```: その他
              * i_con: ```supported```
                * ```道路土工```
                * ```河川土工```
                * ```海岸土工```
                * ```砂防土工```
                * ```舗装工```
              * i-con: ```unsupported```
                * e.g: ```1.土地造成工事 ```
          nullable: true
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction type text. Cannot be specified if other than ```other```
            jpn: |-
              工種テキスト。```other``` 以外の場合、指定不可
          nullable: true
      required:
        - i_con
        - type
        - name
    V2PatchSitesSiteIdDetailedPreference:
      type: object
      properties:
        working_start_time:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Working hours (start time)
            jpn: |-
              就業時間(開始時間)。
          example: '09:30'
          pattern: ^$|^([01]\d|2[0-3]):?(00|15|30|45)$
          nullable: true
        working_end_time:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Working hours (end time)
            jpn: |-
              就業時間(終了時間)。
          example: '18:30'
          pattern: ^$|^([01]\d|2[0-3]):?(00|15|30|45)$
          nullable: true
        agent_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site representative name
            jpn: |-
              現場代理人名。
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
          nullable: true
        earthmoving_start_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Earthworks start date
            jpn: |-
              土工開始日。
          example: '2019-08-01'
          format: ISO 8601 YYYY-MM-DD
          pattern: ^\d{4}-\d{2}-\d{2}$
          nullable: true
        earthmoving_end_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Earthworks end date
            jpn: |-
              土工終了日。
          example: '2019-09-30'
          nullable: true
        earthmoving_area:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Earthwork area
            jpn: |-
              土工面積。
          example: '100'
          pattern: ^([1-9][0-9]{0,10})?(.[0-9]{1,3})?$
          nullable: true
        construction_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction number
            jpn: |-
              施工番号。
          example: '2019082900014412'
          nullable: true
        work_place_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Workplace name
            jpn: |-
              作業所名。
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
          nullable: true
        tel:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number. 15 characters or less, half-width alphanumeric characters and some symbols (+-#*) only
            jpn: |-
              電話番号。15文字以下、半角英数字と一部記号(+-#*)のみ
          example: 03-3578-7757
          pattern: ^([0-9a-zA-Z-+*#]{0,15})$
          nullable: true
        fax:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Fax number
            jpn: |-
              FAX番号。
          example: 03-3578-7758
          nullable: true
        contractor_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contractor name
            jpn: |-
              契約者名。
          example: |

            :::x-example-i18n:
            eng: |-
              ZIRO EARTHBRAIN
            jpn: |-
              アースブレイン 二郎
          nullable: true
        permit_industries:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Permitted industries
            jpn: |-
              許可業種。
          example: |

            :::x-example-i18n:
            eng: |-
              Civil engineering business
            jpn: |-
              土木工事業
          nullable: true
        permit_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Permission number
            jpn: |-
              許可番号
          example: |

            :::x-example-i18n:
            eng: |-
              No.00001
            jpn: |-
              第00001号
          nullable: true
        permit_date:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Permission (update) date
            jpn: |-
              許可(更新)年月日
          example: '2019-04-01'
          format: ISO 8601 YYYY-MM-DD
          pattern: ^\d{4}-\d{2}-\d{2}$
          nullable: true
        management:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Design/Supervisor
            jpn: |-
              設計・監理
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
          nullable: true
        manager_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Supervising engineer name
            jpn: |-
              監理技術者名
          example: |

            :::x-example-i18n:
            eng: |-
              SABURO EARTHBRAIN
            jpn: |-
              アースブレイン 三郎
          nullable: true
        chief_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Chief engineer name
            jpn: |-
              主任技術者
          example: |

            :::x-example-i18n:
            eng: |-
              SHIRO EARTHBRAIN
            jpn: |-
              アースブレイン 四郎
          nullable: true
        construction_responsible_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction person in charge
            jpn: |-
              施工担当者
          example: |

            :::x-example-i18n:
            eng: |-
              GORO EARTHBRAIN
            jpn: |-
              アースブレイン 五郎
          nullable: true
        construction_detail:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Construction contents
            jpn: |-
              設計・監理
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
          nullable: true
        purpose:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Main purpose
            jpn: |-
              主要目的
          example: |

            :::x-example-i18n:
            eng: |-
              Disaster prevention station
            jpn: |-
              防災ステーション
          nullable: true
        orderer_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client's name
            jpn: |-
              発注者名
          example: |

            :::x-example-i18n:
            eng: |-
              ROKURO EARTHBRAIN
            jpn: |-
              アースブレイン 六郎
          nullable: true
        orderer_zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client's postal code
            jpn: |-
              発注者の郵便番号
          example: 105-0022
          nullable: true
        orderer_state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client's state
            jpn: |-
              発注者の都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          nullable: true
        orderer_city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client's city/town/village
            jpn: |-
              発注者の市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          nullable: true
        orderer_address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client's address 1
            jpn: |-
              発注者の町名・番地
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
        orderer_address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client's address 2
            jpn: |-
              発注者の建物名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          nullable: true
        responsible_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name of person in charge
            jpn: |-
              担当者名
          example: |

            :::x-example-i18n:
            eng: |-
              NANARO EARTHBRAIN
            jpn: |-
              アースブレイン 七郎
          nullable: true
        contract_money_initially:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contract price (initial)
            jpn: |-
              契約額（当初）
          example: '1000000'
          nullable: true
        contract_money_change:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contract price (revised)
            jpn: |-
              契約額（変更）
          example: '1000000'
          nullable: true
        document_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Specification number
            jpn: |-
              設計書番号
          example: 001-000001
          nullable: true
      required:
        - working_start_time
        - working_end_time
        - agent_name
        - earthmoving_start_date
        - earthmoving_end_date
        - earthmoving_area
        - construction_number
        - work_place_name
        - tel
        - fax
        - contractor_name
        - permit_industries
        - permit_number
        - permit_date
        - management
        - manager_name
        - chief_name
        - construction_responsible_name
        - construction_detail
        - purpose
        - orderer_name
        - orderer_zip_code
        - orderer_state
        - orderer_city
        - orderer_address_1
        - orderer_address_2
        - responsible_name
        - contract_money_initially
        - contract_money_change
        - document_number
    V2PatchSitesSiteId:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID.
            jpn: |-
              現場ID。
          format: uuid
        corporation:
          description: |

            :::x-description-i18n:
            eng: |-
              Enterprise.
            jpn: |-
              企業。
          allOf:
            - $ref: '#/components/schemas/V2PatchSitesSiteIdCorporation'
        author:
          description: |

            :::x-description-i18n:
            eng: |-
              Creator.
            jpn: |-
              作成者。
          allOf:
            - $ref: '#/components/schemas/V2PatchSitesSiteIdAuthor'
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site name.
            jpn: |-
              現場名。
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome new construction
            jpn: |-
              汐留新築工事
        abbreviated_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site name abbreviation.
            jpn: |-
              現場名略称。
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome
            jpn: |-
              汐留工事
          nullable: true
        is_daylight_saving_time:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Determine whether the site is on summer time
            jpn: |-
              現場が夏時間かを判定する
          example: false
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Site address.
            jpn: |-
              サイトアドレス。
          allOf:
            - $ref: '#/components/schemas/V2PatchSitesSiteIdAddress'
        coordinate:
          description: |

            :::x-description-i18n:
            eng: |-
              Site coordinate.
            jpn: |-
              サイト座標。
          allOf:
            - $ref: '#/components/schemas/V2PatchSitesSiteIdCoordinate'
        unit:
          description: |

            :::x-description-i18n:
            eng: |-
              Site unit.
            jpn: |-
              サイト単位。
          example:
            distance: m
            area: m2
            volume: m3
            currency: CAD
            weight: kg
          allOf:
            - $ref: '#/components/schemas/V2PatchSitesSiteIdUnit'
        work_period:
          description: |

            :::x-description-i18n:
            eng: |-
              Site work_period.
            jpn: |-
              現場作業期間。
          example:
            planned_start_date: '2019-08-01'
            planned_end_date: '2020-07-30'
            start_date: '2019-08-01'
            end_date: '2020-07-30'
          allOf:
            - $ref: '#/components/schemas/V2PatchSitesSiteIdWorkPeriod'
        work_type:
          description: |

            :::x-description-i18n:
            eng: |-
              Site work_type.
            jpn: |-
              現場作業の種類。
          example:
            i_con: supported
            type: 道路土工
            name: null
          allOf:
            - $ref: '#/components/schemas/V2PatchSitesSiteIdWorkType'
        photo_url:
          type: string
          format: uri
          description: |

            :::x-description-i18n:
            eng: |-
              Site image. The URL where images can be downloaded
            jpn: |-
              現場画像。画像をダウンロード可能なURL
          nullable: true
          example: https://img.landlog.info/site_photo/default.png
        note:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Remarks
            jpn: |-
              備考。
          example: note
          nullable: true
        detailed_preference:
          description: |

            :::x-description-i18n:
            eng: |-
              Site detailed_preference.
            jpn: |-
              サイトの詳細設定。
          allOf:
            - $ref: '#/components/schemas/V2PatchSitesSiteIdDetailedPreference'
        archive:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Archived state. When creating, ```false``` is entered by default.

              * ```true``` : Archive
              * ```false``` : Do not archive
            jpn: |-
              アーカイブ状態。Create時はデフォルトで```false```が入る

              * ```true``` : アーカイブする
              * ```false``` : アーカイブしない
        status:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Status. Changes depending on the current day

              * ```waiting``` : If it is before the actual construction period (start date)
              * ```working``` : If the actual construction period (start date) has passed
              * ```completed``` : If the actual construction period (end date) has passed
            jpn: |-
              ステータス。 現在日によって変化

              * 実績工期(開始日)より前なら ```waiting```
              * 実績工期(開始日)を過ぎていたら ```working```
              * 実績工期(終了日)を過ぎていたら ```completed```
          enum:
            - waiting
            - working
            - completed
        transfer_active:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer execution status.

              * ```true``` : Running
              * ```false``` : Not executed
            jpn: |-
              移管実行状態

              * ```true``` : 実行中
              * ```false``` : 未実行
        link_group_active:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Group cooperation status. When creating, ```false``` is entered by default.

              * ```true``` : Work together
              * ```false``` : Not working together
            jpn: |-
              グループ連携状態。Create時はデフォルトで```false```が入る

              * ```true``` : 連携する
              * ```false``` : 連携しない
        link_group_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Collaboration destination group ID
            jpn: |-
              連携先グループID
          format: uuid
          nullable: true
      required:
        - id
        - corporation
        - author
        - name
        - abbreviated_name
        - is_daylight_saving_time
        - address
        - coordinate
        - unit
        - work_period
        - work_type
        - photo_url
        - note
        - detailed_preference
        - archive
        - status
        - transfer_active
        - link_group_active
        - link_group_id
    V2GetSitesSiteIdMembersCorporation:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
                企業ID
          example: 8902701e-764b-4e31-a16d-11b98b3e5005
          format: uuid
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation name
            jpn: |-
                企業名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
      required:
        - id
        - name
    V2GetSitesSiteIdMembersProfile:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User name (full name)
            jpn: |-
                ユーザー名（氏名）
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address
            jpn: |-
                メールアドレス
          example: taro.earthbrain@earthbrain.co.jp
          format: email
        language:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Language setting (if not specified, browser language is used)
                * ```ja```/ ```ja-JP```: Japanese
                * ```en-US```: English
                * ```de-DE```: German
                * ```fr-FR```: French
                * ```es-ES```: Spanish
                * ```cs-CZ```: Czech
            jpn: |-
              言語設定 (未指定の場合はブラウザの言語設定が使用される）
                * ```ja```/ ```ja-JP```: 日本語
                * ```en-US```: 英語
                * ```de-DE```: ドイツ語
                * ```fr-FR```: フランス語
                * ```es-ES```: スペイン語
                * ```cs-CZ```: チェコ語
          example: ja
          enum:
            - ja
            - ja-JP
            - en-US
            - de-DE
            - fr-FR
            - es-ES
            - cs-CZ
          maxLength: 5
          nullable: true
        corporation:
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation information
            jpn: |-
              企業情報
          allOf:
            - $ref: '#/components/schemas/V2GetSitesSiteIdMembersCorporation'
      required:
        - name
        - email
        - language
        - corporation
    V2GetSitesSiteIdMembersListSiteMember:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site member ID
            jpn: |-
              現場メンバーID
          example: fd9ca27a-310d-44f3-a680-86cb6c281005
          format: uuid
        user_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User ID of the site member
            jpn: |-
              現場メンバーのユーザーID
          example: 5f83f45a-68f9-4706-bbc0-8a1c6433c005
          format: uuid
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role in the site
              * ```site_manager```: Site supervisor
              * ```superintendent```: Operation (Leader)
              * ```site_worker```: Operation (General)
              * ```related_staff```: Staff (Viewer)
            jpn: |-
              現場内での権限
              * ```site_manager```: 現場監督
              * ```superintendent```: 作業員（リーダー）
              * ```site_worker```: 作業員（一般）
              * ```related_staff```: 関係者（閲覧者）
          example: site_worker
          enum:
            - site_manager
            - superintendent
            - site_worker
            - related_staff
        invited:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation status
              * ```true```: Inviting
              * ```false```: Accepted
            jpn: |-
              招待ステータス
              * ```true```: 招待中
              * ```false```: 承認済
          example: 'true'
        tag:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site member tags
            jpn: |-
              現場メンバーのタグ
          example: tag1
          nullable: true
        profile:
          description: |

            :::x-description-i18n:
            eng: |-
              Site member profile
            jpn: |-
              現場メンバーのプロフィール
          allOf:
            - $ref: '#/components/schemas/V2GetSitesSiteIdMembersProfile'
      required:
        - id
        - user_id
        - role
        - invited
        - tag
    V2GetSitesSiteIdMembers:
      type: object
      properties:
        total:
          type: number
          description: |-

            :::x-description-i18n:
            eng: |-
              Total number of applicable data
            jpn: |-
              該当するデータの全件数

          example: 1
        members:
          description: |-

            :::x-description-i18n:
            eng: |-
              Applicable site member list
            jpn: |-
              該当する現場メンバーのリスト

          type: array
          items:
            $ref: '#/components/schemas/V2GetSitesSiteIdMembersListSiteMember'
      required:
        - total
        - members
    DeleteV2SitesSiteIdMembersBodyDto:
      type: object
      properties:
        members:
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the site member to be removed
            jpn: |-
              解除する現場メンバーのID
          title: members
          example:
            - a3lgakee-4c2b-4932-8a40-8210fc0637bf
            - 520f84c3-5aad-42c2-b68b-29e3fe18b8ff
          type: array
          items:
            type: string
            format: uuid
    V2GetSitesSiteIdMembersMemberIdAddress:
      type: object
      properties:
        country:
          type: string
          minLength: 2
          maxLength: 2
          description: |

            :::x-description-i18n:
            eng: |-
              Country code, ISO 3166-1 alpha-2 format
            jpn: |-
              国名コード、ISO 3166-1 alpha-2 形式
          example: JP
          format: iso3166-1-alpha-2
          nullable: true
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Zip code
            jpn: |-
              郵便番号。
          example: 105-0022
          nullable: true
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Prefecture
            jpn: |-
              都道府県。
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          nullable: true
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City
            jpn: |-
              市区町村。
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          nullable: true
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address line 1(e.g. Street no.)
            jpn: |-
              住所1（番地など）
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address line 2(e.g. Building name)
            jpn: |-
              住所2(ビル名など）
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2GetSitesSiteIdMembersMemberIdCorporation:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
                企業ID
          format: uuid
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation name
            jpn: |-
                企業名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
      required:
        - id
        - name
    V2GetSitesSiteIdMembersMemberIdProfile:
      type: object
      properties:
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Account type, managed for corporate users
            jpn: |-
                アカウント種別、企業ユーザーはmanaged
          enum:
            - managed
          example: managed
          nullable: true
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User name (full name)
            jpn: |-
                ユーザー名（氏名）
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
        family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Family name
            jpn: |-
                姓
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
          nullable: true
        given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Given name
            jpn: |-
                名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
          nullable: true
        phonetic_family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name (full-width or half-width)
            jpn: |-
                姓（振り仮名）全角や半角は問わない
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
          nullable: true
        phonetic_given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name (full-width or half-width)
            jpn: |-
                名（振り仮名）全角や半角は問わない
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
          nullable: true
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address (also used as login ID)
            jpn: |-
                メールアドレス（ログインIDにもなる）
          example: earthbrain@earthbrain.co.jp
          format: email
        emails:
          description: |

            :::x-description-i18n:
            eng: |-
              Email addresses to receive notification emails (multiple addresses can be specified)
            jpn: |-
                通知メールを受け取るメールアドレス（複数指定可能）
          example:
            - earthbrain2@earthbrain.co.jp
            - earthbrain3@earthbrain.co.jp
          uniqueItems: true
          type: array
          items:
            type: string
        picture:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              The URL where icon images can be downloaded
            jpn: |-
                アイコン画像をダウンロード可能なURL
          example: https://api.landlog.info/v2/profile_image/pictures/default.png
          format: uri
          nullable: true
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number 1
            jpn: |-
              電話番号1
          example: '09012345678'
          nullable: true
        phone_number_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Phone number 2
            jpn: |-
              電話番号2
          example: '09087654321'
          nullable: true
        language:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Language setting (if not specified, browser language is used)
                * ```ja```/ ```ja-JP```: Japanese
                * ```en-US```: English
                * ```de-DE```: German
                * ```fr-FR```: French
                * ```es-ES```: Spanish
                * ```cs-CZ```: Czech
            jpn: |-
              言語設定 (未指定の場合はブラウザの言語設定が使用される）
                * ```ja```/ ```ja-JP```: 日本語
                * ```en-US```: 英語
                * ```de-DE```: ドイツ語
                * ```fr-FR```: フランス語
                * ```es-ES```: スペイン語
                * ```cs-CZ```: チェコ語
          enum:
            - ja
            - ja-JP
            - en-US
            - de-DE
            - fr-FR
            - es-ES
            - cs-CZ
          maxLength: 5
          nullable: true
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所
          allOf:
            - $ref: '#/components/schemas/V2GetSitesSiteIdMembersMemberIdAddress'
        corporation:
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation information
            jpn: |-
              企業情報
          allOf:
            - $ref: '#/components/schemas/V2GetSitesSiteIdMembersMemberIdCorporation'
      required:
        - type
        - name
        - family_name
        - given_name
        - phonetic_family_name
        - phonetic_given_name
        - email
        - emails
        - picture
        - phone_number
        - phone_number_2
        - language
        - corporation
    V2GetSitesSiteIdMembersMemberId:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site member ID
            jpn: |-
              現場メンバーID
          format: uuid
        user_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User ID of the site member
            jpn: |-
              現場メンバーのユーザーID
          format: uuid
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role in the site
              * ```site_manager```: Site supervisor
              * ```superintendent```: Operation (Leader)
              * ```site_worker```: Operation (General)
              * ```related_staff```: Staff (Viewer)
            jpn: |-
              現場内での権限
              * ```site_manager```: 現場監督
              * ```superintendent```: 作業員（リーダー）
              * ```site_worker```: 作業員（一般）
              * ```related_staff```: 関係者（閲覧者）
          enum:
            - site_manager
            - superintendent
            - site_worker
            - related_staff
        invited:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation status
              * ```true```: Inviting
              * ```false```: Accepted
            jpn: |-
              招待ステータス
              * ```true```: 招待中
              * ```false```: 承認済
        tag:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site member tags
            jpn: |-
              現場メンバーのタグ
          example: tag1
          nullable: true
        profile:
          description: |

            :::x-description-i18n:
            eng: |-
              Site member profile
            jpn: |-
              現場メンバーのプロフィール
          allOf:
            - $ref: '#/components/schemas/V2GetSitesSiteIdMembersMemberIdProfile'
      required:
        - id
        - user_id
        - role
        - invited
        - tag
        - profile
    V2PatchSitesSiteIdMembersMemberIdBodyDto:
      type: object
      properties:
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Member roles
              * ```site_manager```: Site supervisor
              * ```superintendent```: Operation (Leader)
              * ```site_worker```: Operation (General)
              * ```related_staff```: Staff (Viewer)
            jpn: |-
              メンバーの権限
              * ```site_manager```: 現場監督
              * ```superintendent```: 作業員（リーダー）
              * ```site_worker```: 作業員（一般）
              * ```related_staff```: 関係者（閲覧者）
          enum:
            - site_manager
            - superintendent
            - site_worker
            - related_staff
        tag:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Member tags
            jpn: |-
              メンバーのタグ
          maxLength: 255
          example: Prime contractor
    V2PatchSitesSiteIdMembersMemberId:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site member ID
            jpn: |-
              現場メンバーID
          format: uuid
        user_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site member User ID
            jpn: |-
              現場メンバーのユーザーID
          format: uuid
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role in site
              * ```site_manager```: Site supervisor
              * ```superintendent```: Operation (Leader)
              * ```site_worker```: Operation (General)
              * ```related_staff```: Staff (Viewer)
            jpn: |-
              現場内での権限
              * ```site_manager```: 現場監督
              * ```superintendent```: 作業員（リーダー）
              * ```site_worker```: 作業員（一般）
              * ```related_staff```: 関係者（閲覧者）
          enum:
            - site_manager
            - superintendent
            - site_worker
            - related_staff
        invited:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation status, ```true``` when inviting
            jpn: |-
              招待ステータス、招待中の時は```true```
        tag:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site member tag
            jpn: |-
              現場メンバーのタグ
          nullable: true
          example: tag1
      required:
        - id
        - user_id
        - role
        - invited
        - tag
    V2PostSitesSiteIdInvitesBodyDto:
      type: object
      properties:
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address of the user to be invited
            jpn: |-
              招待するユーザーのメールアドレス
          example: example@example.com
          format: email
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role granted to the invited user
              * ```site_manager```: Site supervisor
              * ```superintendent```: Operation (Leader)
              * ```site_worker```: Operation (General)
              * ```related_staff```: Staff (Viewer)
            jpn: |-
              招待するユーザーに付与する権限
              * ```site_manager```: 現場監督
              * ```superintendent```: 作業員（リーダー）
              * ```site_worker```: 作業員（一般）
              * ```related_staff```: 関係者（閲覧者）
          enum:
            - site_manager
            - superintendent
            - site_worker
            - related_staff
        tag:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Tag of the member
            jpn: |-
              メンバーのタグ
          maxLength: 255
        signup_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              If you want to change the URL of the account registration destination on the site invitation email, set this string
            jpn: |-
              現場招待メール上のアカウント登録先URLを変更する場合に設定する文字列
        invite_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              If you want to change the URL of the invitation destination on the site invitation email, set this string
              If you specify the string ```{:invite_code}```, it will be replaced with the invitation code and sent by email
            jpn: |-
              現場招待メール上の招待URLを変更する場合に設定する文字列
              ```{:invite_code}``` の文字列を指定した場合は 招待コード に置換してメール送信する
      required:
        - email
        - role
    V2PostSitesSiteIdInvites:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Invite ID
            jpn: |-
              招待ID
          format: uuid
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
        site_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          format: uuid
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
        site_member_id:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Site member ID
            jpn: |-
              現場メンバーID
          format: uuid
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
        user_id:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              User ID of the invited user
            jpn: |-
              招待したユーザーのユーザーID
          format: uuid
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address of the invited user
            jpn: |-
              招待したユーザーのメールアドレス
          format: email
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role granted to the invited user
              * ```site_manager```: Site supervisor
              * ```superintendent```: Operation (Leader)
              * ```site_worker```: Operation (General)
              * ```related_staff```: Staff (Viewer)
            jpn: |-
              招待するユーザーに付与する権限
              * ```site_manager```: 現場監督
              * ```superintendent```: 作業員（リーダー）
              * ```site_worker```: 作業員（一般）
              * ```related_staff```: 関係者（閲覧者）
          enum:
            - site_manager
            - superintendent
            - site_worker
            - related_staff
        tag:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Tag of the member
            jpn: |-
              メンバーのタグ
          example: tag
        invite_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Invite code
            jpn: |-
              招待コード
          example: z63jwDp9u0c
        signup_url:
          type: string
          nullable: true
          description: |-

            :::x-description-i18n:
            eng: |-
              If you want to change the URL of the account registration destination on the site invitation email, set this string
            jpn: |-
              現場招待メール上のアカウント登録先URLを変更する場合に設定する文字列

          example: https://signup.landlog.info
        invite_url:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              If you want to change the URL of the invitation destination on the site invitation email, set this string
              If you specify the string ```{:invite_code}```, it will be replaced with the invitation code and sent by email
            jpn: |-
              現場招待メール上の招待URLを変更する場合に設定する文字列
              ```{:invite_code}``` の文字列を指定した場合は 招待コード に置換してメール送信する
          example: >-
            https://gemba-manager.landlog.info/gemba/96b31b14-7cfe-443c-836c-78487784c731/invites/{:invite_code}
        status:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Invite status
              * ```accept```: Accepted invitation
              * ```pending```: Pending invitation
              * ```expired```: Expired invitation
            jpn: |-
              招待ステータス
              * ```accept```: 承認済み
              * ```pending```: 保留中
              * ```expired```: 期限切れ
          enum:
            - accept
            - pending
            - expired
          example: pending
      required:
        - id
        - site_id
        - site_member_id
        - user_id
        - email
        - role
        - tag
        - invite_code
        - signup_url
        - invite_url
        - status
    V2GetSitesSiteIdInvitesSiteinvite:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation ID
            jpn: |-
              招待ID
          format: uuid
        site_id:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          format: uuid
        site_member_id:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Site member ID
            jpn: |-
              現場メンバーID
          format: uuid
          nullable: true
        user_id:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID
          format: uuid
          nullable: true
        email:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Email address
            jpn: |-
              メールアドレス
          example: taro.langlog@landlog.co.jp
        role:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Member roles
            jpn: |-
              メンバーの権限
          example: super_admin
        tag:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Member tags
            jpn: |-
              メンバーのタグ
          example: tag1
          nullable: true
        signup_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Character string to be set when changing the account registration destination URL in the on-site invitation email
            jpn: |-
              現場招待メール上のアカウント登録先URLを変更する場合に設定する文字列
          example: https://signup.landlog.info
          nullable: true
        invite_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              String to set when changing the invitation URL on the site invitation email If the string ```{:invite_code}``` is specified, replace it with the invitation code and send the email
            jpn: |-
              現場招待メール上の招待URLを変更する場合に設定する文字列```{:invite_code}```の文字列を指定した場合は招待コードに置換してメール送信する
          example: >-
            https://gemba-manager.landlog.info/gemba/72771e6a-6f5e-4de4-a5b9-1266c4197811/invites/{:invite_code}
          nullable: true
        invite_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation code
            jpn: |-
              招待コード
          example: 5BfRAcYekCX
        status:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation status ```accept```, ```pending```, or ```expired```
            jpn: |-
              招待ステータス ```accept```(承認済み), ```pending```(保留中), ```expired```(期限切れ)のいずれか。複数の場合はカンマ区切り
          enum:
            - accept
            - pending
            - expired
          example: accept
      required:
        - id
        - site_id
        - site_member_id
        - user_id
        - email
        - role
        - tag
        - signup_url
        - invite_url
        - invite_code
        - status
    V2GetSitesSiteIdInvites:
      type: object
      properties:
        total:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              Total of applicable data
            jpn: |-
              該当するデータの全件数
          example: 1
        invites:
          description: |

            :::x-description-i18n:
            eng: |-
              List of applicable invitations
            jpn: |-
              該当する招待のリスト
          type: array
          items:
            $ref: '#/components/schemas/V2GetSitesSiteIdInvitesSiteinvite'
      required:
        - total
        - invites
    V2GetSitesSiteIdInvitesInviteCodeSite:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          format: uuid
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site name
            jpn: |-
              現場名
          example: site1
      required:
        - id
        - name
    V2GetSitesSiteIdInvitesInviteCode:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              招待ID
          format: uuid
        invite_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation code
            jpn: |-
              招待コード
          example: 5BfRAcYekCX
        signup_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Character string to be set when changing the account registration destination URL in the on-site invitation email
            jpn: |-
              現場招待メール上のアカウント登録先URLを変更する場合に設定する文字列
          example: https://signup.landlog.info
          nullable: true
        invite_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              String to set when changing the invitation URL on the site invitation email If the string ```{:invite_code}``` is specified, replace it with the invitation code and send the email
            jpn: |-
              現場招待メール上の招待URLを変更する場合に設定する文字列```{:invite_code}```の文字列を指定した場合は招待コードに置換してメール送信する
          nullable: true
          example: >-
            https://gemba-manager.landlog.info/gemba/96b31b14-7cfe-443c-836c-78487784c731/invites/{:invite_code}
        status:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation status ```accept```, ```pending```, ```expired```
            jpn: |-
              招待ステータス ```accept```(承認済み), ```pending```(保留中), ```expired```(期限切れ)
          enum:
            - accept
            - pending
            - expired
          example: accept
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address
            jpn: |-
              メールアドレス
          example: user@example.com
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Member roles
            jpn: |-
              メンバーの権限
          example: super_admin
        tag:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Member tags
            jpn: |-
              メンバーのタグ
          nullable: true
          example: tag1
        site:
          description: |

            :::x-description-i18n:
            eng: |-
              Site information
            jpn: |-
              現場基盤情報
          allOf:
            - $ref: '#/components/schemas/V2GetSitesSiteIdInvitesInviteCodeSite'
      required:
        - id
        - invite_code
        - signup_url
        - invite_url
        - status
        - email
        - role
        - tag
        - site
    V2PatchSitesSiteIdInvitesInviteCodeBodyDto:
      type: object
      properties:
        accept:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Acceptance flag
              * ```true```: Admit
              * ```false```: Rejection
            jpn: |-
              承認フラグ
              * ```true```: 承認
              * ```false```: 拒否
          example: 'true'
      required:
        - accept
    V2PostSitesSiteIdInvitesInviteIdResend:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              invitation ID
            jpn: |-
              招待ID
          format: uuid
        site_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          format: uuid
        site_member_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site member ID
            jpn: |-
              現場メンバーID
          format: uuid
          nullable: true
        user_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID
          format: uuid
          nullable: true
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address
            jpn: |-
              メールアドレス
          format: email
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Member role
              * ```site_manager```: Site supervisor
              * ```superintendent```: Operation (Leader)
              * ```site_worker```: Operation (General)
              * ```related_staff```: Staff (Viewer)
            jpn: |-
              メンバーの権限
              * ```site_manager```: 現場監督
              * ```superintendent```: 作業員（リーダー）
              * ```site_worker```: 作業員（一般）
              * ```related_staff```: 関係者（閲覧者）
          enum:
            - site_manager
            - superintendent
            - site_worker
            - related_staff
        tag:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Member tag
            jpn: |-
              メンバーのタグ
          example: tag
        invite_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation code
            jpn: |-
              招待コード
          example: z63jwDp9u0c
        signup_url:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Character string to be set when changing the account registration destination URL in the site invitation email
            jpn: |-
              現場招待メール上のアカウント登録先URLを変更する場合に設定する文字列
          example: https://signup.landlog.info
        invite_url:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              String to set when changing the invitation URL on the site invitation email

              If you specify the string {:invite_code}, replace it with the invitation code and send the email
            jpn: |-
              現場招待メール上の招待URLを変更する場合に設定する文字列

              {:invite_code} の文字列を指定した場合は 招待コード に置換してメール送信する
          example: >-
            https://gemba-manager.landlog.info/gemba/96b31b14-7cfe-443c-836c-78487784c731/invites/{:invite_code}
        status:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Invite status, always return ```pending```: Pending invitation
            jpn: |-
              招待ステータス, 常に ```pending``` を返します: 保留中
          default: pending
          example: pending
      required:
        - id
        - site_id
        - site_member_id
        - user_id
        - email
        - role
        - tag
        - invite_code
        - signup_url
        - invite_url
        - status
    V2GetSitesSiteIdTransfersTransfersHostCorporation:
      type: object
      properties:
        id:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Host corporation ID
            jpn: |-
              移管元企業ID
          format: uuid
        name:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Host corporation name
            jpn: |-
              移管元企業名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
      required:
        - id
        - name
    V2GetSitesSiteIdTransfersTransfersHostUser:
      type: object
      properties:
        name:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Host user name
            jpn: |-
              移管元ユーザ名
          example: Host User Name
        email:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Host user email
            jpn: |-
              移管元メールアドレス
          example: example@example.com
          format: email
      required:
        - name
        - email
    V2GetSitesSiteIdTransfersTransfersSiteAddress:
      type: object
      properties:
        country:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード
          example: JP
          format: ISO 3166-1 alpha-2
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号
          example: 105-0022
          nullable: true
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address line 1
            jpn: |-
              町名・番地
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address line 2
            jpn: |-
              建物名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2GetSitesSiteIdTransfersTransfersSite:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          format: uuid
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site name
            jpn: |-
              現場名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome new construction
            jpn: |-
              汐留新築工事
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Site address
            jpn: |-
              現場住所
          allOf:
            - $ref: >-
                #/components/schemas/V2GetSitesSiteIdTransfersTransfersSiteAddress
      required:
        - id
        - name
        - address
    V2GetSitesSiteIdTransfersTransfersTargetUser:
      type: object
      properties:
        id:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Target user name
            jpn: |-
              移管先ユーザ名
          format: uuid
        email:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Target user email
            jpn: |-
              移管先メールアドレス
          format: email
      required:
        - id
        - email
    V2GetSitesSiteIdTransfersTransfers:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer ID
            jpn: |-
              移管ID
          format: uuid
        host_corporation:
          description: |

            :::x-description-i18n:
            eng: |-
              Host corporation information
            jpn: |-
              移管元企業情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetSitesSiteIdTransfersTransfersHostCorporation
        host_user:
          description: |

            :::x-description-i18n:
            eng: |-
              Host user information
            jpn: |-
              移管元ユーザ情報
          allOf:
            - $ref: '#/components/schemas/V2GetSitesSiteIdTransfersTransfersHostUser'
        site:
          description: |

            :::x-description-i18n:
            eng: |-
              Site information
            jpn: |-
              現場情報
          allOf:
            - $ref: '#/components/schemas/V2GetSitesSiteIdTransfersTransfersSite'
        target_user:
          description: |

            :::x-description-i18n:
            eng: |-
              Target user information
            jpn: |-
              移管先ユーザ情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetSitesSiteIdTransfersTransfersTargetUser
        member_inherit:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Whether to inherit existing members
            jpn: |-
              既存メンバの引継ぎ
        status:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer status
              * ```pending```: Not yet accepted
              * ```expired```: Transfer expired
              * ```accept```: Transfer accepted
            jpn: |-
              移管ステータス
              * ```pending```: 未承認
              * ```expired```: 移管期限切れ
              * ```accept```: 移管承認済み
          enum:
            - pending
            - expired
            - accept
        message:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer message
            jpn: |-
              移管メッセージ
          example: |

            :::x-example-i18n:
            eng: |-
              message sample.
            jpn: |-
              サンプルメッセージ。
          nullable: true
        transfer_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              If you specify a string to change the URL of the link on the site transfer email, replace it with ```{:transfer_id}``` and send the email
            jpn: |-
              現場移管メール上のリンク先URLを変更する場合に設定する文字列```{:transfer_id}```の文字列を指定した場合は 移管ID に置換してメール送信する
          example: https://example.com/transfer/
          nullable: true
        created_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer expiration date and time
            jpn: |-
              移管期限日時
          example: '2021-01-01T00:00:00.000Z'
          format: ISO 8601
      required:
        - id
        - host_corporation
        - host_user
        - site
        - target_user
        - member_inherit
        - status
        - message
        - transfer_url
        - created_at
    V2GetSitesSiteIdTransfers:
      type: object
      properties:
        total:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of data
            jpn: |-
              該当するデータの全件数
          example: 1
        transfers:
          description: |

            :::x-description-i18n:
            eng: |-
              List of transfer information
            jpn: |-
              移管情報の一覧
          type: array
          items:
            $ref: '#/components/schemas/V2GetSitesSiteIdTransfersTransfers'
      required:
        - total
        - transfers
    V2PostSitesSiteIdTransfersBodyDto:
      type: object
      properties:
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              The email address of the user of the company you want to transfer to
            jpn: |-
              移管したい企業のユーザのメールアドレス
          example: jiro.langlog@landlog.co.jp
          format: email
        member_inherit:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Whether to inherit existing members

              * ```true```: Inherit existing members
              * ```false```: Do not inherit existing members
            jpn: |-
              既存メンバの引継ぎ

              * ```true```: 既存メンバを引継ぐ
              * ```false```: 既存メンバを引継がない
        message:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer message
            jpn: |-
              移管メッセージ
          example: |

            :::x-example-i18n:
            eng: |-
              Sample Message.
            jpn: |-
              サンプルメッセージです。
          maxLength: 2000
        transfer_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              If you want to change the URL of the link in the transfer email, specify a string to replace the ```{:transfer_id}``` string with the transfer ID and send the email
            jpn: |-
              現場移管メール上のリンク先URLを変更する場合に設定する文字列```{:transfer_id}```の文字列を指定した場合は移管IDに置換してメール送信する
          example: https://example.com/transfer/
          maxLength: 2000
          nullable: true
      required:
        - email
        - member_inherit
    V2PostSitesSiteIdTransfersHostCorporation:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer source corporation ID
            jpn: |-
              移管元企業ID
          format: uuid
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer source corporation name
            jpn: |-
              移管元企業名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
      required:
        - id
        - name
    V2PostSitesSiteIdTransfersHostUser:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer source user name
            jpn: |-
              移管元ユーザー名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer source user email
            jpn: |-
              移管元メールアドレス
          example: souce-user@example.com
          format: email
      required:
        - name
        - email
    V2PostSitesSiteIdTransfersSiteAddress:
      type: object
      properties:
        country:
          type: string
          minLength: 2
          maxLength: 2
          description: |

            :::x-description-i18n:
            eng: |-
              Country code, ISO 3166-1 alpha-2 format
            jpn: |-
              国名コード、ISO 3166-1 alpha-2 形式
          example: JP
          format: iso3166-1-alpha-2
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Zip code
            jpn: |-
              郵便番号
          example: 105-0022
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Prefecture
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Town name/street address
            jpn: |-
              町名・番地
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
        address_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Building name
            jpn: |-
              建物名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2PostSitesSiteIdTransfersSite:
      type: object
      properties:
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          format: uuid
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
        name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Site name
            jpn: |-
              現場名
        address:
          description: |-

            :::x-description-i18n:
            eng: |-
              Site address
            jpn: |-
              現場住所
          allOf:
            - $ref: '#/components/schemas/V2PostSitesSiteIdTransfersSiteAddress'
      required:
        - id
        - name
        - address
    V2PostSitesSiteIdTransfersTargetUser:
      type: object
      properties:
        id:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer destination user ID
            jpn: |-
              移管先ユーザーID
          format: uuid
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer destination user email
            jpn: |-
              移管先メールアドレス
          example: destination-user@example.com
          format: email
      required:
        - id
        - email
    V2PostSitesSiteIdTransfers:
      type: object
      properties:
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Transfer ID, UUID format
            jpn: |-
              移転ID、UUID形式
          example: b368097c-24ca-4339-8a7d-d3ee284a4807
          format: uuid
          pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
        host_corporation:
          description: |-

            :::x-description-i18n:
            eng: |-
              Transfer source corporation
            jpn: |-
              移管元企業
          allOf:
            - $ref: '#/components/schemas/V2PostSitesSiteIdTransfersHostCorporation'
        host_user:
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer source user
            jpn: |-
              移管元ユーザー
          allOf:
            - $ref: '#/components/schemas/V2PostSitesSiteIdTransfersHostUser'
        site:
          description: |-

            :::x-description-i18n:
            eng: |-
              Transfer site
            jpn: |-
              移管現場
          allOf:
            - $ref: '#/components/schemas/V2PostSitesSiteIdTransfersSite'
        target_user:
          description: |-

            :::x-description-i18n:
            eng: |-
              Transfer destination user
            jpn: |-
              移管先ユーザー
          allOf:
            - $ref: '#/components/schemas/V2PostSitesSiteIdTransfersTargetUser'
        member_inherit:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Whether to inherit existing members

              * ```true```: Inherit existing members
              * ```false```: Do not inherit existing members
            jpn: |-
              既存メンバの引継ぎ

              * ```true```: 既存メンバを引継ぐ
              * ```false```: 既存メンバを引継がない
          example: true
        status:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Transfer status, always return ```pending```: Pending transfer
            jpn: |-
              移管ステータス, 常に ```pending``` を返します: 移管保留中
          default: pending
          example: pending
        message:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Transfer message
            jpn: |-
              移管メッセージ
          example: |

            :::x-example-i18n:
            eng: |-
              Transfer Message Sample.,
            jpn: |-
              移管メッセージサンプル。
          nullable: true
        transfer_url:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              If you want to change the URL of the link in the transfer email, specify a string to replace the ```{:transfer_id}``` string with the transfer ID and send the email
            jpn: |-
              現場移管メール上のリンク先URLを変更する場合に設定する文字列```{:transfer_id}```の文字列を指定した場合は移管IDに置換してメール送信する
          example: https://example.com/transfer/{:transfer_id}
          nullable: true
        created_at:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Transfer creation date and time
            jpn: |-
              移管実行日時
          example: '2020-01-01T00:00:00.000Z'
          format: ISO 8601
      required:
        - id
        - host_corporation
        - host_user
        - site
        - target_user
        - member_inherit
        - status
        - message
        - transfer_url
        - created_at
    V2GetSitesSiteIdTransferTransfersIdHostCorporation:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer source corportion ID
            jpn: |-
              移管元企業ID
          format: uuid
          nullable: true
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer source corportion name
            jpn: |-
              移管元企業名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
          nullable: true
      required:
        - id
        - name
    V2GetSitesSiteIdTransferTransfersIdHostUser:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer source user name
            jpn: |-
              移管元ユーザー名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
          nullable: true
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer source email address
            jpn: |-
              移管元メールアドレス
          example: example@example.com
          format: email
          nullable: true
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer source phone number
            jpn: |-
              移管元電話番号
          example: 1-234-567-8900
          nullable: true
      required:
        - name
        - email
        - phone_number
    V2GetSitesSiteIdTransferTransfersIdSiteAddress:
      type: object
      properties:
        country:
          type: string
          minLength: 2
          maxLength: 2
          description: |

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード
          example: JP
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号
          example: 105-0022
          nullable: true
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              町名・番地
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Building name
            jpn: |-
              建物名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2GetSitesSiteIdTransferTransfersIdSite:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site ID
            jpn: |-
              現場ID
          format: uuid
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Site name
            jpn: |-
              現場名
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome new construction
            jpn: |-
              汐留新築工事
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Site address
            jpn: |-
              サイトアドレス
          allOf:
            - $ref: >-
                #/components/schemas/V2GetSitesSiteIdTransferTransfersIdSiteAddress
      required:
        - id
        - name
        - address
    V2GetSitesSiteIdTransferTransfersIdTargetUser:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer target user ID
            jpn: |-
              移管先ユーザID
          format: uuid
          nullable: true
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer target user email address
            jpn: |-
              移管先メールアドレス
          format: email
          nullable: true
      required:
        - id
        - email
    V2GetSitesSiteIdTransferTransfersId:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer ID
            jpn: |-
              移管ID
          example: b368097c-24ca-4339-8a7d-d3ee284a4807
          format: uuid
        host_corporation:
          description: |

            :::x-description-i18n:
            eng: |-
              Host corporation
            jpn: |-
              主催法人
          allOf:
            - $ref: >-
                #/components/schemas/V2GetSitesSiteIdTransferTransfersIdHostCorporation
        host_user:
          description: |

            :::x-description-i18n:
            eng: |-
              Host user
            jpn: |-
              主催法人
          allOf:
            - $ref: '#/components/schemas/V2GetSitesSiteIdTransferTransfersIdHostUser'
        site:
          description: |

            :::x-description-i18n:
            eng: |-
              Site
            jpn: |-
              サイト
          allOf:
            - $ref: '#/components/schemas/V2GetSitesSiteIdTransferTransfersIdSite'
        target_user:
          description: |

            :::x-description-i18n:
            eng: |-
              Target user
            jpn: |-
              対象ユーザー
          example:
            id: cc5d6045-b250-4339-bd08-9959d4e46aee
            email: jiro.langlog@landlog.co.jp
          allOf:
            - $ref: >-
                #/components/schemas/V2GetSitesSiteIdTransferTransfersIdTargetUser
        member_inherit:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Inheriting existing members
            jpn: |-
              既存メンバの引継ぎ
          example: true
        status:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer status. ```pending```(保留中), ```expired```(期限切れ) or ```accept```(承諾済み)
            jpn: |-
              移管ステータス。```pending```(保留中), ```expired```(期限切れ), ```accept```(承諾済み)のいずれか
          example: pending
          enum:
            - pending
            - accept
            - expired
        message:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer message
            jpn: |-
              移管メッセージ
          example: |

            :::x-example-i18n:
            eng: |-
              Sample message.
            jpn: |-
              サンプルメッセージ。
          nullable: true
        created_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer creation date and time
            jpn: |-
              移管作成日時
          format: ISO 8601
          example: '2019-10-17T05:35:11.000Z'
        transfer_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Transfer URL
            jpn: |-
              移管url。
          example: http://transfer-url-earthbrain.com
          nullable: true
      required:
        - id
        - host_corporation
        - host_user
        - site
        - target_user
        - member_inherit
        - status
        - message
        - created_at
        - transfer_url
    V2PatchSitesSiteIdTransfersTransferIdBodyDto:
      type: object
      properties:
        accept:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Acceptance flag
              * ```true```: Admit
              * ```false```: Rejection
            jpn: |-
              承諾フラグ
              * ```true```: 承諾
              * ```false```: 拒否
          example: true
      required:
        - accept
    V2GetUsersUserIdInvitesGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group Name
            jpn: |-
              グループ名
          example: |

            :::x-example-i18n:
            eng: |-
              Test Company 001
            jpn: |-
              テスト会社001
        type:
          type: string
          enum:
            - Corporation
            - Group
          description: |

            :::x-description-i18n:
            eng: |-
              Group Type
              * ```Corporation``` or ```Group```
            jpn: |-
              グループタイプ
              * ```Corporation``` or ```Group```
      required:
        - id
        - name
        - type
    V2GetUsersUserIdInvitesUserinvite:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation ID
            jpn: |-
              招待ID
        invite_code:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation Code (11 characters)
            jpn: |-
              招待コード (11文字)
          example: oaeXHabc001
        status:
          type: string
          enum:
            - pending
            - expired
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation Status
              * ```pending(保留中)``` or ```expired(期限切れ)```
            jpn: |-
              招待ステータス
              * ```pending(保留中)```, ```expired(期限切れ)```
        group:
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation Group
            jpn: |-
              招待グループ
          allOf:
            - $ref: '#/components/schemas/V2GetUsersUserIdInvitesGroup'
      required:
        - id
        - invite_code
        - status
    V2GetUsersUserIdInvites:
      type: object
      properties:
        total:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of applicable data
            jpn: |-
              該当するデータの全件数
          example: 1
        invites:
          description: |

            :::x-description-i18n:
            eng: |-
              List User Intive
            jpn: |-
              リストユーザーインティブ
          type: array
          items:
            $ref: '#/components/schemas/V2GetUsersUserIdInvitesUserinvite'
      required:
        - total
        - invites
    V2GetMyProfileAddress:
      type: object
      properties:
        country:
          type: string
          minLength: 2
          description: |

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード
          maxLength: 2
          nullable: true
          format: ISO 3166-1 alpha-2
          example: JP
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Zip code
            jpn: |-
              郵便番号
          nullable: true
          pattern: ^.{1,255}$
          example: 105-0022
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Prefecture
            jpn: |-
              都道府県
          nullable: true
          pattern: ^$|^.{1,255}$
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City
            jpn: |-
              市区町村
          nullable: true
          pattern: ^.{1,255}$
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address line 1(e.g. Street no.).
            jpn: |-
              住所1（番地など）
          nullable: true
          pattern: ^$|.{1,255}
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address line 2(e.g. Building name).
            jpn: |-
              住所2(ビル名など）
          nullable: true
          pattern: ^$|.{1,255}
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2GetMyProfileGroups:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group ID (UUID Format)
            jpn: |-
              所属・参加している企業および参加しているグループのID(UUID)
          format: uuid
          example: c8a17724-caeb-4233-b8d8-ba38690a113d
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group name
            jpn: |-
              所属・参加している企業および参加しているグループの名称
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Type of group the user belongs Corporation or Group
            jpn: |-
              所属・参加している企業および参加しているグループのタイプ
          enum:
            - Corporation
            - Group
          example: Corporation
          maxLength: 11
        corporation_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the corporation that the user's group belongs to When the user's group does not belong to a corporation, null is returned
            jpn: |-
              所属・参加している企業および参加しているグループが所属している企業のID、所属するグループが企業に所属していない場合はnullを返す
          format: uuid
          nullable: true
          example: c8a17724-caeb-4233-b8d8-ba38690a113d
      required:
        - id
        - name
        - type
        - corporation_id
    V2GetMyProfileCorporation:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              所属する企業にあたるグループのID
          format: uuid
          example: c8a17724-caeb-4233-b8d8-ba38690a113d
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation name
            jpn: |-
              所属する企業にあたるグループの名称
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
      required:
        - id
        - name
    V2GetMyProfile:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID
          format: uuid
          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Account type
              * ```managed```:  User is managed by a corporation
            jpn: |-
              アカウント種別
              * ```managed```: ユーザーは企業によって管理されています
          enum:
            - managed
          example: managed
          nullable: true
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Username (full name)
            jpn: |-
              ユーザー名（氏名）
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
        family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Family name
            jpn: |-
              姓
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
        given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Given name
            jpn: |-
              名
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
        phonetic_family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name
            jpn: |-
              姓（振り仮名）全角や半角は問わない
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
        phonetic_given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name
            jpn: |-
              名（振り仮名）全角や半角は問わない
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address
            jpn: |-
              メールアドレス（ログインIDにもなる）
          nullable: true
          format: email
          example: taro.earthbrain.co.jp
        emails:
          description: |

            :::x-description-i18n:
            eng: |-
              Email address to receive notification
            jpn: |-
              通知メールを受け取るメールアドレス（複数指定可能）
          nullable: true
          uniqueItems: true
          example: taro1.earthbrain.co.jp
          type: array
          items:
            type: string
        picture:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              URL of an icon image URI format
            jpn: |-
              アイコン画像をダウンロード可能なURL、URI形式
          nullable: true
          format: uri
          example: https://sample.co.jp/v2/profile_image/pictures/1/default.png
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Primary phone number
            jpn: |-
              電話番号1
          nullable: true
          example: '09012345678'
        phone_number_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Secondary phone number
            jpn: |-
              電話番号2
          nullable: true
          example: '09087654321'
        language:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Language setting (if not specified, browser language is used)
                * ```ja```/ ```ja-JP```: Japanese
                * ```en-US```: English
                * ```de-DE```: German
                * ```fr-FR```: French
                * ```es-ES```: Spanish
                * ```cs-CZ```: Czech
            jpn: |-
              言語設定 (未指定の場合はブラウザの言語設定が使用される）
                * ```ja```/ ```ja-JP```: 日本語
                * ```en-US```: 英語
                * ```de-DE```: ドイツ語
                * ```fr-FR```: フランス語
                * ```es-ES```: スペイン語
                * ```cs-CZ```: チェコ語
          enum:
            - ja
            - ja-JP
            - en-US
            - de-DE
            - fr-FR
            - es-ES
            - cs-CZ
          maxLength: 5
          nullable: true
          example: en-US
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所の情報
          allOf:
            - $ref: '#/components/schemas/V2GetMyProfileAddress'
        groups:
          description: |

            :::x-description-i18n:
            eng: |-
              List of corporations and groups that the user belongs to
            jpn: |-
              所属・参加している企業および参加しているグループのリスト
          type: array
          items:
            $ref: '#/components/schemas/V2GetMyProfileGroups'
        corporation:
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation information that the user belongs to
            jpn: |-
              所属する企業の情報
          allOf:
            - $ref: '#/components/schemas/V2GetMyProfileCorporation'
      required:
        - id
        - type
        - name
        - family_name
        - given_name
        - phonetic_family_name
        - phonetic_given_name
        - email
        - emails
        - picture
        - phone_number
        - phone_number_2
        - language
        - groups
        - corporation
    V2GetMeCorporationAddress:
      type: object
      properties:
        country:
          type: string
          example: JP
          description: |

            :::x-description-i18n:
            eng: |-
              Nation code
            jpn: |-
              国名コード
          nullable: true
          format: ISO 3166-1 alpha-2
        zip_code:
          type: string
          example: 105-0022
          description: |

            :::x-description-i18n:
            eng: |-
              Zip code
            jpn: |-
              郵便番号
          nullable: true
          pattern: .{1,255}
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Prefecture
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          nullable: true
          pattern: .{1,255}
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          nullable: true
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address line 1(e.g. Street no.)
            jpn: |-
              住所1（番地など）
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
          pattern: .{1,255}
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address line 2(e.g. Building name)
            jpn: |-
              住所2(ビル名など）
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          nullable: true
          pattern: .{1,255}
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2GetMeCorporation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Company ID(Group ID)
            jpn: |-
              企業のID(グループID)
        parent_group_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Parent Group ID
            jpn: |-
              親グループID
          nullable: true
        name:
          type: string
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
          description: |

            :::x-description-i18n:
            eng: |-
              Company name
            jpn: |-
              企業名
        domain:
          type: string
          example: earthbrain.co.jp
          description: |

            :::x-description-i18n:
            eng: |-
              Domain
            jpn: |-
              ドメイン
          nullable: true
        domain_limitation:
          type: boolean
          example: true
          description: |

            :::x-description-i18n:
            eng: |-
              Domain check flag

              If set to ```true```, the member's e-mail address will restrict to the company's domain name
            jpn: |-
              ドメイン制限フラグ

              ```true```の場合、メンバーのメールアドレスを企業に設定されたドメインのみに制限する
        phone_number:
          type: string
          example: 03-1234-5678
          description: |

            :::x-description-i18n:
            eng: |-
              Company's phone number 1
            jpn: |-
              企業の電話番号1
          nullable: true
          pattern: .{1,255}
        phone_number_2:
          type: string
          example: 03-9876-5432
          description: |

            :::x-description-i18n:
            eng: |-
              Company's phone number 2
            jpn: |-
              企業の電話番号2
          nullable: true
          pattern: .{1,255}
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              企業の住所
          allOf:
            - $ref: '#/components/schemas/V2GetMeCorporationAddress'
        tags:
          example:
            - tag1
            - tag2
          description: |

            :::x-description-i18n:
            eng: |-
              Tags
            jpn: |-
              タグ
          type: array
          items:
            type: string
        custom_fields:
          type: object
          example:
            labelA: valueA
            labelB: valueB
          description: |

            :::x-description-i18n:
            eng: |-
              Custom attribute. Freely key and values available(Length of key and value must be shorter than 256 characters)
            jpn: |-
              自由記述項目。任意のkey、valueを設定可能（key、valueともに256文字未満）
      required:
        - id
        - parent_group_id
        - name
        - domain
        - domain_limitation
        - phone_number
        - phone_number_2
        - address
    V2GetMeCorporationFileSizeEntity:
      type: object
      properties:
        corporation_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Target corporation_id
            jpn: |-
              対象のcorporation_id
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name of corporation involved
            jpn: |-
              対処企業名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
        total_file_size:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              Total file size
            jpn: |-
              合計ファイルサイズ
          example: 123456789
          format: Bytes
      required:
        - corporation_id
        - name
        - total_file_size
    V2GetMyAuthenticationPolicy:
      type: object
      properties:
        two_factor_authentication:
          type: string
          enum:
            - always
            - risk_based
            - disabled
          description: 二要素認証設定
        login_notification:
          type: string
          enum:
            - enabled
            - disabled
          description: ログイン通知設定
      required:
        - two_factor_authentication
        - login_notification
    V2GetMeTermsAgreementsTermsAgreements:
      type: object
      properties:
        version:
          type: string
          description: 利用規約バージョン
          example: 20220608#b2b
        country:
          type: string
          format: ^[A-Z]{2}$
          description: ユーザーの契約国
          example: JP
        service:
          type: string
          description: サービス
          example: landlog
      required:
        - version
        - country
        - service
    V2GetMeTermsAgreements:
      type: object
      properties:
        total:
          type: number
          description: 該当するデータの全件数
          example: 1
        terms_agreements:
          description: 同意済みの利用規約情報
          type: array
          items:
            $ref: '#/components/schemas/V2GetMeTermsAgreementsTermsAgreements'
      required:
        - total
        - terms_agreements
    V2GetLicensesMeOwner:
      type: object
      properties:
        type:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription owner type
              * ```Corporation```: Corporation
              * ```User```: User
            jpn: |-
              サブスクリプションのオーナーの種別
              * ```Corporation```: 企業
              * ```User```: ユーザー
          enum:
            - Corporation
            - User
          example: Corporation
        id:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription owner ID
            jpn: |-
              サブスクリプションのオーナーのID
          format: uuid
          example: c8a17724-caeb-4233-b8d8-ba38690a113d
      required:
        - type
        - id
    V2GetLicensesMeItems:
      type: object
      properties:
        item_id:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Product ID
            jpn: |-
              商材ID
          example: storage_free_2tb
        plan_id:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Plan ID
            jpn: |-
              プランID
          example: '1'
        client_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      required:
        - item_id
        - plan_id
        - client_id
    V2GetLicensesMeCustomFields:
      type: object
      properties: {}
    V2GetLicensesMeSubscription:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプションID
          format: uuid
          example: a7187f21-fef5-48c4-864d-db6771ba6ba3
        owner:
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription owner information
            jpn: |-
              サブスクリプションのオーナー情報
          allOf:
            - $ref: '#/components/schemas/V2GetLicensesMeOwner'
        items:
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription item information
            jpn: |-
              サブスクリプションアイテム情報
          type: array
          items:
            $ref: '#/components/schemas/V2GetLicensesMeItems'
        provider_id:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Provider ID
            jpn: |-
              プロバイダーID
          format: uuid
          example: cf221ab7-9272-48e9-b8ce-433397744185
        quantity:
          type: integer
          minLength: 1
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              quantity
            jpn: |-
              数量
          example: 1
        unit:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              unit
            jpn: |-
              単位
          example: '1'
        license_type:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              License type
              * ```Corporation```: Corporation
              * ```User```: User
              * ```Device```: Device
              * ```Assignless```: The license does not need to be assigned
            jpn: |-
              ライセンス種別
              * ```Corporation```: 企業
              * ```User```: ユーザー
              * ```Device```: デバイス
              * ```Assignless```: ライセンス割当て不要
          enum:
            - Corporation
            - User
            - Device
            - Assignless
          example: User
        status:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Status
              * ```active```: Valid
              * ```inactive```: Invalid
              * ```suspend```: Suspended
            jpn: |-
              ステータス
              * ```active```: 有効
              * ```inactive```: 無効
              * ```suspend```: 一時停止
          enum:
            - active
            - inactive
            - suspend
          example: active
        purchased_at:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Purchase date and time
            jpn: |-
              購入日時
          format: ISO8601
          example: '2017-01-01T00:00:00Z'
        issued_at:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Start date and time
            jpn: |-
              開始日時
          format: ISO8601
          example: '2017-01-01T00:00:00Z'
        expires_at:
          type: string
          minLength: 1
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Expiration date and time
            jpn: |-
              失効日時
          format: ISO8601
          example: '2017-01-01T00:00:00Z'
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
              Free description item
              * Any key and value can be set (both key and value 255 characters or less)
            jpn: |-
              自由記述項目
              * 任意のkey、valueを設定可能（key、valueともに255文字以下）
          example:
            - xxxxx1: valueA
              xxxxx2: valueX
            - xxxxx1: valueB
              xxxxx2: valueY
          type: array
          items:
            $ref: '#/components/schemas/V2GetLicensesMeCustomFields'
      required:
        - id
        - owner
        - items
        - provider_id
        - quantity
        - unit
        - license_type
        - status
        - purchased_at
        - issued_at
        - expires_at
        - custom_fields
    V2GetLicensesMeLicense:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License ID (null for licenses that do not require allocation)
            jpn: |-
              ライセンスID (割当て不要なライセンスの場合は null)
          format: uuid
          example: 08d437e1-f8b9-48a1-bdfb-adba48a1960b
        issued_at:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Start date and time (9999-12-01T00:00:00Z for licenses that do not require allocation)
            jpn: |-
              開始日時 (割当て不要なライセンスの場合は 9999-12-01T00:00:00Z)
          format: ISO8601
          example: '2017-01-01T00:00:00Z'
        expires_at:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Expiration date and time (9999-12-01T00:00:00Z for licenses that do not require allocation)
            jpn: |-
              失効日時 (割当て不要なライセンスの場合は 9999-12-01T00:00:00Z)
          format: ISO8601
          example: '2018-01-01T00:00:00Z'
        subscription:
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription information
            jpn: |-
              サブスクリプション情報
          allOf:
            - $ref: '#/components/schemas/V2GetLicensesMeSubscription'
      required:
        - id
        - issued_at
        - expires_at
        - subscription
    V2GetLicensesMe:
      type: object
      properties:
        total:
          type: integer
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of applicable data
            jpn: |-
              該当するデータの全件数
          example: 1
        licenses:
          description: |

            :::x-description-i18n:
            eng: |-
              License information owned by the user
            jpn: |-
              ユーザーの所有するライセンス情報
          type: array
          items:
            $ref: '#/components/schemas/V2GetLicensesMeLicense'
      required:
        - total
        - licenses
    V2GetLicensesMeAllOwner:
      type: object
      properties:
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Owner type of subscription
              * ```Corporation```: Corporation
              * ```User```: User
            jpn: |-
              サブスクリプションのオーナーの種別
              * ```Corporation```: 企業
              * ```User```: ユーザー
          enum:
            - Corporation
            - User
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Owner ID of subscription
            jpn: |-
              サブスクリプションのオーナーのID
          format: uuid
      required:
        - type
        - id
    V2GetLicensesMeAllItems:
      type: object
      properties:
        item_id:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Product ID
            jpn: |-
              商材ID
          example: storage_1
        plan_id:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Service plan ID
            jpn: |-
              プランID
          example: '1'
        client_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID
          example: null
          nullable: true
      required:
        - item_id
        - plan_id
        - client_id
    V2GetLicensesMeAllCustomFields:
      type: object
      properties: {}
    V2GetLicensesMeAllSubscription:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプションID
          format: uuid
        owner:
          description: |

            :::x-description-i18n:
            eng: |-
              Owner information of subscription
            jpn: |-
              サブスクリプションのオーナー情報
          allOf:
            - $ref: '#/components/schemas/V2GetLicensesMeAllOwner'
        items:
          description: |

            :::x-description-i18n:
            eng: |-
              Item information of subscription
            jpn: |-
              サブスクリプションアイテム情報
          type: array
          items:
            $ref: '#/components/schemas/V2GetLicensesMeAllItems'
        provider_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription provider ID
            jpn: |-
              プロバイダーID
          format: uuid
          nullable: true
        purchased_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription purchase date and time
            jpn: |-
              購入日時
          example: '2017-01-01T00:00:00Z'
          format: ISO8601
        issued_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription issuance date and time
            jpn: |-
              開始日時
          example: '2017-01-01T00:00:00Z'
          format: ISO8601
        expires_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription expiration date and time
            jpn: |-
              失効日時
          example: '2017-01-01T00:00:00Z'
          format: ISO8601
          nullable: true
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
                Custom fields. Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）
          example:
            - xxxxx1: valueA
              xxxxx2: valueX
            - xxxxx1: valueB
              xxxxx2: valueY
          type: array
          items:
            $ref: '#/components/schemas/V2GetLicensesMeAllCustomFields'
      required:
        - id
        - owner
        - items
        - provider_id
        - purchased_at
        - issued_at
        - expires_at
    V2GetLicensesMeAllLicense:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License ID. ```null``` is returned if the license does not need to be assigned
            jpn: |-
              ライセンスID (割当て不要なライセンスの場合は ```null``` )。
          format: uuid
        issued_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License issuance date and time. ```9999-12-01T00:00:00Z``` is returned if the license does not need to be assigned
            jpn: |-
              開始日時、割当て不要なライセンスの場合は ```9999-12-01T00:00:00Z```
          example: '2017-01-01T00:00:00Z'
          format: ISO8601
        expires_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License expiration date and time. ```9999-12-01T00:00:00Z``` is returned if the license does not need to be assigned
            jpn: |-
              失効日時、割当て不要なライセンスの場合は ```9999-12-01T00:00:00Z```
          example: '2018-01-01T00:00:00Z'
        subscription:
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription information
            jpn: |-
              サブスクリプション情報
          allOf:
            - $ref: '#/components/schemas/V2GetLicensesMeAllSubscription'
      required:
        - id
        - issued_at
        - expires_at
        - subscription
    V2GetLicensesMeAll:
      type: object
      properties:
        total:
          type: integer
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of items which match filters. 0 or more
            jpn: |-
              該当するデータの全件数。0以上
          example: 1
        licenses:
          description: |

            :::x-description-i18n:
            eng: |-
              List of licenses belonging to a user.
            jpn: |-
              ユーザーの所有するライセンス情報。
          type: array
          items:
            $ref: '#/components/schemas/V2GetLicensesMeAllLicense'
      required:
        - total
        - licenses
    V2GetLicensesLicenseSubject:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Identifier for license assignment
            jpn: |-
              ライセンス割当対象の識別子
          nullable: true
          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
        type:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              License type
            jpn: |-
              ライセンス種別
          example: User
      required:
        - id
        - type
    V2GetLicensesLicense:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License ID (null for licenses that do not require allocation)
            jpn: |-
              ライセンスID (割当て不要なライセンスの場合は null)
          format: uuid
        subscription_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプションID
        subject:
          description: |

            :::x-description-i18n:
            eng: |-
              Subject
            jpn: |-
              主体
          allOf:
            - $ref: '#/components/schemas/V2GetLicensesLicenseSubject'
        issued_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Start date and time
            jpn: |-
              開始日時
          example: '2017-01-01T00:00:00Z'
        expires_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Expiration date and time
            jpn: |-
              失効日時
          example: '2017-08-31T23:59:59Z'
      required:
        - id
        - subscription_id
        - subject
        - issued_at
        - expires_at
    V2GetLicenses:
      type: object
      properties:
        total:
          type: integer
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of applicable data
            jpn: |-
              該当するデータの全件数
          example: 1
        licenses:
          description: |

            :::x-description-i18n:
            eng: |-
              List of applicable licenses
            jpn: |-
              該当するライセンスのリスト
          type: array
          items:
            $ref: '#/components/schemas/V2GetLicensesLicense'
      required:
        - total
        - licenses
    V2GetResourceOwnersProfile:
      type: object
      properties:
        display_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Resource Owner's public information display name
            jpn: |-
              リソースオーナーの公開情報の表示名
          example: EarthBrain
        website:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Resource Owner's public website URL
              * Must start with ```http://``` or ```https://```
            jpn: |-
              リソースオーナーの公開情報のWebサイトURL
              * ```http://```または```https://```で始まる必要がある

          example: https://www.earthbrain.com
          format: uri
          nullable: true
      required:
        - display_name
        - website
    V2GetResourceOwnersResourceOwner:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Resource owner ID
            jpn: |-
              リソースオーナーのID
          format: uuid
        group_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the group that the resource owner points to
            jpn: |-
              リソースオーナーの指し示すグループのID
          format: uuid
        user_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the user that the resource owner points to
            jpn: |-
              リソースオーナーの指し示すユーザーのID
          format: uuid
          nullable: true
        author_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the user who created the resource owner
            jpn: |-
              リソースオーナーの作成者のユーザーのID
          format: uuid
          nullable: true
        profile:
          description: |

            :::x-description-i18n:
            eng: |-
              Resource Owner profile
            jpn: |-
              リソースオーナーのプロフィール
          allOf:
            - $ref: '#/components/schemas/V2GetResourceOwnersProfile'
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Resource Owner Type
              * ```Group```: Resource Owner type is Group
              * ```Corporation```: Resource Owner type is Corporation
              * ```User```: Resource Owner type is User
              * ```Site```: Resource Owner type is Site
            jpn: |-
              リソースオーナーの種別
              * ```Group```: リソースオーナーの種別はグループ
              * ```Corporation```: リソースオーナーの種別は企業
              * ```User```: リソースオーナーの種別はユーザー
              * ```Site```: リソースオーナーの種別は現場
          enum:
            - Group
            - Corporation
            - User
            - Site
      required:
        - id
        - group_id
        - user_id
        - author_id
        - profile
        - type
    V2GetResourceOwners:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of applicable data (0 or more)
            jpn: |-
              該当するデータの全件数 (0以上)
          example: 1
        resource_owners:
          description: |

            :::x-description-i18n:
            eng: |-
              List of resource owners (0 or more)
            jpn: |-
              リソースオーナーの一覧 (0以上)
          type: array
          items:
            $ref: '#/components/schemas/V2GetResourceOwnersResourceOwner'
      required:
        - total
        - resource_owners
    V2GetResourceOwnersSearchProfile:
      type: object
      properties:
        display_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Resource Owner's public information display name
            jpn: |-
              リソースオーナーの公開情報の表示名
          example: EarthBrain
        website:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Resource Owner's public website URL
              * Must start with ```http://``` or ```https://```
            jpn: |-
              リソースオーナーの公開情報のWebサイトURL
              * ```http://```または```https://```で始まる必要がある

          example: https://www.earthbrain.com
          format: uri
          nullable: true
      required:
        - display_name
        - website
    V2GetResourceOwnersSearchResourceOwner:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Resource Owner ID
            jpn: |-
              リソースオーナーのID
          format: uuid
        group_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the group that the resource owner points to
            jpn: |-
              リソースオーナーの指し示すグループのID
          format: uuid
        user_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the user that the resource owner points to
            jpn: |-
              リソースオーナーの指し示すユーザーのID
          format: uuid
          nullable: true
        author_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the user who created the resource owner
            jpn: |-
              リソースオーナーの作成者のユーザーのID
          format: uuid
          nullable: true
        profile:
          description: |

            :::x-description-i18n:
            eng: |-
              Resource Owner profile
            jpn: |-
              リソースオーナーのプロフィール
          allOf:
            - $ref: '#/components/schemas/V2GetResourceOwnersSearchProfile'
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Resource Owner Type
              * ```Group```: Resource Owner type is Group
              * ```Corporation```: Resource Owner type is Corporation
              * ```User```: Resource Owner type is User
              * ```Site```: Resource Owner type is Site
            jpn: |-
              リソースオーナーの種別
              * ```Group```: リソースオーナーの種別はグループ
              * ```Corporation```: リソースオーナーの種別は企業
              * ```User```: リソースオーナーの種別はユーザー
              * ```Site```: リソースオーナーの種別は現場
          enum:
            - Group
            - Corporation
            - User
            - Site
          nullable: true
      required:
        - id
        - group_id
        - user_id
        - author_id
        - profile
        - type
    V2GetResourceOwnersSearch:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of applicable data, 0 or more
            jpn: |-
              該当するデータの全件数、0以上
          example: 1
        resource_owners:
          description: |

            :::x-description-i18n:
            eng: |-
              List of resource owners, 0 or more
            jpn: |-
              リソースオーナーの一覧、0以上
          type: array
          items:
            $ref: '#/components/schemas/V2GetResourceOwnersSearchResourceOwner'
      required:
        - total
        - resource_owners
    V2GetResourceOwnersResourceOwnerIdProfile:
      type: object
      properties:
        display_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Resource Owner's public information display name
            jpn: |-
              リソースオーナーの公開情報の表示名
          example: EarthBrain
        website:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Resource Owner's public website URL
              * Must start with ```http://``` or ```https://```
            jpn: |-
              リソースオーナーの公開情報のWebサイトURL
              * ```http://```または```https://```で始まる必要がある

          example: https://www.earthbrain.com
          format: uri
          nullable: true
      required:
        - display_name
        - website
    V2GetResourceOwnersResourceOwnerId:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Resource Owner ID
            jpn: |-
              リソースオーナーのID
          format: uuid
        group_id:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the group that the resource owner points to
            jpn: |-
              リソースオーナーの指し示すグループのID
          format: uuid
        user_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the user that the resource owner points to
            jpn: |-
              リソースオーナーの指し示すユーザーのID
          format: uuid
          nullable: true
        author_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the user who created the resource owner
            jpn: |-
              リソースオーナーの作成者のユーザーのID
          format: uuid
          nullable: true
        profile:
          description: |

            :::x-description-i18n:
            eng: |-
              Resource Owner profile
            jpn: |-
              リソースオーナーのプロフィール
          example:
            display_name: Display Name
            website: https://example.com
          allOf:
            - $ref: '#/components/schemas/V2GetResourceOwnersResourceOwnerIdProfile'
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Resource Owner Type
              * ```Group```: Resource Owner type is Group
              * ```Corporation```: Resource Owner type is Corporation
              * ```User```: Resource Owner type is User
              * ```Site```: Resource Owner type is Site
            jpn: |-
              リソースオーナーの種別
              * ```Group```: リソースオーナーの種別はグループ
              * ```Corporation```: リソースオーナーの種別は企業
              * ```User```: リソースオーナーの種別はユーザー
              * ```Site```: リソースオーナーの種別は現場
          enum:
            - Group
            - Corporation
            - User
            - Site
    V2PostDevicesDisplayInfoDto:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name
            jpn: |-
              名前
          example: SensorTag
          pattern: .{1,100}
          minLength: 1
          maxLength: 100
        description:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Description
            jpn: |-
              名前
          example: SensorTag
          pattern: .{1,100}
          minLength: 0
          maxLength: 1000
          nullable: true
        language:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Language tag. If a combination of ```language```, ```script```, and ```region``` is not IETF language tag (BCP47) compliant, an error will be returned
              * ```ja```/ ```ja-JP```: Japanese
              * ```en-US```: English
              * ```de-DE```: German
              * ```fr-FR```: French
              * ```es-ES```: Spanish
              * ```cs-CZ```: Czech
            jpn: |-
              言語 ```language```、```script```、```region```の組み合わせが IETF 言語タグ (BCP47) に準拠していない場合、エラーが返されます
              * ```ja```/ ```ja-JP```: 日本語
              * ```en-US```: 英語
              * ```de-DE```: ドイツ語
              * ```fr-FR```: フランス語
              * ```es-ES```: スペイン語
              * ```cs-CZ```: チェコ語
          example: en
          format: IETF Language Tag (BCP47)
          enum:
            - ja
            - ja-JP
            - en-US
            - cs-CZ
            - de-DE
            - fr-FR
            - es-ES
          minLength: 2
          maxLength: 5
        script:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Script tag. If a combination of ```language```, ```script```, and ```region``` is not IETF language tag (BCP47) compliant, an error will be returned
            jpn: |-
              スクリプトタグ、```language```、```script```、```region```の組み合わせが IETF 言語タグ (BCP47) に準拠していない場合、エラーが返されます
          example: Latn
          format: IETF Language Tag (BCP47)
          minLength: 0
          maxLength: 255
        region:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Region tag. If a combination of ```language```, ```script```, and ```region``` is not IETF language tag (BCP47) compliant, an error will be returned
            jpn: |-
              地域タグ、```language```、```script```、```region```の組み合わせが IETF 言語タグ (BCP47) に準拠していない場合、エラーが返されます
          example: US
          format: IETF Language Tag (BCP47)
          minLength: 1
          maxLength: 2
        is_default:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Default language flag. ```true```: Set as default language. Only one default language can be set
            jpn: |-
              デフォルト言語フラグ、```true```: デフォルトの言語として設定します、設定できるデフォルト言語は 1 つだけです
      required:
        - name
        - language
        - is_default
    V2PostDevicesBodyDto:
      type: object
      properties:
        resource_owner_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Resource owner ID
            jpn: |-
              リソースオーナーID
          format: uuid
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name. If you use ```name``` and ```description```, you cannot use ```display_info```. If you use ```display_info```, you cannot use ```name``` and ```description```. When specifying both or omitting both, an error will be returned
            jpn: |-
              名前、```name```と```desciption```を使用する場合、```display_info``` は使用できません。 ```display_info``` を使用する場合、```name```とd```esciption```は使用できません。両方を指定した場合、または両方を省略した場合はエラーとなります
          example: SensorTag
          pattern: .{1,100}
          minLength: 1
          maxLength: 100
        id_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Identification number
            jpn: |-
              識別番号
          example: SENSOR_TAG
          pattern: .{0,100}
          minLength: 0
          maxLength: 100
          nullable: true
        description:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Description
            jpn: |-
              説明
          example: SensorTag
          pattern: .{0,1000}
          minLength: 0
          maxLength: 100
          nullable: true
        client_id_list:
          description: |-

            :::x-description-i18n:
            eng: |-
              List of client IDs. When a client for device context is required (when setting ```is_managed``` to ```managed``` or ```full_managed```), specify IDs of all clients such as a corresponding agent that run on the device
              If multiple clients are required, register all the clients
            jpn: |-
              クライアントIDリスト。デバイスコンテキストのクライアントが必要な場合(is_managedをmanagedに設定する場合)、対応するエージェント等、デバイス上で動作させるクライアントのIDを指定する。複数ある場合、すべて登録すること

          example:
            - 374e215a-5707-4b00-9eaf-fd3bcb42fae8
          type: array
          items:
            type: string
        is_managed:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Classification of how to manage the applicable device

              Out of scope: ```unmanaged```
                * Select this if you only want to include information in the applicable device information

              Partially control: ```managed```
                * Select this if you want to include information on the relevant device and it will be managed by a system (app) other than this service

            jpn: |-
              該当デバイスの管理方法についての区分

              管理外：```unmanaged```
                * 該当デバイス情報に情報を持たせるのみの場合、こちらを選択

              一部管理：```managed```
                * 該当デバイス情報に情報を持たせ、かつ当サービス以外システム（アプリ）にて管理される場合、こちらを選択
          enum:
            - unmanaged
            - managed
          default: unmanaged
        rsa_publickey:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Public key. Required if the client in the device context needs it (when setting ```is_managed``` to ```managed```). RSA public key in PEM format
            jpn: |-
              公開鍵。デバイスコンテキストのクライアントが必要な場合(```is_managed```を```managed```に設定する場合)、必須。RSAの公開鍵をPEM形式で設定する
          example: ''
          format: PEM
        display_info:
          description: |

            :::x-description-i18n:
            eng: |-
              Name and description in each language. Must have one display_info with default flag on. From 1 through 100. If you use ```name``` and ```description```, you cannot use ```display_info```. If you use ```display_info```, you cannot use ```name``` and ```description```. When specifying both or omitting both, an error will be returned
            jpn: |-
              表示情報、```name```と```desciption```を使用する場合、```display_info``` は使用できません。 ```display_info``` を使用する場合、```name```と```desciption```は使用できません。両方を指定した場合、または両方を省略した場合はエラーとなります
          type: array
          items:
            $ref: '#/components/schemas/V2PostDevicesDisplayInfoDto'
      required:
        - resource_owner_id
    V2PostDevicesDisplayInfo:
      type: object
      properties:
        name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Display name
            jpn: |-
              ディスプレイ名

        description:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Description
            jpn: |-
              説明
          nullable: true
        language:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Language
            jpn: |-
              言語
          nullable: true
        script:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Script tag
            jpn: |-
              スクリプトタグ
          nullable: true
        region:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Region
            jpn: |-
              地域
          nullable: true
        is_default:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Default value
            jpn: |-
              デフォルト値
      required:
        - name
        - language
        - is_default
    V2PostDevicesApplicationClient:
      type: object
      properties:
        client_id:
          type: string
          format: uuid
          description: |-

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID

      required:
        - client_id
    V2PostDevicesDeviceClient:
      type: object
      properties:
        client_id:
          type: string
          format: uuid
          description: |-

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID

        client_secret:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Client secret
            jpn: |-
              クライアントシークレット

          nullable: true
      required:
        - client_id
        - client_secret
    V2PostDevicesClientList:
      type: object
      properties:
        application_client:
          description: |-

            :::x-description-i18n:
            eng: |-
              Application client
            jpn: |-
              アプリケーションクライアント

          allOf:
            - $ref: '#/components/schemas/V2PostDevicesApplicationClient'
        device_client:
          description: |-

            :::x-description-i18n:
            eng: |-
              Device client
            jpn: |-
              デバイスクライアント(OAuth Clientの登録情報)

          allOf:
            - $ref: '#/components/schemas/V2PostDevicesDeviceClient'
      required:
        - application_client
        - device_client
    V2PostDevicesDevice:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Device ID
            jpn: |-
              デバイスID
        resource_owner_id:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Resource Owner ID
            jpn: |-
              リソースオーナーID
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name
            jpn: |-
              名前
        id_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID number
            jpn: |-
              識別番号
          nullable: true
        description:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Description
            jpn: |-
              説明
          nullable: true
        display_info:
          description: |

            :::x-description-i18n:
            eng: |-
              Display Information
            jpn: |-
              表示情報
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/V2PostDevicesDisplayInfo'
        client_list:
          description: |

            :::x-description-i18n:
            eng: |-
              Client List
            jpn: |-
              クライアントリスト
          type: array
          items:
            $ref: '#/components/schemas/V2PostDevicesClientList'
        is_managed:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Classification of how to manage the applicable device

              unmanaged: ```unmanaged```
                * Select this if you only want to include information in the applicable device information

              Partially managed: ```managed```
                * Select this if you want to include information on the relevant device and it will be managed by a system (app) other than this service

            jpn: |-
              該当デバイスの管理方法についての区分

              管理外：```unmanaged```
                * 該当デバイス情報に情報を持たせるのみの場合、こちらを選択

              一部管理：```managed```
                * 該当デバイス情報に情報を持たせ、かつ当サービス以外システム（アプリ）にて管理される場合、こちらを選択
          enum:
            - unmanaged
            - managed
        monitoring_status:
          type: string
          nullable: true
        rsa_publickey:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Set the public key and RSA public key in PEM format
            jpn: |-
              公開鍵、RSAの公開鍵をPEM形式で設定する

          nullable: true
        created_at:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Creation. Unix time in nanoseconds
            jpn: |-
              作成時間、ナノ秒

        updated_at:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Update time. Unix time in nanoseconds
            jpn: |-
              最終更新時間、ナノ秒

      required:
        - id
        - resource_owner_id
        - name
        - id_number
        - client_list
        - is_managed
        - monitoring_status
        - created_at
        - updated_at
    V2PostDevices:
      type: object
      properties:
        device:
          description: |

            :::x-description-i18n:
            eng: |-
              Device
            jpn: |-
              デバイス
          example:
            id: 5a687ac5a2b7c60100000001
            resource_owner_id: 374e215a-5707-4b00-9eaf-fd3bcb42fae8
            name: SensorTag
            id_number: SENSOR_TAG
            description: SensorTag
            display_info:
              - name: SensorTag
                description: SensorTag
                language: en
                script: Latn
                region: US
                is_default: true
            client_list:
              - application_client:
                  client_id: 7ce7399b-3fb5-4e4c-8f0e-75e9d5b256e4
                device_client:
                  client_id: 7ce7399b-3fb5-4e4c-8f0e-75e9d5b256e4
                  client_secret: ''
            is_managed: unmanaged
            rsa_publickey: ''
            custom_inventory: []
            created_at: '1518165596566320259'
            updated_at: '1518165596566320259'
          allOf:
            - $ref: '#/components/schemas/V2PostDevicesDevice'
      required:
        - device
    V2GetDevicesDeviceIdApplicationClient:
      type: object
      properties:
        client_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID
      required:
        - client_id
    V2GetDevicesDeviceIdDeviceClient:
      type: object
      properties:
        display_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Display_name
            jpn: |-
              表示名
          example: EB
        client_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID
        client_secret:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client secret
            jpn: |-
              クライアントシークレット
          example: Secret
          nullable: true
        active:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Active flag
            jpn: |-
              activeフラグ
          example: 'true'
        redirect_uris:
          description: |

            :::x-description-i18n:
            eng: |-
              Redirect_uris
            jpn: |-
              リダイレクト URI
          example:
            - https://earthbrain.com/redirectUris
          nullable: true
          type: array
          items:
            type: string
        js_origins:
          description: |

            :::x-description-i18n:
            eng: |-
              js_origins
            jpn: |-
              jsの起源
          example:
            - https://earthbrain.com/jsOrigins
          nullable: true
          type: array
          items:
            type: string
        application_types:
          description: |

            :::x-description-i18n:
            eng: |-
              Application_types
            jpn: |-
              アプリケーションの種類
          example:
            - device
          type: array
          items:
            type: string
        scope:
          description: |

            :::x-description-i18n:
            eng: |-
              Scope
            jpn: |-
              範囲
          example:
            - messaging.publish
          type: array
          items:
            type: string
        developer_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Developer_id
            jpn: |-
              開発者ID
          example: b16d5375-f361-4760-8d0b-ef0b205cb79c
        website:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Website
            jpn: |-
              Webサイト
          example: https://earthbrain.com/
          nullable: true
        tos_url:
          type: string
          description: tos_url
          example: https://earthbrain.com/tosUrl
          nullable: true
        policy_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Policy_url
            jpn: |-
              ポリシーの URL
          example: https://earthbrain.com/policyUrl
          nullable: true
        icon_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Icon_url
            jpn: |-
              アイコンのURL
          example: ''
        pkey_fingerprint:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Pkey_fingerprint
            jpn: |-
              主キーの指紋
          example: 93:2a:34:d2:0e:4b:9b:9c:16:5e:78:bb:97:ac:2e:3e
          nullable: true
        notification_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Notification_url
            jpn: |-
              通知URL
          example: https://earthbrain.com/notificationUrl
          nullable: true
      required:
        - display_name
        - client_id
        - client_secret
        - active
        - redirect_uris
        - js_origins
        - application_types
        - scope
        - developer_id
        - website
        - tos_url
        - policy_url
        - icon_url
        - pkey_fingerprint
        - notification_url
    V2GetDevicesDeviceIdClientList:
      type: object
      properties:
        application_client:
          description: |

            :::x-description-i18n:
            eng: |-
              Application client
            jpn: |-
              アプリケーションクライアント
          allOf:
            - $ref: '#/components/schemas/V2GetDevicesDeviceIdApplicationClient'
        device_client:
          description: |

            :::x-description-i18n:
            eng: |-
              Device client (Registered information of OAuth client)
            jpn: |-
              デバイスクライアント(OAuth Clientの登録情報)
          allOf:
            - $ref: '#/components/schemas/V2GetDevicesDeviceIdDeviceClient'
      required:
        - application_client
        - device_client
    V2GetDevicesDeviceIdDevice:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Device ID
            jpn: |-
              デバイスID
          example: 5a687ac5a2b7c60100000001
          pattern: ^[0-9a-v]{20}
        resource_owner_id:
          type: string
          minLength: 1
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Resource owner ID
            jpn: |-
              リソースオーナーID
          example: 374e215a-5707-4b00-9eaf-fd3bcb42fae8
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name
            jpn: |-
              名前
          example: EB Device
          pattern: .{1,100}
        id_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID number
            jpn: |-
              識別番号
          example: '1234567890'
          pattern: .{1,100}
          nullable: true
        description:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Description
            jpn: |-
              説明
          example: SensorTag
          pattern: .{1,100}
        client_list:
          description: |

            :::x-description-i18n:
            eng: |-
              List of clients
            jpn: |-
              クライアントリスト
          type: array
          items:
            $ref: '#/components/schemas/V2GetDevicesDeviceIdClientList'
        is_managed:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Management type
              * Out of scope: ```unmanaged```
                * Select this value just to attach information to the device
              * Partial control: ```managed```
                * Select this value to attach information when the device is managed by a system (app) other than our service
              * Full control: ```full_managed```
                * Select this value to attach information when the device is managed by a system (app) or device agent (structure to perform tasks such as kitting and firmware update)
            jpn: |-
              該当デバイスの管理方法についての区分
              * 管理外: ```unmanaged```
                * 該当デバイス情報に情報を持たせるのみの場合、こちらを選択。
              * 一部管理: ```managed```
                * 該当デバイス情報に情報を持たせ、かつ当サービス以外システム（アプリ）にて管理される場合、こちらを選択。
              * 完全管理: ```full_managed```
                * 該当デバイス情報に情報を持たせ、かつ当サービス以外システム（アプリ）およびデバイスエージェント（キッティング、ファームウェアアップデート等行う機構）にて管理される場合、こちらを選択。
          enum:
            - unmanaged
            - managed
        rsa_publickey:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Public key. Return if defined
            jpn: |-
              公開鍵。定義されている場合は返す
          example: |-
            -----BEGIN PUBLIC KEY-----
            MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQClI5ZfPYxQWp3GEGrcUY+a08ee
            MVOXekc7N5rtvx4Gfko6mC5epylypbRt6bcPizbju1GBICiWVzZLrjg71vLAuzoK
            pJaJ7LJLH7AhhaK68QPpc2YYZRdHJQEA14GR9sSaqfURNNk7zejTUE+Iz7tNByQc
            8D0FWVWy2xe3FF0gTwIDAQAB
            -----END PUBLIC KEY-----
          format: PEM
          nullable: true
        monitoring_status:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Monitoring status
              * ```ok```: Normal
              * ```error```: Error
              * ```offline```: Offline
              * ```null```: Status not found
            jpn: |-
              監視状態
              * ```ok```: 正常
              * ```error```: エラー
              * ```offline```: オフライン
              * ```null```: 監視状態なし
          example: null
        created_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Creation time
            jpn: |-
              作成時間
          example: '1518165596566320259'
        updated_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Update time
            jpn: |-
              最終更新時間
          example: '1518165596566320259'
      required:
        - id
        - resource_owner_id
        - name
        - id_number
        - description
        - client_list
        - is_managed
        - monitoring_status
        - created_at
        - updated_at
    V2GetDevicesDeviceId:
      type: object
      properties:
        device:
          description: |

            :::x-description-i18n:
            eng: |-
              Device
            jpn: |-
              デバイス
          allOf:
            - $ref: '#/components/schemas/V2GetDevicesDeviceIdDevice'
      required:
        - device
    V2GetFileStorageBucketsProfile:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name. Follow naming rules
            jpn: |-
              名前
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
          nullable: true
      required:
        - name
    V2GetFileStorageBucketsUser:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of User
              Format: UUID
            jpn: |-
              ユーザID
              UUID形式
          format: uuid
          nullable: true
        profile:
          $ref: '#/components/schemas/V2GetFileStorageBucketsProfile'
      required:
        - id
    V2GetFileStorageBucketsClient:
      type: object
      properties:
        client_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the client Format: UUID
            jpn: |-
              クライアントID UUID形式
          format: uuid
          nullable: true
        is_device:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Flag for a device
            jpn: |-
              デバイスかどうかのフラグ
        display_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client display name, Returned if ```get_client_info``` is true. Not returned if a name is not found
            jpn: |-
              クライアント表示名, ```get_client_info```がtrueのとき表示 取得できない場合、非表示
          example: File storage app
      required:
        - client_id
        - is_device
    V2GetFileStorageBucketsCreatedBy:
      type: object
      properties:
        user:
          description: |-

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報

          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsUser'
        client:
          description: |-

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報

          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsClient'
      required:
        - client
    V2GetFileStorageBucketsUpdatedBy:
      type: object
      properties:
        user:
          description: |-

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報

          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsUser'
        client:
          description: |-

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報

          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsClient'
      required:
        - client
    V2GetFileStorageBucketsFiles:
      type: object
      properties:
        total_count:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of stored files 0 or more
            jpn: |-
              バケットに含まれるファイルの総数 0以上
          example: '10'
        total_size:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Total size of stored Files
              Format: Bytes 0 or more
            jpn: |-
              バケットに含まれる全ファイルのサイズの総計
              バイト。0以上
          example: '46542'
          format: Bytes
      required:
        - total_count
        - total_size
    V2GetFileStorageBucketsBucket:
      type: object
      properties:
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              ID of Bucket
            jpn: |-
              バケットID

          example: 9m4e2mr0ui3e8a215n4g
        resource_owner_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Resource owner ID
            jpn: |-
              リソースオーナーID

          example: 67e6325a-ca03-11e7-8aaf-337395427972
        created_at:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Creation time Unix time in nanoseconds
            jpn: |-
              作成時間 UNIX時間(ナノ秒)

          example: '1518165596566320259'
        created_by:
          description: |-

            :::x-description-i18n:
            eng: |-
              Information on creation
            jpn: |-
              作成時情報

          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsCreatedBy'
        updated_at:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Update time Unix time in nanoseconds
            jpn: |-
              最終更新時間 UNIX時間(ナノ秒)

          example: '1518165596566320259'
        updated_by:
          description: |-

            :::x-description-i18n:
            eng: |-
              Information at update time
            jpn: |-
              更新時情報

          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsUpdatedBy'
        name:
          type: string
          minLength: 1
          description: |-

            :::x-description-i18n:
            eng: |-
              Name
            jpn: |-
              名前

          example: bucket1
        files:
          description: |-

            :::x-description-i18n:
            eng: |-
              Information of files in the bucket
            jpn: |-
              ファイル情報

          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsFiles'
      required:
        - id
        - resource_owner_id
        - created_at
        - updated_at
        - name
    V2GetFileStorageBuckets:
      type: object
      properties:
        total:
          type: integer
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of items matched, 0 or more
            jpn: |-
              フィルタに引っかかった全件数, 0以上
          example: 1
        buckets:
          description: |-

            :::x-description-i18n:
            eng: |-
              List of Buckets
            jpn: |-
              バケット

          type: array
          items:
            $ref: '#/components/schemas/V2GetFileStorageBucketsBucket'
      required:
        - total
        - buckets
    V2PostFileStorageBucketsBodyDto:
      type: object
      properties:
        resource_owner_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Resource owner ID Format: UUID
            jpn: |-
              リソースオーナーのID UUIDの形式
          format: uuid
          example: 67e6325a-ca03-11e7-8aaf-337395427972
        name:
          type: string
          maxLength: 100
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket name Unique name in the same resource owner. Name that matches the regular expression pattern: A.{1,100}z but does not match (A[.]{1,2}z|/)
            jpn: |-
              バケット名 同一リソースオーナー配下で名前はユニーク。正規表現:A.{1,100}zを満たし、かつ(A[.]{1,2}z|/)を満たさない
          pattern: .{1,100}
          example: bucket1
      required:
        - resource_owner_id
        - name
    V2PostFileStorageBucketsUser:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the user
            jpn: |-
              ユーザID
          format: uuid
      required:
        - id
    V2PostFileStorageBucketsClient:
      type: object
      properties:
        client_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the client
            jpn: |-
              クライアントID
          format: uuid
        is_device:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Flag for a device
            jpn: |-
              デバイスかどうかのフラグ
      required:
        - client_id
        - is_device
    V2PostFileStorageBucketsCreatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: '#/components/schemas/V2PostFileStorageBucketsUser'
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: '#/components/schemas/V2PostFileStorageBucketsClient'
      required:
        - client
    V2PostFileStorageBucketsUpdatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: '#/components/schemas/V2PostFileStorageBucketsUser'
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: '#/components/schemas/V2PostFileStorageBucketsClient'
      required:
        - client
    V2PostFileStorageBucketsFiles:
      type: object
      properties:
        total_count:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of stored Files Fixed to 0
            jpn: |-
              バケットに含まれるファイルの総数 0固定
          example: '0'
        total_size:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Total size of stored Files Format: Bytes Fixed to 0
            jpn: |-
              バケットに含まれる全ファイルのサイズの総計 バイト。0固定
          example: '0'
          format: Bytes
      required:
        - total_count
        - total_size
    V2PostFileStorageBucketsBucket:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket ID
            jpn: |-
              バケットID
          example: 9m4e2mr0ui3e8a215n4g
        resource_owner_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Resource owner ID
            jpn: |-
              リソースオーナーID
          example: 67e6325a-ca03-11e7-8aaf-337395427972
        created_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Creation time Unix time in nanoseconds
            jpn: |-
              作成時間 UNIX時間(ナノ秒)
          example: '1518165596566320259'
        created_by:
          description: |

            :::x-description-i18n:
            eng: |-
              Information on creation
            jpn: |-
              作成時情報
          allOf:
            - $ref: '#/components/schemas/V2PostFileStorageBucketsCreatedBy'
        updated_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Update time Unix time in nanoseconds
            jpn: |-
              最終更新時間 UNIX時間(ナノ秒)
          example: '1518165596566320259'
        updated_by:
          description: |

            :::x-description-i18n:
            eng: |-
              Information at update time
            jpn: |-
              更新時情報
          allOf:
            - $ref: '#/components/schemas/V2PostFileStorageBucketsUpdatedBy'
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name
            jpn: |-
              名前
          example: bucket1
        files:
          description: |

            :::x-description-i18n:
            eng: |-
              Information of files in the bucket
            jpn: |-
              ファイル情報
          allOf:
            - $ref: '#/components/schemas/V2PostFileStorageBucketsFiles'
      required:
        - id
        - resource_owner_id
        - created_at
        - updated_at
        - name
        - files
    V2PostFileStorageBuckets:
      type: object
      properties:
        bucket:
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket
            jpn: |-
              バケット
          allOf:
            - $ref: '#/components/schemas/V2PostFileStorageBucketsBucket'
      required:
        - bucket
    V2PatchFileStorageBucketsBucketIdBodyDto:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket name. The name is unique under the same resource owner. Regular expression: A.{1,100}z and does not satisfy (A[.]{1,2}z|/)
            jpn: |-
              バケット名。同一リソースオーナー配下で名前はユニーク。正規表現:A.{1,100}zを満たし、かつ(A[.]{1,2}z|/)を満たさない
          example: bucket name 1
      required:
        - name
    V2PatchFileStorageBucketsBucketIdUser:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the User
            jpn: |-
              ユーザID
          format: uuid
          nullable: true
      required:
        - id
    V2PatchFileStorageBucketsBucketIdClient:
      type: object
      properties:
        client_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the client
            jpn: |-
              クライアントID
          format: uuid
          nullable: true
        is_device:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Flag for a device
            jpn: |-
              デバイスかどうかのフラグ
      required:
        - client_id
        - is_device
    V2PatchFileStorageBucketsBucketIdCreatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: '#/components/schemas/V2PatchFileStorageBucketsBucketIdUser'
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: '#/components/schemas/V2PatchFileStorageBucketsBucketIdClient'
      required:
        - client
    V2PatchFileStorageBucketsBucketIdUpdatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: '#/components/schemas/V2PatchFileStorageBucketsBucketIdUser'
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: '#/components/schemas/V2PatchFileStorageBucketsBucketIdClient'
      required:
        - client
    V2PatchFileStorageBucketsBucketIdFiles:
      type: object
      properties:
        total_count:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of stored files 0 or more
            jpn: |-
              バケットに含まれるファイルの総数 0以上
          example: '10'
        total_size:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Total size of stored Files. 0 or more
            jpn: |-
              バケットに含まれる全ファイルのサイズの総計 バイト。0以上
          example: '46542'
          format: Bytes
      required:
        - total_count
        - total_size
    V2PatchFileStorageBucketsBucketIdBucket:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of Bucket
            jpn: |-
              バケットID
          example: 9m4e2mr0ui3e8a215n4g
        resource_owner_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Resource owner ID
            jpn: |-
              リソースオーナーID
          example: 67e6325a-ca03-11e7-8aaf-337395427972
        created_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Creation time Unix time in nanoseconds
            jpn: |-
              作成時間 UNIX時間(ナノ秒)
          example: '1518165596566320259'
        created_by:
          description: |

            :::x-description-i18n:
            eng: |-
              Information on creation
            jpn: |-
              作成時情報
          allOf:
            - $ref: '#/components/schemas/V2PatchFileStorageBucketsBucketIdCreatedBy'
        updated_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Update time Unix time in nanoseconds
            jpn: |-
              最終更新時間 UNIX時間(ナノ秒)
          example: '1518165596566320259'
        updated_by:
          description: |-

            :::x-description-i18n:
            eng: |-
              Information at update time
            jpn: |-
              更新時情報

          allOf:
            - $ref: '#/components/schemas/V2PatchFileStorageBucketsBucketIdUpdatedBy'
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name
            jpn: |-
              名前
          example: bucket name 1
        files:
          description: |

            :::x-description-i18n:
            eng: |-
              Information of files in the bucket
            jpn: |-
              ファイル情報
          allOf:
            - $ref: '#/components/schemas/V2PatchFileStorageBucketsBucketIdFiles'
      required:
        - id
        - resource_owner_id
        - created_at
        - updated_at
        - name
        - files
    V2PatchFileStorageBucketsBucketId:
      type: object
      properties:
        bucket:
          description: |-

            :::x-description-i18n:
            eng: |-
              Bucket
            jpn: |-
              バケット

          allOf:
            - $ref: '#/components/schemas/V2PatchFileStorageBucketsBucketIdBucket'
      required:
        - bucket
    V2GetFileStorageBucketsBucketIdProfile:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User name, not returned if a name is not found
            jpn: |-
              ユーザ名, 取得できない場合、非表示
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
          nullable: true
    V2GetFileStorageBucketsBucketIdUser:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the user
            jpn: |-
              ユーザID
          format: uuid
          nullable: true
        profile:
          description: |

            :::x-description-i18n:
            eng: |-
              Returned user information if ```get_user_info``` is ```true```
            jpn: |-
              ユーザ詳細情報, ```get_user_info```が```true```のとき表示
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdProfile'
      required:
        - id
    V2GetFileStorageBucketsBucketIdClient:
      type: object
      properties:
        client_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the client
            jpn: |-
              クライアントID
          format: uuid
          nullable: true
        is_device:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Flag for a device
            jpn: |-
              デバイスかどうかのフラグ
        display_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client display name, returned if get_client_info is true, not returned if a name is not found
            jpn: |-
              クライアント表示名 ```get_client_info```が```true```のとき表示 取得できない場合、非表示
          example: |

            :::x-example-i18n:
            eng: |-
              File storage app
            jpn: |-
              ファイルストレージアプリ
      required:
        - client_id
        - is_device
    V2GetFileStorageBucketsBucketIdCreatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdUser'
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdClient'
      required:
        - client
    V2GetFileStorageBucketsBucketIdUpdatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdUser'
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdClient'
      required:
        - client
    V2GetFileStorageBucketsBucketIdFiles:
      type: object
      properties:
        total_count:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of stored files, 0 or more
            jpn: |-
              バケットに含まれるファイルの総数 0以上
          example: '10'
        total_size:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Total size of stored files, 0 or more
            jpn: |-
              バケットに含まれる全ファイルのサイズの総計, 0以上
          example: '46542'
          format: Bytes
      required:
        - total_count
        - total_size
    V2GetFileStorageBucketsBucketIdBucket:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of bucket
            jpn: |-
              バケットID
          example: 9m4e2mr0ui3e8a215n4g
        resource_owner_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Resource owner ID
            jpn: |-
              リソースオーナーID
          example: 67e6325a-ca03-11e7-8aaf-337395427972
          format: uuid
        created_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Creation time, unix time in nanoseconds
            jpn: |-
              作成時間 UNIX時間(ナノ秒)
          example: '1518165596566320259'
        created_by:
          description: |

            :::x-description-i18n:
            eng: |-
              Information on creation, refer to Response Patterns of created_by and updated_by
            jpn: |-
              成時情報, created_by / updated_by Response Pattern 参照
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdCreatedBy'
        updated_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Update time, unix time in nanoseconds
            jpn: |-
              最終更新時間 UNIX時間(ナノ秒)
          example: '1518165596566320259'
        updated_by:
          description: |

            :::x-description-i18n:
            eng: |-
              Information at update time, refer to Response Patterns of created_by and updated_by
            jpn: |-
              更新時情報, created_by / updated_by Response Pattern 参照
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdUpdatedBy'
        name:
          type: string
          minLength: 1
          description: |

            :::x-description-i18n:
            eng: |-
              Name
            jpn: |-
              名前
          example: bucket1
        files:
          description: |

            :::x-description-i18n:
            eng: |-
              Information of files in the bucket
            jpn: |-
              ファイル情報
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdFiles'
      required:
        - id
        - resource_owner_id
        - created_at
        - created_by
        - updated_at
        - updated_by
        - name
    V2GetFileStorageBucketsBucketId:
      type: object
      properties:
        bucket:
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket
            jpn: |-
              バケット
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdBucket'
      required:
        - bucket
    V2GetFileStorageBucketsBucketIdNodesProfile:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User name

              Not returned if a name is not found
            jpn: |-
              ユーザ名

              取得できない場合、非表示
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
      required:
        - name
    V2GetFileStorageBucketsBucketIdNodesUser:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザID
          example: 9m4e2mr0ui3e8a215n4g
          format: uuid
          nullable: true
        profile:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ詳細情報
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdNodesProfile'
      required:
        - id
    V2GetFileStorageBucketsBucketIdNodesClient:
      type: object
      properties:
        client_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID
          format: uuid
          nullable: true
        is_device:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Flag for a device
            jpn: |-
              デバイスかどうかのフラグ
      required:
        - client_id
        - is_device
    V2GetFileStorageBucketsBucketIdNodesCreatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdNodesUser'
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdNodesClient'
      required:
        - client
    V2GetFileStorageBucketsBucketIdNodesUpdatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdNodesUser'
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdNodesClient'
      required:
        - client
    V2GetFileStorageBucketsBucketIdNodesFile:
      type: object
      properties:
        size:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Size of file

              0 or more
            jpn: |-
              該当Nodeのファイルサイズ

              0以上
          example: '456'
          format: Bytes
          nullable: true
        checksum:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              File checksum

              Checksum value of a specified file on upload
            jpn: |-
              該当Nodeのファイルチェックサム

              アップロード時に指定されたファイルのchecksumの値
          example: Pu4w1pPbKpuu94qe9vG2NQ==
      required:
        - size
        - checksum
    V2GetFileStorageBucketsBucketIdNodesNodeListNodes:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of node
            jpn: |-
              ノードID
          example: 9m4e2mr0ui3e8a215n4g
        parent_node_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Parent node ID

              * ```null```: Root node
            jpn: |-
              親ノードID

              * ```null```: ルートノードを示す
          example: null
          nullable: true
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name

              Follow Naming Rules
            jpn: |-
              名前

              命名規則に従う
          example: node1.txt
        key:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Absolute path of node

              Directory path MUST end with ```/```
            jpn: |-
              ノードの絶対パス

              ディレクトリを示すノードのキーは末尾が```/```になる
          example: /node1.txt
        created_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Creation time

              Unix time in nanoseconds
            jpn: |-
              作成時間

              UNIX時間(ナノ秒)
          example: '1518165596566320259'
        created_by:
          description: |

            :::x-description-i18n:
            eng: |-
              Information at time of creation
            jpn: |-
              作成時情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesCreatedBy
        updated_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Update time

              Unix time in nanoseconds
            jpn: |-
              更新時間

              UNIX時間(ナノ秒)
          example: '1518165596566320259'
        updated_by:
          description: |

            :::x-description-i18n:
            eng: |-
              Information at update time
            jpn: |-
              更新時情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesUpdatedBy
        is_directory:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Directory flag

              * ```true```: This node is directory
              * ```false```: This node is file
            jpn: |-
              ディレクトリかどうかのフラグ

              * ```true```: ディレクトリ
              * ```false```: ファイル
        file:
          description: |

            :::x-description-i18n:
            eng: |-
              Information of file
            jpn: |-
              ファイル情報
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdNodesFile'
      required:
        - id
        - parent_node_id
        - name
        - key
        - created_at
        - updated_at
        - is_directory
    V2GetFileStorageBucketsBucketIdNodes:
      type: object
      properties:
        total:
          type: integer
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of items matched. 0 or more
            jpn: |-
              フィルタに引っかかった全件数 0以上
          example: 1
        nodes:
          description: |

            :::x-description-i18n:
            eng: |-
              List of nodes
            jpn: |-
              ノードのリスト
          type: array
          items:
            $ref: >-
              #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeListNodes
      required:
        - total
        - nodes
    V2GetFileStorageBucketsBucketIdNodesNodeIdProfile:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User name

              Not returned if a name is not found
            jpn: |-
              ユーザ名

              取得できない場合、非表示
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
      required:
        - name
    V2GetFileStorageBucketsBucketIdNodesNodeIdUser:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User ID

              UUID format
            jpn: |-
              ユーザID

              UUID形式
          format: uuid
          nullable: true
        profile:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ詳細情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdProfile
      required:
        - id
    V2GetFileStorageBucketsBucketIdNodesNodeIdClient:
      type: object
      properties:
        client_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID

              UUID format
            jpn: |-
              クライアントID

              UUID形式
          format: uuid
          nullable: true
        is_device:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Flag for a device
            jpn: |-
              デバイスかどうかのフラグ
      required:
        - client_id
        - is_device
    V2GetFileStorageBucketsBucketIdNodesNodeIdCreatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdUser
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdClient
      required:
        - client
    V2GetFileStorageBucketsBucketIdNodesNodeIdUpdatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdUser
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdClient
      required:
        - client
    V2GetFileStorageBucketsBucketIdNodesNodeIdFile:
      type: object
      properties:
        size:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Size of file

              0 or more
            jpn: |-
              該当Nodeのファイルサイズ

              0以上
          example: '456'
          format: Bytes
        checksum:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              File checksum

              Checksum value of a specified file on upload
            jpn: |-
              該当Nodeのファイルチェックサム

              アップロード時に指定されたファイルのchecksumの値
          example: Pu4w1pPbKpuu94qe9vG2NQ==
      required:
        - size
        - checksum
    V2GetFileStorageBucketsBucketIdNodesNodeIdDirectory:
      type: object
      properties:
        size:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Total size of files stored under the node

              0 or more
            jpn: |-
              ノード配下に格納されているファイルのサイズの合計

              0以上
          example: '500'
          format: Bytes
      required:
        - size
    V2GetFileStorageBucketsBucketIdNodesNodeIdNode:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of node
            jpn: |-
              ノードID
          example: 9m4e2mr0ui3e8a215n4g
          pattern: ^[0-9a-v]{20}$
        parent_node_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Parent node ID

              * ```null```: Root node
            jpn: |-
              親ノードID

              * ```null```: ルートノードを示す
          example: null
          pattern: ^[0-9a-v]{20}$
          nullable: true
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name

              Follow Naming Rules
            jpn: |-
              名前

              命名規則に従う
          example: test1.txt
        key:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Absolute path of node

              Directory path MUST end with ```/```
            jpn: |-
              ノードの絶対パス

              ディレクトリを示すノードのキーは末尾が```/```になる
          example: /test1.txt
        created_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Creation time

              Unix time in nanoseconds
            jpn: |-
              作成時間

              UNIX時間(ナノ秒)
          example: '1518165596566320259'
        created_by:
          description: |

            :::x-description-i18n:
            eng: |-
              Information at time of creation
            jpn: |-
              作成時情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdCreatedBy
        updated_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Update time

              Unix time in nanoseconds
            jpn: |-
              更新時間

              UNIX時間(ナノ秒)
          example: '1518165596566320259'
        updated_by:
          description: |

            :::x-description-i18n:
            eng: |-
              Information at update time
            jpn: |-
              更新時情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdUpdatedBy
        is_directory:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Directory flag

              * ```true```: This node is directory
              * ```false```: This node is file
            jpn: |-
              ディレクトリかどうかのフラグ

              * ```true```: ディレクトリ
              * ```false```: ファイル
          example: false
        file:
          description: |

            :::x-description-i18n:
            eng: |-
              Information of file
            jpn: |-
              ファイル情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdFile
        directory:
          description: |

            :::x-description-i18n:
            eng: |-
              Information of directory
            jpn: |-
              ディレクトリ情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdDirectory
      required:
        - id
        - name
        - key
        - created_at
        - updated_at
        - is_directory
    V2GetFileStorageBucketsBucketIdNodesNodeId:
      type: object
      properties:
        node:
          description: |

            :::x-description-i18n:
            eng: |-
              Node
            jpn: |-
              ノード
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdNode
    V2DeleteFileStorageBucketsBucketIdNodesNodeId:
      type: object
      properties: {}
    V2PostFileStorageBucketsBucketIdNodesNodeIdMoveBodyDto:
      type: object
      properties:
        dest_bucket_id:
          type: string
          default: null
          nullable: true
          description: |-

            :::x-description-i18n:
            eng: |-
              ID of destination bucket.
              Specifying ```null``` moves a node within the bucket
            jpn: |-
              移動先のバケットID
              ```null```はPath Parameterのバケット内移動。

          example: bjd878g1gsj1ttpjr6e0
          pattern: ^[0-9a-v]{20}$
        parent_node_id:
          type: string
          default: null
          nullable: true
          description: |-

            :::x-description-i18n:
            eng: |-
              Parent node ID
              ```null```: Root node
            jpn: |-
              親のノードID
              ```null```はルートノード配下。

          example: b85rks2clqg1g6h1fv0g
          pattern: ^[0-9a-v]{20}$
    V2PostFileStorageBucketsBucketIdNodesNodeIdMoveUser:
      type: object
      properties:
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              ID of the user who created the node
            jpn: |-
              作成ユーザID

          example: 5f0b96c6-30b9-42d0-bfa1-5adbe2375c2
          format: uuid
          nullable: true
      required:
        - id
    V2PostFileStorageBucketsBucketIdNodesNodeIdMoveClient:
      type: object
      properties:
        client_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              ID of the client who created the node
            jpn: |-
              作成クライアントID

          example: e94b4476-4822-4c04-93ff-c58c8348c73f
          format: uuid
          nullable: true
        is_device:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Flag for a device
            jpn: |-
              デバイスかどうかのフラグ
          example: true
      required:
        - client_id
        - is_device
    V2PostFileStorageBucketsBucketIdNodesNodeIdMoveCreatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: >-
                #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdMoveUser
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: >-
                #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdMoveClient
      required:
        - client
    V2PostFileStorageBucketsBucketIdNodesNodeIdMoveUpdatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: >-
                #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdMoveUser
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: >-
                #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdMoveClient
      required:
        - client
    V2PostFileStorageBucketsBucketIdNodesNodeIdMoveFile:
      type: object
      properties:
        size:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Size of file, O or more bytes
            jpn: |-
              該当Nodeのファイルサイズ バイト。0以上
          format: Bytes
          example: '456'
        checksum:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              File checksum, Checksum value of a specified file on upload
            jpn: |-
              該当Nodeのファイルチェックサム アップロード時に指定されたファイルのchecksumの値
          example: Pu4w1pPbKpuu94qe9vG2NQ==
      required:
        - size
        - checksum
    V2PostFileStorageBucketsBucketIdNodesNodeIdMoveNode:
      type: object
      properties:
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              ID of node
            jpn: |-
              ノードID

          example: 9m4e2mr0ui3e8a215n4g
          pattern: ^[0-9a-v]{20}$
        created_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Creation time, Unix time in nanoseconds
            jpn: |-
              作成時間 UNIX時間(ナノ秒)
          example: '1518165596566320259'
        created_by:
          description: |

            :::x-description-i18n:
            eng: |-
              Information on creation, Refer to Response Patterns of created_by/updated_by
            jpn: |-
              作成時情報, created_by/updated_by Response Pattern 参照
          allOf:
            - $ref: >-
                #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdMoveCreatedBy
        updated_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Update time, Unix time in nanoseconds
            jpn: |-
              最終更新時間 UNIX時間(ナノ秒)
          example: '1518165596566320259'
        updated_by:
          description: |

            :::x-description-i18n:
            eng: |-
              Information at update time, Refer to Response Patterns of created_by and updated_by
            jpn: |-
              更新時情報, created_by / updated_by Response Pattern 参照
          allOf:
            - $ref: >-
                #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdMoveUpdatedBy
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name, Follow Naming Rules
            jpn: |-
              名前, Naming Rules 参照
          example: test2.txt
        parent_node_id:
          type: string
          nullable: true
          default: null
          description: |-

            :::x-description-i18n:
            eng: |-
              Parent node ID, ```null```: Root node
            jpn: |-
              親ノードID ```null``` の時、ルートノードを示す

          example: b85rks2clqg1g6h1fv0g
          pattern: ^[0-9a-v]{20}$
        key:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Absolute path of node, Directory path MUST end with ``` / ```
            jpn: |-
              絶対パス ディレクトリを示すノードのキーは末尾が``` / ```になる
          example: /test2.txt
        is_directory:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Directory flag
              * ```true```: This node is a directory
              * ```false```: This node is a file
            jpn: |-
              ディレクトリかどうかのフラグ
              * ```true```: ディレクトリ
              * ```false```: ファイル
          example: false
        file:
          description: |

            :::x-description-i18n:
            eng: |-
              Information of file
            jpn: |-
              ファイル情報
          allOf:
            - $ref: >-
                #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdMoveFile
      required:
        - id
        - created_at
        - updated_at
        - name
        - parent_node_id
        - key
        - is_directory
    V2PostFileStorageBucketsBucketIdNodesNodeIdMove:
      type: object
      properties:
        node:
          description: |

            :::x-description-i18n:
            eng: |-
              Node
            jpn: |-
              ノード
          allOf:
            - $ref: >-
                #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdMoveNode
      required:
        - node
    V2PostFileStorageBucketsBucketIdNodesNodeIdCopyBodyDto:
      type: object
      properties:
        dest_bucket_id:
          type: string
          default: null
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket ID of destination
            jpn: |-
              コピー先のバケットID
          example: bjd878g1gsj1ttpjr6e0
          pattern: ^[0-9a-v]{20}$
        parent_node_id:
          type: string
          default: null
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Parent node ID of destination
            jpn: |-
              コピー先の親ノードID
          example: b85rks2clqg1g6h1fv0g
          pattern: ^[0-9a-v]{20}$
        copy_node_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              The new filename must be different from the other filenames in ```dest_bucket_id```
            jpn: |-
              新しいファイル名は、```dest_bucket_id``` 内で他のファイル名と異なるものは必要です
          example: ohlighai2thaithudee9
          minLength: 1
          maxLength: 100
    V2PostFileStorageBucketsBucketIdNodesNodeIdCopyUser:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the user who created the node
            jpn: |-
              作成ユーザID
          format: uuid
          nullable: true
      required:
        - id
    V2PostFileStorageBucketsBucketIdNodesNodeIdCopyClient:
      type: object
      properties:
        client_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the client who created the node
            jpn: |-
              作成クライアントID
          format: uuid
          nullable: true
        is_device:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Flag for a device
            jpn: |-
              デバイスかどうかのフラグ
      required:
        - client_id
        - is_device
    V2PostFileStorageBucketsBucketIdNodesNodeIdCopyCreatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: >-
                #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdCopyUser
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: >-
                #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdCopyClient
      required:
        - client
    V2PostFileStorageBucketsBucketIdNodesNodeIdCopyUpdatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: >-
                #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdCopyUser
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: >-
                #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdCopyClient
      required:
        - client
    V2PostFileStorageBucketsBucketIdNodesNodeIdCopyFile:
      type: object
      properties:
        size:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Size of file. 0 or more
            jpn: |-
              ノードに格納されているファイルのサイズ。バイト。0以上
          example: '456'
          format: Bytes
        checksum:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              File checksum. Checksum value of a specified file on upload
            jpn: |-
              該当Nodeのファイルチェックサム。アップロード時に指定されたファイルのchecksumの値
          example: Pu4w1pPbKpuu94qe9vG2NQ==
      required:
        - size
        - checksum
    V2PostFileStorageBucketsBucketIdNodesNodeIdCopyNode:
      type: object
      properties:
        bucket_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Bucket ID
            jpn: |-
              バケットID
          example: bjd878g1gsj1ttpjr6e0
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Node ID
            jpn: |-
              ノードID
          example: 9m4e2mr0ui3e8a215n4g
        parent_node_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Parent node ID. ```null```: Root node
            jpn: |-
              親ノードID。```null```の時、ルートノードを示す
          example: b85rks2clqg1g6h1fv0g
          nullable: true
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name
            jpn: |-
              名前
          example: test2.txt
        key:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Prefecture. Directory path MUST end with ```/```
            jpn: |-
              絶対パス。ディレクトリを示すノードのキーは末尾が```/```になる
          example: /test/test2.txt
        created_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Creation time. Unix time in nanoseconds
            jpn: |-
              作成時間。UNIX時間(ナノ秒)
          example: '1518165596566320259'
        created_by:
          description: |

            :::x-description-i18n:
            eng: |-
              Information on creation. Refer to Response Patterns of ```created_by``` and ```updated_by```
            jpn: |-
              作成時情報。```created_by``` / ```updated_by``` Response Pattern 参照
          allOf:
            - $ref: >-
                #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdCopyCreatedBy
        updated_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Update time. Unix time in nanoseconds
            jpn: |-
              最終更新時間。UNIX時間(ナノ秒)
          example: '1518165596566320259'
        updated_by:
          description: |

            :::x-description-i18n:
            eng: |-
              Information at update time. Refer to Response Patterns of ```created_by``` and ```updated_by```
            jpn: |-
              更新時情報。```created_by``` / ```updated_by``` Response Pattern 参照
          allOf:
            - $ref: >-
                #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdCopyUpdatedBy
        is_directory:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Directory flag
              * ```true```: This node is a directory
              * ```false```: This node is a file
            jpn: |-
              ディレクトリかどうかのフラグ
          example: false
        file:
          description: |

            :::x-description-i18n:
            eng: |-
              Information of file. Returned if parameter ```is_directory``` is ```false```
            jpn: |-
              ファイル情報。```is_directory```が```false```のとき表示
          allOf:
            - $ref: >-
                #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdCopyFile
      required:
        - bucket_id
        - id
        - parent_node_id
        - name
        - key
        - created_at
        - updated_at
        - is_directory
    V2PostFileStorageBucketsBucketIdNodesNodeIdCopy:
      type: object
      properties:
        node:
          description: |

            :::x-description-i18n:
            eng: |-
              Node
            jpn: |-
              ノード
          allOf:
            - $ref: >-
                #/components/schemas/V2PostFileStorageBucketsBucketIdNodesNodeIdCopyNode
      required:
        - node
    V2GetFileStorageBucketsBucketIdNodesNodeIdRenameBodyDto:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name, Follow Naming Rules

            jpn: |-
              ノード名, Naming Rules 参照
          example: test.txt
      required:
        - name
    V2GetFileStorageBucketsBucketIdNodesNodeIdRenameUser:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the user
            jpn: |-
              ユーザID
          format: uuid
          nullable: true
      required:
        - id
    V2GetFileStorageBucketsBucketIdNodesNodeIdRenameClient:
      type: object
      properties:
        client_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the client
            jpn: |-
              クライアントID
          format: uuid
          nullable: true
        is_device:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Flag for a device
            jpn: |-
              デバイスかどうかのフラグ
      required:
        - client_id
        - is_device
    V2GetFileStorageBucketsBucketIdNodesNodeIdRenameCreatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdRenameUser
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdRenameClient
      required:
        - client
    V2GetFileStorageBucketsBucketIdNodesNodeIdRenameUpdatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdRenameUser
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdRenameClient
      required:
        - client
    V2GetFileStorageBucketsBucketIdNodesNodeIdRenameFile:
      type: object
      properties:
        size:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Size of file, O or more bytes
            jpn: |-
              該当Nodeのファイルサイズ バイト。0以上
          format: Bytes
          example: '456'
        checksum:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              File checksum, Checksum value of a specified file on upload
            jpn: |-
              該当Nodeのファイルチェックサム アップロード時に指定されたファイルのchecksumの値
          example: Pu4w1pPbKpuu94qe9vG2NQ==
      required:
        - size
        - checksum
    V2GetFileStorageBucketsBucketIdNodesNodeIdRenameNode:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of node
            jpn: |-
              ノードID
          format: uuid
        created_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Creation time, Unix time in nanoseconds
            jpn: |-
              作成時間 UNIX時間(ナノ秒)
          example: '1518165596566320259'
        created_by:
          description: |

            :::x-description-i18n:
            eng: |-
              Information on creation
            jpn: |-
              作成時情報, created_by/updated_by Response Pattern 参照
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdRenameCreatedBy
        updated_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Update time, Unix time in nanoseconds
            jpn: |-
              最終更新時間 UNIX時間(ナノ秒)
          example: '1518165596566320259'
        updated_by:
          description: |

            :::x-description-i18n:
            eng: |-
              Information at update time, Refer to Response Patterns of created_by and updated_by
            jpn: |-
              更新時情報, created_by / updated_by Response Pattern 参照
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdRenameUpdatedBy
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name, Follow Naming Rules
            jpn: |-
              名前, Naming Rules 参照
          example: test2.txt
        parent_node_id:
          type: string
          nullable: true
          default: null
          description: |

            :::x-description-i18n:
            eng: |-
              Parent node ID, ```null```: Root node
            jpn: |-
              親ノードID ```null``` の時、ルートノードを示す
          format: uuid
        key:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Absolute path of node, Directory path MUST end with ``` / ```
            jpn: |-
              絶対パス ディレクトリを示すノードのキーは末尾が``` / ```になる
          example: /test2.txt
        is_directory:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Directory flag
              * ```true```: This node is a directory
              * ```false```: This node is a file
            jpn: |-
              ディレクトリかどうかのフラグ
        file:
          description: |

            :::x-description-i18n:
            eng: |-
              Information of file
            jpn: |-
              ファイル情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdRenameFile
      required:
        - id
        - created_at
        - updated_at
        - name
        - parent_node_id
        - key
        - is_directory
    V2GetFileStorageBucketsBucketIdNodesNodeIdRename:
      type: object
      properties:
        node:
          description: |

            :::x-description-i18n:
            eng: |-
              Node
            jpn: |-
              ノード
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdNodesNodeIdRenameNode
      required:
        - node
    V2GetFileStorageBucketsBucketIdUploadUser:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the user who created. UUID format.
            jpn: |-
              作成ユーザID UUID形式
          example: 5f0b96c6-30b9-42d0-bfa1-5adbe2375c2
          format: uuid
      required:
        - id
    V2GetFileStorageBucketsBucketIdUploadClient:
      type: object
      properties:
        client_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the client who created. UUID format.
            jpn: |-
              作成クライアントID。UUID形式
          format: uuid
        is_device:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Flag for a device
            jpn: |-
              デバイスかどうかのフラグ
      required:
        - client_id
        - is_device
    V2GetFileStorageBucketsBucketIdUploadCreatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdUploadUser'
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdUploadClient'
      required:
        - client
    V2GetFileStorageBucketsBucketIdUploadUpdatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdUploadUser'
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdUploadClient'
      required:
        - client
    V2GetFileStorageBucketsBucketIdUploadFile:
      type: object
      properties:
        size:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Size of file, O or more bytes
            jpn: |-
              該当Nodeのファイルサイズ バイト。0以上
          example: '456'
        checksum:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              File checksum. Checksum value of a specified file on upload
            jpn: |-
              該当Nodeのファイルチェックサム。アップロード時に指定されたファイルのchecksumの値
          example: Pu4w1pPbKpuu94qe9vG2NQ==
      required:
        - size
        - checksum
    V2GetFileStorageBucketsBucketIdUploadNode:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Node ID
            jpn: |-
              ノードID
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        created_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Created time. Unix time in nanoseconds.
            jpn: |-
              作成時間 UNIX時間(ナノ秒)
          example: '1518165596566320259'
        created_by:
          description: |

            :::x-description-i18n:
            eng: |-
              Information on creation
            jpn: |-
              作成時情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdUploadCreatedBy
        updated_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Updated time. Unix time in nanoseconds
            jpn: |-
              最終更新時間。UNIX時間(ナノ秒)
          example: '1518165596566320259'
        updated_by:
          description: |-

            :::x-description-i18n:
            eng: |-
              Information at update time
            jpn: |-
              更新時情報

          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdUploadUpdatedBy
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name
            jpn: |-
              名前
          example: test.txt
        parent_node_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Parent node ID. ```null```: Root node.
            jpn: |-
              親ノードID。 nullの時、ルートノードを示す
          example: null
          nullable: true
        key:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Absolute path of node. Directory path MUST end with ```/```
            jpn: |-
              絶対パス。ディレクトリを示すノードのキーは末尾が```/```になる
          example: /test/test.txt
        is_directory:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Directory flag
              * ```true```: This node is a directory
              * ```false```: This node is a file
            jpn: |-
              ディレクトリかどうかのフラグ
        file:
          description: |

            :::x-description-i18n:
            eng: |-
              Information of file
            jpn: |-
              ファイル情報
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdUploadFile'
      required:
        - id
        - created_at
        - updated_at
        - name
        - parent_node_id
        - key
        - is_directory
    V2GetFileStorageBucketsBucketIdUpload:
      type: object
      properties:
        node:
          description: |

            :::x-description-i18n:
            eng: |-
              Node
            jpn: |-
              ノード
          allOf:
            - $ref: '#/components/schemas/V2GetFileStorageBucketsBucketIdUploadNode'
      required:
        - node
    StreamableFile:
      type: object
      properties: {}
    V2GetFileStorageBucketsBucketIdCreateDirectoryBodyDto:
      type: object
      properties:
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name. Follow Naming Rules
            jpn: |-
              ノード名。Naming Rules 参照
        parent_node_id:
          type: string
          default: null
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Parent node ID. ```null```: Root node
            jpn: |-
              親のノードID。```null```はルートノード配下
          pattern: ^[0-9a-v]{20}$
      required:
        - name
    V2GetFileStorageBucketsBucketIdCreateDirectoryUser:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザID
          format: uuid
          nullable: true
      required:
        - id
    V2GetFileStorageBucketsBucketIdCreateDirectoryClient:
      type: object
      properties:
        client_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the client
            jpn: |-
              作成クライアントID
          format: uuid
          nullable: true
        is_device:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Flag for a device
            jpn: |-
              デバイスかどうかのフラグ
      required:
        - client_id
        - is_device
    V2GetFileStorageBucketsBucketIdCreateDirectoryCreatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdCreateDirectoryUser
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdCreateDirectoryClient
      required:
        - client
    V2GetFileStorageBucketsBucketIdCreateDirectoryUpdatedBy:
      type: object
      properties:
        user:
          description: |

            :::x-description-i18n:
            eng: |-
              User information
            jpn: |-
              ユーザ情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdCreateDirectoryUser
        client:
          description: |

            :::x-description-i18n:
            eng: |-
              Client information
            jpn: |-
              クライアント情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdCreateDirectoryClient
      required:
        - client
    V2GetFileStorageBucketsBucketIdCreateDirectoryNode:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Node ID
            jpn: |-
              ノードID
        created_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Creation time. Unix time in nanoseconds
            jpn: |-
              作成時間。UNIX時間(ナノ秒)
        created_by:
          description: |

            :::x-description-i18n:
            eng: |-
              Information on creation
            jpn: |-
              作成時情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdCreateDirectoryCreatedBy
        updated_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Update time. Unix time in nanoseconds
            jpn: |-
              最終更新時間。UNIX時間(ナノ秒)
        updated_by:
          description: |

            :::x-description-i18n:
            eng: |-
              Information at update time
            jpn: |-
              更新時情報
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdCreateDirectoryUpdatedBy
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name
            jpn: |-
              名前
        parent_node_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Nation code.
            jpn: |-
              親ノードID。```null```の時、ルートノードを示す
          nullable: true
        key:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Absolute path of node. Directory path MUST end with ```/```
            jpn: |-
              絶対パス。ディレクトリを示すノードのキーは末尾が```/```になる
        is_directory:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Directory flag. Fixed to ```true```
            jpn: |-
              ディレクトリかどうかのフラグ。```true```固定
          default: true
      required:
        - id
        - created_at
        - created_by
        - updated_at
        - updated_by
        - name
        - parent_node_id
        - key
        - is_directory
    V2GetFileStorageBucketsBucketIdCreateDirectory:
      type: object
      properties:
        node:
          description: |

            :::x-description-i18n:
            eng: |-
              Node
            jpn: |-
              ノード
          example:
            id: 9m4e2mr0ui3e8a215n4g
            created_at: '1518165596566320259'
            created_by:
              user:
                id: 5f0b96c6-30b9-42d0-bfa1-5adbe2375c2e
              client:
                client_id: e94b4476-4822-4c04-93ff-c58c8348c73f
                is_device: false
            updated_at: '1518165596566320259'
            updated_by:
              user:
                id: 5f0b96c6-30b9-42d0-bfa1-5adbe2375c2e
              client:
                client_id: e94b4476-4822-4c04-93ff-c58c8348c73f
                is_device: false
            name: hogehoge
            parent_node_id: null
            key: /hogehoge
            is_directory: true
          allOf:
            - $ref: >-
                #/components/schemas/V2GetFileStorageBucketsBucketIdCreateDirectoryNode
      required:
        - node
    CustomFields:
      type: object
      properties: {}
    V2PutGroupsMemberDto:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group member ID
            jpn: |-
              グループメンバーのID
          example: cf221ab7-9272-48e9-b8ce-433397744185
          format: uuid
        user_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the user who added as a member of the group
            jpn: |-
              グループのメンバーとして追加するユーザーのID
          example: cf221ab7-9272-48e9-b8ce-433397744185
          format: uuid
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role in the group
            jpn: |-
              メンバーのグループ内での権限
          enum:
            - super_admin
            - admin
            - manager
            - staff
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Group member tag
            jpn: |-
              グループメンバーのタグ
          example:
            - tag
          type: array
          items:
            type: string
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
              Custom fields. Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目。任意のkey、valueを設定可能（key、valueともに255文字以下）
          example:
            label: value
          allOf:
            - $ref: '#/components/schemas/CustomFields'
      required:
        - user_id
        - role
    V2PutGroupsGroupIdMembersBodyDto:
      type: object
      properties:
        members:
          description: |

            :::x-description-i18n:
            eng: |-
              List of users to add as members of the group
            jpn: |-
              グループのメンバーとして追加するユーザーのリスト
          type: array
          items:
            $ref: '#/components/schemas/V2PutGroupsMemberDto'
      required:
        - members
    V2PutGroupsMember:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group member ID
            jpn: |-
              グループメンバーのID
          example: 84ef1b90-8e60-4d6d-8f50-16870d28d555
          format: uuid
        user_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of the user who added as a member of the group
            jpn: |-
              グループのメンバーとして追加するユーザーのID
          example: aaa4c908-e271-472a-b13e-4c7a8c4c571as
          format: uuid
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role in the group
            jpn: |-
              メンバーのグループ内での権限
          example: guest
        category:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group joining form
              * ```member```: when a user belongs to a corporation
              * ```guest```: when a user joins a corporation or a group
            jpn: |-
              ユーザーの参加形態
              * ```member```: 企業に所属する場合
              * ```guest```: 企業やグループに参加する場合
          example: staff
        invited:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation status
              * ```true```: Pending
              * ```false```: Accepted invitation
            jpn: |-
              招待ステータス
              * ```true```: 招待中のとき
              * ```false```: 招待承諾済み
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Group member tag
            jpn: |-
              グループメンバーのタグ
          example:
            - tag
          type: array
          items:
            type: string
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
              Custom fields. Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目。任意のkey、valueを設定可能（key、valueともに255文字以下）
          example:
            label: value
          allOf:
            - $ref: '#/components/schemas/CustomFields'
      required:
        - id
        - user_id
        - role
        - category
        - invited
    V2PutGroupsGroupIdMembers:
      type: object
      properties:
        total:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              Number of group members updated
            jpn: |-
              更新したグループメンバーの数
          example: 1
        members:
          description: |

            :::x-description-i18n:
            eng: |-
              List of users to add as members of the group. 0 or more
            jpn: |-
              グループのメンバーとして追加するユーザーのリスト。0以上
          type: array
          items:
            $ref: '#/components/schemas/V2PutGroupsMember'
      required:
        - total
        - members
    V2GetGroupsGroupIdMembersCustomFields:
      type: object
      properties: {}
    V2GetGroupsGroupIdMembersAddress:
      type: object
      properties:
        country:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Country code, in ISO 3166-1 alpha-2 format
            jpn: |-
              国名コード、ISO 3166-1 alpha-2形式

          format: ISO 3166-1 alpha-2
          maxLength: 2
          nullable: true
          example: JP
        zip_code:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Zip code
            jpn: |-
              郵便番号

          example: 105-0022
          nullable: true
        state:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県

          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          nullable: true
        city:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              City
            jpn: |-
              市区町村

          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          nullable: true
        address_1:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 1 (street number, etc)
            jpn: |-
              住所1（番地など）

          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
        address_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 2 (street number, etc)
            jpn: |-
              住所2（ビル名など）

          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2GetGroupsGroupIdMembersProfile:
      type: object
      properties:
        type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Account Type
              Type managed for corporation users
            jpn: |-
              アカウント種別
              企業ユーザーはmanaged

          example: managed
          enum:
            - managed
          nullable: true
        name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              User Name (Full Name)
            jpn: |-
              ユーザー名（氏名）

          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
        family_name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Family Name
            jpn: |-
              姓

          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
          nullable: true
        given_name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Given Name
            jpn: |-
              名

          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
          nullable: true
        phonetic_family_name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
               Family Name (furigana)
            jpn: |-
              姓（振り仮名）

          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
          nullable: true
        phonetic_given_name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Given Name (furigana)
            jpn: |-
              名（振り仮名）

          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
          nullable: true
        email:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Email Address (also used as login ID)
            jpn: |-
              メールアドレス（ログインIDにもなる）

          example: taro.example@example.co.jp
          format: email
        emails:
          description: |-

            :::x-description-i18n:
            eng: |-
              Email address used to receive notification email (multiple can be specified)
            jpn: |-
              通知メールを受け取るメールアドレス（複数指定可能）

          example:
            - taro2.example@example.co.jp
            - taro3.example@example.co.jp
          uniqueItems: true
          type: array
          items:
            type: string
        picture:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              URL where icon image can be downloaded, URI format
            jpn: |-
              アイコン画像をダウンロード可能なURL、URI形式

          format: uri
          nullable: true
          example: https://sample.co.jp/v2/profile_image/pictures/default.png
        phone_number:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Phone Number 1
            jpn: |-
              電話番号1

          example: '09012345678'
          nullable: true
        phone_number_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Phone Number 2
            jpn: |-
              電話番号2

          example: '09087654321'
          nullable: true
        language:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              ISO639 format
              only ```ja```,  ```ja-JP```,  ```en-US```,  ```de-DE```,  ```fr-FR```,  ```es-ES```,  ```cs-CZ``` (use browser language if not set)
            jpn: |-
              ISO639形式
              ```ja```、 ```ja-JP```、 ```en-US```、 ```de-DE```、 ```fr-FR```、 ```es-ES```、 ```cs-CZ```のみ（未設定の場合はブラウザ言語を利用）

          example: ja-JP
          enum:
            - ja
            - ja-JP
            - en-US
            - de-DE
            - fr-FR
            - es-ES
            - cs-CZ
          maxLength: 5
          nullable: true
        address:
          nullable: true
          description: |-

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所の情報

          allOf:
            - $ref: '#/components/schemas/V2GetGroupsGroupIdMembersAddress'
      required:
        - email
    V2GetGroupsGroupIdMembersMembers:
      type: object
      properties:
        id:
          type: string
          description: "\n:::x-description-i18n:\neng: |-\n  Group member ID\njpn: |-\n  グループメンバーID\tUUID形式\n    "
          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
          format: uuid
        user_id:
          type: string
          description: "\n:::x-description-i18n:\neng: |-\n  User ID of a group member\njpn: |-\n  グループメンバーになっているユーザーのID\tUUID形式\n    "
          example: c8a17724-caeb-4233-b8d8-ba38690a113d
          format: uuid
        role:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              User's permission in group
              ```super_admin```,  ```admin```,  ```manager```,  ```staff```
            jpn: |-
              メンバーのグループ内での権限
              ```super_admin```、 ```admin```、 ```manager```、 ```staff```

          example: super_admin
          enum:
            - super_admin
            - admin
            - manager
            - staff
        category:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              User participation type
              ```member``` if belonging to parent corporation, ```guest``` if joining from an outside corporation or group
            jpn: |-
              ユーザーの参加形態
              企業に所属する場合は```member```、企業やグループに参加する場合は```guest```

          example: member
          enum:
            - member
            - guest
          nullable: true
        invited:
          type: boolean
          description: |-

            :::x-description-i18n:
            eng: |-
              Whether or not there is an invitation
              ```true``` if invitation is in progress
            jpn: |-
              招待の有無
              招待中のときはtrue

          example: false
        tags:
          description: |-

            :::x-description-i18n:
            eng: |-
              Group member tag
            jpn: |-
              メンバーのタグ

          example:
            - tag1
            - tag2
          nullable: true
          type: array
          items:
            type: string
        custom_fields:
          description: |-

            :::x-description-i18n:
            eng: |-
              Free description item
              Any key and value can be set (both key and value has 255 characters or less)
            jpn: |-
              自由記述項目
              任意のkey、valueを設定可能（key,valueともに255文字以下）

          example:
            user-label1: user-value1
            user-label2: user-value2
          allOf:
            - $ref: '#/components/schemas/V2GetGroupsGroupIdMembersCustomFields'
        profile:
          nullable: true
          description: |-

            :::x-description-i18n:
            eng: |-
              Group member profile
            jpn: |-
              メンバーに紐づくユーザー情報

          allOf:
            - $ref: '#/components/schemas/V2GetGroupsGroupIdMembersProfile'
      required:
        - id
        - user_id
        - role
        - category
        - invited
    V2GetGroupsGroupIdMembers:
      type: object
      properties:
        total:
          type: number
          description: |-

            :::x-description-i18n:
            eng: |-
              Total number of items which match filters, 0 or more
            jpn: |-
              該当するデータの全件数, 0以上

          example: 1
        members:
          description: |-

            :::x-description-i18n:
            eng: |-
              List of group members
            jpn: |-
              該当するグループメンバーのリスト

          type: array
          items:
            $ref: '#/components/schemas/V2GetGroupsGroupIdMembersMembers'
      required:
        - total
        - members
    V2PostGroupsMemberDto:
      type: object
      properties:
        user_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User ID of a group member
            jpn: |-
              グループのメンバーとして追加するユーザーのID
          format: uuid
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role in the group. ```super_admin```, ```admin```, ```manager```, or ```staff```. None specified by default
            jpn: |-
              ユーザーの権限 ```super_admin```, ```admin```, ```manager```, or ```staff``` を指定可能。デフォルトは指定なし
          enum:
            - super_admin
            - admin
            - manager
            - staff
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Group member tag
            jpn: |-
              メンバーのタグ
          example:
            - tag
          type: array
          items:
            type: string
            maxLength: 255
            minLength: 1
            pattern: .{1,255}
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
              Custom fields, Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              由記述項目, 任意のkey、valueを設定可能（key、valueともに255文字以下）
          example:
            label: value
          pattern: .{1,255}
          allOf:
            - $ref: '#/components/schemas/CustomFields'
      required:
        - user_id
        - role
    V2PostGroupsGroupIdMembersBodyDto:
      type: object
      properties:
        members:
          description: |

            :::x-description-i18n:
            eng: |-
              List of users to add as group members
            jpn: |-
              グループのメンバーとして追加するユーザーのリスト
          type: array
          items:
            $ref: '#/components/schemas/V2PostGroupsMemberDto'
      required:
        - members
    V2PatchGroupsMemberDto:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group member ID
            jpn: |-
              グループメンバーID
          format: uuid
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role in the group. ```super_admin```, ```admin```, ```manager```, or ```staff```. None specified by default
            jpn: |-
              メンバーのグループ内での権限 ```super_admin```, ```admin```, ```manager```, or ```staff``` を指定可能。デフォルトは指定なし
          enum:
            - super_admin
            - admin
            - manager
            - staff
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Group member tag
            jpn: |-
              メンバーのタグ 255文字以下
          example:
            - tag
          nullable: true
          type: array
          items:
            type: string
            maxLength: 255
            minLength: 1
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
              Custom fields. Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）
          example:
            label: value
          nullable: true
          allOf:
            - $ref: '#/components/schemas/CustomFields'
      required:
        - id
        - role
    V2PatchGroupsGroupIdMembersBodyDto:
      type: object
      properties:
        members:
          description: |

            :::x-description-i18n:
            eng: |-
              List of users to add as members of the group
            jpn: |-
              グループのメンバーとして追加するユーザーのリスト
          type: array
          items:
            $ref: '#/components/schemas/V2PatchGroupsMemberDto'
      required:
        - members
    V2PatchGroupsMember:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Member ID of the user added as a member of the group
            jpn: |-
              グループのメンバーとして追加されたユーザーのメンバーID
          example: 84ef1b90-8e60-4d6d-8f50-16870d28d555
          format: uuid
        user_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User ID of a group member
            jpn: |-
              グループメンバーになっているユーザーのID
          format: uuid
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role in the group. ```super_admin```, ```admin```, ```manager```, or ```staff```. None specified by default
            jpn: |-
              メンバーのグループ内での権限、```super_admin```, ```admin```, ```manager```, or ```staff```のいずれか
          enum:
            - super_admin
            - admin
            - manager
            - staff
        category:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group joining form. Only ```guest```
              * ```member```: when a user belongs to a corporation
              * ```guest```: when a user joins a corporation or a group
            jpn: |-
              ユーザーの参加形態
              * ```member```: 企業に所属する場合
              * ```guest```: 企業やグループに参加する場合
          enum:
            - member
            - guest
        invited:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation status
              * ```true```: Pending
              * ```false```: Accepted invitation
            jpn: |-
              招待ステータス
              * ```true```: 招待中のとき
              * ```false```: 招待承諾済み
        tags:
          description: |

            :::x-description-i18n:
            eng: |-
              Group member tag
            jpn: |-
              メンバーのタグ
          type: array
          items:
            type: string
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
              Custom fields. Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）
          allOf:
            - $ref: '#/components/schemas/CustomFields'
      required:
        - id
        - user_id
        - role
        - category
        - invited
    V2PatchGroupsGroupIdMembers:
      type: object
      properties:
        total:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              Number of members whose attributes have been changed
            jpn: |-
              属性を変更したメンバーの件数
          example: 1
        members:
          description: |

            :::x-description-i18n:
            eng: |-
              List of group members
            jpn: |-
              グループのメンバーとして追加されたユーザーのリスト
          example:
            - id: 84ef1b90-8e60-4d6d-8f50-16870d28d555
              user_id: aaa4c908-e271-472a-b13e-4c7a8c4c571a
              role: staff
              category: guest
              invited: true
              tags:
                - tag
              custom_fields:
                label: value
          type: array
          items:
            $ref: '#/components/schemas/V2PatchGroupsMember'
      required:
        - total
        - members
    V2DeleteGroupsGroupIdMembersBodyDto:
      type: object
      properties:
        members:
          description: |

            :::x-description-i18n:
            eng: |-
              List of group member IDs
            jpn: |-
              解除する現場メンバーのID
          title: members
          type: array
          items:
            type: string
            format: uuid
    V2GetUserAddress:
      type: object
      properties:
        country:
          type: string
          minLength: 2
          description: |

            :::x-description-i18n:
            eng: |-
              Country code, ISO 3166-1 alpha-2 format
            jpn: |-
              国名コード、ISO 3166-1 alpha-2形式
          example: JP
          maxLength: 2
          nullable: true
          format: ISO 3166-1 alpha-2
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号
          example: 105-0022
          nullable: true
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Prefectures
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          nullable: true
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          nullable: true
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 1 (street number etc.)
            jpn: |-
              住所1（番地など)
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 2 (building name, etc.)
            jpn: |-
              住所2（ビル名など)
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2GetUserMailAgreement:
      type: object
      properties:
        proper:
          type: boolean
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Consent status for sending email notifications
            jpn: |-
              お知らせメール送信の同意状況
        partner:
          type: boolean
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Consent status for sending notification emails from partners
            jpn: |-
              パートナーからのお知らせメール送信の同意状況
      required:
        - proper
        - partner
    V2GetUserCorporation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業のID
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation name
            jpn: |-
              企業名
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN Ltd.
            jpn: |-
              株式会社EARTHBRAIN
      required:
        - id
        - name
    V2GetUserGroups:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID
        corporation_id:
          type: string
          format: uuid
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業のID
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group name
            jpn: |-
              グループの名前
          example: |

            :::x-example-i18n:
            eng: |-
              Test group name
            jpn: |-
              テストグループ名
        type:
          type: string
          enum:
            - Group
            - Corporation
          description: |

            :::x-description-i18n:
            eng: |-
              Group type
            jpn: |-
              グループのタイプ
      required:
        - id
        - corporation_id
        - name
        - type
    V2GetUser:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID
          format: uuid
          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Account type
              * ```managed```: User is managed by a corporation
            jpn: |-
              アカウント種別
              * ```managed```: ユーザーは企業によって管理されています
          enum:
            - managed
          example: managed
          nullable: true
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Username (full name)
            jpn: |-
              ユーザー名（氏名)
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
        family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Family name
            jpn: |-
              姓
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
        given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Name
            jpn: |-
              名
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
        phonetic_family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Last name (furigana). Full-width or half-width does not matter
            jpn: |-
              姓（振り仮名). 全角や半角は問わない
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
        phonetic_given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              First name (furigana). Full-width or half-width does not matter
            jpn: |-
              名（振り仮名). 全角や半角は問わない
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address (also serves as login ID)
            jpn: |-
              メールアドレス（ログインIDにもなる）
          format: email
        emails:
          description: |

            :::x-description-i18n:
            eng: |-
              Email address to receive notification email (multiple specifications can be specified)
            jpn: |-
              通知メールを受け取るメールアドレス（複数指定可能）
          type: array
          items:
            type: string
            format: email
        picture:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              URL where icon images can be downloaded, URI format
            jpn: |-
              アイコン画像をダウンロード可能なURL、URI形式
          format: uri
          nullable: true
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number 1
            jpn: |-
              電話番号1
          nullable: true
          example: '09012345678'
        phone_number_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number 2
            jpn: |-
              電話番号2
          nullable: true
          example: '09087654321'
        language:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Language setting (if not specified, browser language is used)
              * ```ja```/ ```ja-JP```: Japanese
              * ```en-US```: English
              * ```de-DE```: German
              * ```fr-FR```: French
              * ```es-ES```: Spanish
              * ```cs-CZ```: Czech
            jpn: |-
              言語設定 (未指定の場合はブラウザの言語設定が使用される）
              * ```ja```/ ```ja-JP```: 日本語
              * ```en-US```: 英語
              * ```de-DE```: ドイツ語
              * ```fr-FR```: フランス語
              * ```es-ES```: スペイン語
              * ```cs-CZ```: チェコ語
          maxLength: 5
          nullable: true
          format: ISO639
          example: en-US
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所
          allOf:
            - $ref: '#/components/schemas/V2GetUserAddress'
        mail_agreement:
          description: |

            :::x-description-i18n:
            eng: |-
              Consent status for notifications
            jpn: |-
              お知らせの同意状況
          allOf:
            - $ref: '#/components/schemas/V2GetUserMailAgreement'
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role in the group, ```super_admin```, ```admin```, ```manager```, ```staff```
            jpn: |-
              ロール ```super_admin```、 ```admin```、 ```manager```、 ```staff```
          example: admin
          enum:
            - super_admin
            - admin
            - manager
            - staff
        corporation:
          description: |

            :::x-description-i18n:
            eng: |-
              Corporation Information
            jpn: |-
              会社概要
          allOf:
            - $ref: '#/components/schemas/V2GetUserCorporation'
        groups:
          description: |

            :::x-description-i18n:
            eng: |-
              Group Information
            jpn: |-
              グループ情報
          type: array
          items:
            $ref: '#/components/schemas/V2GetUserGroups'
      required:
        - id
        - type
        - name
        - family_name
        - given_name
        - phonetic_family_name
        - phonetic_given_name
        - email
        - emails
        - picture
        - phone_number
        - phone_number_2
        - language
        - mail_agreement
        - role
    V2GetUserExternalIdentity:
      type: object
      properties:
        subject:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              ID of external ID base
            jpn: |-
              外部ID基盤のID
          example: 1234567890-xyz
          nullable: true
      required:
        - subject
    V2GetUsersAddress:
      type: object
      properties:
        country:
          type: string
          minLength: 2
          description: |

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード
          example: JP
          format: ISO 3166-1 alpha-2
          maxLength: 2
          nullable: true
        zip_code:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号
          example: 100-0000
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          nullable: true
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          nullable: true
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 1 (street address etc)
            jpn: |-
              住所1 (番地など)
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 2 (building name, etc.)
            jpn: |-
              住所2 (ビル名など）
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2GetUsersMailAgreement:
      type: object
      properties:
        proper:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Consent status for sending email notifications
            jpn: |-
              お知らせメール送信の同意状況
        partner:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Consent status for sending notification emails from partners
            jpn: |-
              パートナーからのお知らせメール送信の同意状況
      required:
        - proper
        - partner
    V2GetUsersUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID
        type:
          type: string
          enum:
            - managed
          example: managed
          description: |

            :::x-description-i18n:
            eng: |-
              Account type, ```managed``` for corporate users
            jpn: |-
              アカウント種別, 企業ユーザーは```managed```
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User Name
            jpn: |-
              ユーザー名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
        family_name:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Family name
            jpn: |-
              姓
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
        given_name:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Given name
            jpn: |-
              名
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
        phonetic_family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name (full-width or half-width characters do not matter)
            jpn: |-
              姓（振り仮名）全角や半角は問わない
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
          nullable: true
        phonetic_given_name:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name (full-width or half-width characters do not matter)
            jpn: |-
              名（振り仮名）全角や半角は問わない
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
        email:
          type: string
          format: email
          description: |

            :::x-description-i18n:
            eng: |-
              Main email address (also serves as login ID)
            jpn: |-
              メールアドレス (ログインIDにもなる)
        emails:
          uniqueItems: true
          description: |

            :::x-description-i18n:
            eng: |-
              Sub email address (Email address to receive notification email)
              * Multiple specifications can be specified
            jpn: |-
              サブメールアドレス (通知メールを受け取るメールアドレス)
              * 複数指定可能
          example:
            - notification-email-address01-01@earthbrain.com
            - notification-email-address01-02@earthbrain.com
            - notification-email-address01-03@earthbrain.com
          type: array
          items:
            type: string
        picture:
          type: string
          format: uri
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              URL where icon images can be downloaded, URI format
            jpn: |-
              アイコン画像をダウンロード可能なURL、URI形式
        phone_number:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number 1
            jpn: |-
              電話番号1
          example: '09012345678'
        phone_number_2:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Phone number 2
            jpn: |-
              電話番号2
          example: '09087654321'
        language:
          type: string
          maxLength: 5
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Language setting (if not specified, browser language is used)
              * ```ja```/ ```ja-JP```: Japanese
              * ```en-US```: English
              * ```de-DE```: German
              * ```fr-FR```: French
              * ```es-ES```: Spanish
              * ```cs-CZ```: Czech
            jpn: |-
              言語設定 (未指定の場合はブラウザの言語設定が使用される）
              * ```ja```/ ```ja-JP```: 日本語
              * ```en-US```: 英語
              * ```de-DE```: ドイツ語
              * ```fr-FR```: フランス語
              * ```es-ES```: スペイン語
              * ```cs-CZ```: チェコ語
          example: ja-JP
          format: ISO639
        external_identity:
          description: |

            :::x-description-i18n:
            eng: |-
              External ID base information
            jpn: |-
              外部ID基盤情報
          allOf:
            - $ref: '#/components/schemas/V2GetUserExternalIdentity'
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所
          allOf:
            - $ref: '#/components/schemas/V2GetUsersAddress'
        mail_agreement:
          description: |

            :::x-description-i18n:
            eng: |-
              User mail agreement
            jpn: |-
              ユーザーメール規約
          allOf:
            - $ref: '#/components/schemas/V2GetUsersMailAgreement'
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role in the group, ```super_admin```, ```admin```, ```manager```, ```staff```
            jpn: |-
              ロール ```super_admin```、 ```admin```、 ```manager```、 ```staff```
          example: admin
          enum:
            - super_admin
            - admin
            - manager
            - staff
        corporation:
          description: |

            :::x-description-i18n:
            eng: |-
              User Corporation
            jpn: |-
              ユーザー法人
          allOf:
            - $ref: '#/components/schemas/V2GetUserCorporation'
        groups:
          description: |

            :::x-description-i18n:
            eng: |-
              User Groups
            jpn: |-
              ユーザーグループ
          type: array
          items:
            $ref: '#/components/schemas/V2GetUserGroups'
      required:
        - id
        - type
        - name
        - family_name
        - given_name
        - phonetic_family_name
        - phonetic_given_name
        - email
        - emails
        - picture
        - phone_number
        - phone_number_2
        - language
        - external_identity
        - role
    V2GetUsers:
      type: object
      properties:
        total:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of applicable data
            jpn: |-
              該当するデータの全件数
          example: 1
        users:
          description: |

            :::x-description-i18n:
            eng: |-
              List User
            jpn: |-
              ユーザーをリストする
          type: array
          items:
            $ref: '#/components/schemas/V2GetUsersUser'
      required:
        - total
        - users
    V2PatchUserIdMailAgreementDto:
      type: object
      properties:
        proper:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Consent status for sending email notifications. ```true``` if agreed
            jpn: |-
              お知らせメール送信の同意状況。同意している場合は```true```
          example: true
        partner:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Consent status for sending notification emails from partners. ```true``` if agreed
            jpn: |-
              パートナーからのお知らせメール送信の同意状況。同意している場合は```true```
          example: false
    V2PatchUserIdBodyDto:
      type: object
      properties:
        mail_agreement:
          description: |

            :::x-description-i18n:
            eng: |-
              Update notification email settings
            jpn: |-
              お知らせメールの設定更新
          allOf:
            - $ref: '#/components/schemas/V2PatchUserIdMailAgreementDto'
      required:
        - mail_agreement
    V2PatchUserIdAddress:
      type: object
      properties:
        country:
          type: string
          minLength: 2
          description: |

            :::x-description-i18n:
            eng: |-
              Country code. ISO 3166-1 alpha-2 compliant
            jpn: |-
              国名コード ISO 3166-1 alpha-2形式
          format: ISO 3166-1 alpha-2
          maxLength: 2
          nullable: true
          example: JP
        zip_code:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号
          nullable: true
          example: 105-0022
        state:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
        city:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 1 (street address etc)
            jpn: |-
              住所1（番地など）
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 2 (building name, etc.)
            jpn: |-
              住所2（ビル名など）
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2PatchUserIdMailAgreement:
      type: object
      properties:
        proper:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Consent status for sending email notifications
            jpn: |-
              お知らせメール送信の同意状況
          example: true
        partner:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Consent status for sending notification emails from partners
            jpn: |-
              パートナーからのお知らせメール送信の同意状況
          example: false
      required:
        - proper
        - partner
    V2PatchUserId:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID
          format: uuid
          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Account type
              * ```managed```: User is managed by a corporation
            jpn: |-
              アカウント種別
              * ```managed```: ユーザーは企業によって管理されています
          enum:
            - managed
          example: managed
        name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              User name(full name)
            jpn: |-
              ユーザー名（氏名）
          example: |

            :::x-example-i18n:
            eng: |-
              TARO EARTHBRAIN
            jpn: |-
              アースブレイン 太郎
        family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Family name
            jpn: |-
              姓
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              アースブレイン
        given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Given name
            jpn: |-
              名
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              太郎
        phonetic_family_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic family name. Full-width or half-width does not matter
            jpn: |-
              姓（振り仮名）全角や半角は問わない
          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              EARTHBRAIN
            jpn: |-
              あーすぶれいん
        phonetic_given_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Phonetic given name. Full-width or half-width does not matter
            jpn: |-
              名（振り仮名）全角や半角は問わない
          example: |

            :::x-example-i18n:
            eng: |-
              TARO
            jpn: |-
              たろう
          nullable: true
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address (also used as login ID)
            jpn: |-
              メールアドレス（ログインIDにもなる）
          example: example@example.co.jp
          format: email
        emails:
          description: |

            :::x-description-i18n:
            eng: |-
              Email address to receive notification (multiple specifications can be specified)
            jpn: |-
              通知メールを受け取るメールアドレス（複数指定可能）
          example:
            - example2@example.co.jp
            - example3@example.co.jp
          type: array
          items:
            type: string
            format: email
        picture:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              URL of an icon image
            jpn: |-
              アイコン画像をダウンロード可能なURL
          format: uri
          example: https://img.example.id/default.png
        phone_number:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Primary phone number
            jpn: |-
              電話番号1
          nullable: true
          example: '09012345678'
        phone_number_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Secondary phone number
            jpn: |-
              電話番号2
          nullable: true
          example: '09012345672'
        language:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Language setting (if not specified, browser language is used)
              * ```ja```/ ```ja-JP```: Japanese
              * ```en-US```: English
              * ```de-DE```: German
              * ```fr-FR```: French
              * ```es-ES```: Spanish
              * ```cs-CZ```: Czech
            jpn: |-
              言語設定 (未指定の場合はブラウザの言語設定が使用される）
              * ```ja```/ ```ja-JP```: 日本語
              * ```en-US```: 英語
              * ```de-DE```: ドイツ語
              * ```fr-FR```: フランス語
              * ```es-ES```: スペイン語
              * ```cs-CZ```: チェコ語
          format: ISO639
          maxLength: 5
          nullable: true
          example: en-US
        address:
          description: |

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所
          allOf:
            - $ref: '#/components/schemas/V2PatchUserIdAddress'
        mail_agreement:
          description: |

            :::x-description-i18n:
            eng: |-
              Update notification email settings
            jpn: |-
              お知らせメールの設定更新
          allOf:
            - $ref: '#/components/schemas/V2PatchUserIdMailAgreement'
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role in the group, ```super_admin```, ```admin```, ```manager```, ```staff```
            jpn: |-
              ロール ```super_admin```、 ```admin```、 ```manager```、 ```staff```
          example: admin
          enum:
            - super_admin
            - admin
            - manager
            - staff
      required:
        - id
        - type
        - name
        - family_name
        - given_name
        - phonetic_family_name
        - phonetic_given_name
        - email
        - emails
        - picture
        - phone_number
        - phone_number_2
        - language
        - address
        - mail_agreement
        - role
    V2PostUsersUserIdTermsAgreementsBodyDto:
      type: object
      properties:
        agreement_id:
          type: string
          description: 利用規約ID(UUID)
          format: uuid
      required:
        - agreement_id
    V2PostUsersUserIdTermsAgreements:
      type: object
      properties:
        message:
          type: string
          description: メッセージ
          example: |

            :::x-example-i18n:
            eng: |-
              message test.,
            jpn: |-
              メッセージテスト。
      required:
        - message
    V2PostGroupsAddressDto:
      type: object
      properties:
        country:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Country code. ISO 3166-1 alpha-2 compliant
            jpn: |-
              国名コード。ISO 3166-1 alpha-2形式

          format: ISO 3166-1 alpha-2
          maxLength: 2
          minLength: 0
          example: JP
        zip_code:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Postal code. Less than 255 characters
            jpn: |-
              郵便番号。255文字以下

          maxLength: 255
          minLength: 0
          pattern: .{0,255}
          example: 105-0022
        state:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              State. Less than 255 characters
            jpn: |-
              都道府県。255文字以下

          maxLength: 255
          minLength: 0
          pattern: .{0,255}
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
        city:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              City/Town/Village. Less than 255 characters
            jpn: |-
              市区町村。255文字以下

          maxLength: 255
          minLength: 0
          pattern: .{0,255}
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
        address_1:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 1. Less than 255 characters
            jpn: |-
              住所1（番地など）。255文字以下

          maxLength: 255
          minLength: 0
          pattern: .{0,255}
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
        address_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 2. Less than 255 characters
            jpn: |-
              住所2（ビル名など）。255文字以下

          maxLength: 255
          minLength: 0
          pattern: .{0,255}
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
    V2PostGroupsBodyDto:
      type: object
      properties:
        parent_group_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Parent group ID. Format UUID

              ※Only a single group can be specified for a parent of single group
              Admin or higher rights is required to be a parent of group
            jpn: |-
              親グループID。UUID形式

              ※単体グループの親は単体グループのみ設定可能
              親になるグループでadmin以上の権限を持つ必要がある

          format: uuid
          example: b18a99f0-4f07-40ff-94ad-b366623a84f4
        name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group name. Corporation name if the group is a corporation
            jpn: |-
              グループ名。業の場合は企業名

          maxLength: 255
          minLength: 1
          pattern: ^.{1,255}$
          example: |

            :::x-example-i18n:
            eng: |-
              Sales Department
            jpn: |-
              営業部
        type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group type
              * ```Group```： Group has type is ```Group```
            jpn: |-
              グループ種別
              * ```Group```： グループのタイプは次のとおりです ```Group```

          enum:
            - Group
        phone_number:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Primary phone number. Less than 255 characters
            jpn: |-
              電話番号1。255文字以下。

          maxLength: 255
          minLength: 0
          pattern: .{0,255}
          example: 03-1234-5678
        phone_number_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Secondary phone number. Less than 255 characters
            jpn: |-
              電話番号2。255文字以下。

          maxLength: 255
          minLength: 0
          pattern: .{0,255}
          example: 03-9876-5432
        address:
          description: |-

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所

          allOf:
            - $ref: '#/components/schemas/V2PostGroupsAddressDto'
        tags:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group tag. Less than 255 characters
            jpn: |-
              グループタグ。255文字以下。

          maxLength: 255
          minLength: 1
          pattern: ^.{1,255}$
          example:
            - tag1
            - tag2
        custom_fields:
          description: |-

            :::x-description-i18n:
            eng: |-
              Custom fields. Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目。任意のkey、valueを設定可能（key、valueともに255文字以下）

          example:
            Label1: Value1
            Label2: Value2
          allOf:
            - $ref: '#/components/schemas/CustomFields'
      required:
        - name
    V2PostGroupsAddress:
      type: object
      properties:
        country:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Country code, in ISO 3166-1 alpha-2 format
            jpn: |-
              国名コード、ISO 3166-1 alpha-2形式

          nullable: true
          format: ISO 3166-1 alpha-2
          maxLength: 2
          example: JP
        zip_code:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Zip code
            jpn: |-
              郵便番号

          nullable: true
          example: 105-0022
        state:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県

          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
        city:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              City
            jpn: |-
              市区町村

          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
        address_1:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 1 (street number, etc)
            jpn: |-
              住所1（番地など）

          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
        address_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 2 (street number, etc)
            jpn: |-
              住所2（ビル名など）

          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2PostGroups:
      type: object
      properties:
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group ID. Format UUID
            jpn: |-
              グループID。UUID形式

          example: c8a17724-caeb-4233-b8d8-ba38690a113d
          format: uuid
        parent_group_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Parent Group ID. Format UUID
            jpn: |-
              親グループのID。UUID形式

          example: b18a99f0-4f07-40ff-94ad-b366623a84f4
          format: uuid
          nullable: true
        corporation_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Corporation ID. Format: UUID. ID of a corporation that the group belongs to
            jpn: |-
              企業のID。UUID形式。所属企業のID

          example: eb73e291-391f-4972-8617-01613b1d9831
          format: uuid
          nullable: true
        name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group Name. Corporation name if the group is a corporation
            jpn: |-
              グループの名前。企業の場合は企業名

          example: |

            :::x-example-i18n:
            eng: |-
              Sales Department
            jpn: |-
              営業部
        type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group Type

              ※```Corporation``` or ```Group```
            jpn: |-
              グループのタイプ

              ※```Corporation```または```Group```

          enum:
            - Group
        domain:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Domain
            jpn: |-
              ドメイン

          example: example.com
          nullable: true
        phone_number:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Phone Number 1
            jpn: |-
              電話番号１

          example: 03-1234-5678
          nullable: true
        phone_number_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Phone Number 2
            jpn: |-
              電話番号2

          example: 03-9876-5432
          nullable: true
        address:
          description: |-

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所

          allOf:
            - $ref: '#/components/schemas/V2PostGroupsAddress'
        tags:
          description: |-

            :::x-description-i18n:
            eng: |-
              Group tag
            jpn: |-
              タグ

          example:
            - tag1
            - tag2
          type: array
          items:
            type: string
        custom_fields:
          description: |-

            :::x-description-i18n:
            eng: |-
              Custom fields. Key-Value
            jpn: |-
              自由記述項目。任意のkey、valueを設定可能（key、valueともに255文字以下）

          example:
            Label1: Value1
            Label2: Value2
          allOf:
            - $ref: '#/components/schemas/CustomFields'
      required:
        - id
        - parent_group_id
        - corporation_id
        - name
        - type
        - domain
        - phone_number
        - phone_number_2
        - address
        - tags
    V2GroupsAddressDto:
      type: object
      properties:
        country:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード

          example: JP
          format: ISO 3166-1 alpha-2
          maxLength: 2
          minLength: 0
        zip_code:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号

          example: 105-0022
          maxLength: 255
          minLength: 0
        state:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県

          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          maxLength: 255
          minLength: 0
        city:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村

          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          maxLength: 255
          minLength: 0
        address_1:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 1(e.g. Street no.)
            jpn: |-
              住所1（番地など）

          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          maxLength: 255
          minLength: 0
        address_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 2(e.g. Building name)
            jpn: |-
              住所2（ビル名など）

          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          maxLength: 255
          minLength: 0
    V2PatchGroupsBodyDto:
      type: object
      properties:
        parent_group_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Parent group ID
            jpn: |-
              親グループID

          example: b18a99f0-4f07-40ff-94ad-b366623a84f4
          format: uuid
        name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group name, corporation name if the group is a corporation
            jpn: |-
              グループ名、企業の場合は企業名

          example: |

            :::x-example-i18n:
            eng: |-
              Sales department
            jpn: |-
              営業部
          maxLength: 255
          minLength: 1
        type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group type

              * ```Corporation```：Corporation
              * ```Group```：Group
            jpn: |-
              グループ種別

              * ```Corporation```：企業
              * ```Group```：グループ

          example: Group
        phone_number:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Primary phone number, less than 255 characters
            jpn: |-
              電話番号1、255文字以下

          example: 1-234-567-8900
          maxLength: 255
          minLength: 0
        phone_number_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Secondary phone number, less than 255 characters
            jpn: |-
              電話番号2、255文字以下

          example: 1-987-654-3210
          maxLength: 255
          minLength: 0
        address:
          description: |-

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所

          allOf:
            - $ref: '#/components/schemas/V2GroupsAddressDto'
        tags:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Tags, less than 255 characters
            jpn: |-
              タグ、255文字以下

          example:
            - tag1
            - tag2
          maxLength: 255
          minLength: 1
        custom_fields:
          description: |-

            :::x-description-i18n:
            eng: |-
              Custom fields, Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）

          example:
            labelA: valueB
            labelC: valueD
            labelE: valueF
          allOf:
            - $ref: '#/components/schemas/CustomFields'
    V2GroupsAddress:
      type: object
      properties:
        country:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国コード

          example: JP
          format: ISO 3166-1 alpha-2
          nullable: true
        zip_code:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号

          example: 105-0022
          nullable: true
        state:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県

          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          nullable: true
        city:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村

          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          nullable: true
        address_1:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 1 (street address etc)
            jpn: |-
              住所1（番地など）
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          pattern: .{0,255}
          nullable: true
        address_2:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Address 2 (building name, etc.)
            jpn: |-
              住所2（ビル名など）
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
          pattern: .{0,255}
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2PatchGroups:
      type: object
      properties:
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID

          example: c8a17724-caeb-4233-b8d8-ba38690a113d
          format: uuid
        parent_group_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Parent group ID
            jpn: |-
              親グループのID

          example: 68313db8-ce1d-4f35-a0aa-d836707c6b7c
          format: uuid
          nullable: true
        corporation_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業のID

          example: 6b8047bc-2298-4773-a431-78f7d412f56e
          nullable: true
        name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group name
            jpn: |-
              グループ名

          example: |

            :::x-example-i18n:
            eng: |-
              Sales department
            jpn: |-
              営業部
        type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group type

              * ```Group```: Group
              * ```Corporation```: Corporation
            jpn: |-
              グループのタイプ

              * ```Group```: グループ
              * ```Corporation```: 企業

          example: Group
          enum:
            - Group
            - Corporation
        domain:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Domain
            jpn: |-
              ドメイン

          example: example.com
          nullable: true
        phone_number:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Primary phone number
            jpn: |-
              電話番号1

          example: 1-234-567-8900
          nullable: true
        phone_number_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Secondary phone number
            jpn: |-
              電話番号2

          example: 1-987-654-3210
          nullable: true
        address:
          description: |-

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所

          allOf:
            - $ref: '#/components/schemas/V2GroupsAddress'
        tags:
          description: |-

            :::x-description-i18n:
            eng: |-
              Group tag
            jpn: |-
              グループタグ

          example:
            - tag1
            - tag2
          type: array
          items:
            type: string
        custom_fields:
          description: |-

            :::x-description-i18n:
            eng: |-
              Custom fields, Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）

          example:
            labelA: valueB
            labelC: valueD
            labelE: valueF
          allOf:
            - $ref: '#/components/schemas/CustomFields'
      required:
        - id
        - parent_group_id
        - corporation_id
        - name
        - type
        - domain
        - phone_number
        - phone_number_2
        - address
        - tags
    V2GetGroupsGroupAddress:
      type: object
      properties:
        country:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Country code, in ISO 3166-1 alpha-2 format
            jpn: |-
              国名コード、ISO 3166-1 alpha-2形式

          nullable: true
          format: ISO 3166-1 alpha-2
          maxLength: 2
          example: JP
        zip_code:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Zip code
            jpn: |-
              郵便番号

          nullable: true
          example: 105-0022
        state:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県

          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
        city:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              City
            jpn: |-
              市区町村

          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
        address_1:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 1 (street number, etc)
            jpn: |-
              住所1（番地など）

          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
        address_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 2 (street number, etc)
            jpn: |-
              住所2（ビル名など）

          nullable: true
          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building,
            jpn: |-
              汐留ビルディング
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2GetGroupsCustomFields:
      type: object
      properties: {}
    V2GetGroupsGroupChildren:
      type: object
      properties:
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group ID matched
              Format UUID
            jpn: |-
              子グループのID
              UUID形式

          format: uuid
        name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group name matched
            jpn: |-
              該当するグループの名前

          example: |

            :::x-example-i18n:
            eng: |-
              1st Division,
            jpn: |-
              第一課
      required:
        - id
        - name
    V2GetGroupsGroup:
      type: object
      properties:
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group ID
              Format UUID
            jpn: |-
              グループID
              UUID形式

          format: uuid
          example: c8a17724-caeb-4233-b8d8-ba38690a113d
        parent_group_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Parent Group ID
              Format UUID
            jpn: |-
              親グループのID
              UUID形式

          format: uuid
          nullable: true
          example: b18a99f0-4f07-40ff-94ad-b366623a84f4
        corporation_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Corporation ID
              Format UUID
            jpn: |-
              企業のID
              UUID形式

          format: uuid
          nullable: true
          example: eb73e291-391f-4972-8617-01613b1d9831
        name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group Name
              ※ Corporation name if the group is a corporation
            jpn: |-
              グループの名前
              ※ 企業の場合は企業名

          example: |

            :::x-example-i18n:
            eng: |-
              Sales Department
            jpn: |-
              営業部
        type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group Type

              * ```Group```： Group has type is ```Group```
              * ```Corporation```： Group has type is ```Corporation```
            jpn: |-
              グループのタイプ

              * ```Group```： グループのタイプは次のとおりです ```Group```
              * ```Corporation```： グループのタイプは次のとおりです ```Corporation```

          enum:
            - Group
            - Corporation
          example: Group
        domain:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Domain
            jpn: |-
              ドメイン

          nullable: true
          example: example.com
        phone_number:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Phone Number 1
            jpn: |-
              電話番号１

          pattern: .{1,255}
          nullable: true
          example: 03-1234-5678
        phone_number_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Phone Number 2
            jpn: |-
              電話番号２

          pattern: .{1,255}
          nullable: true
          example: 03-9876-543
        address:
          description: |-

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所

          allOf:
            - $ref: '#/components/schemas/V2GetGroupsGroupAddress'
        tags:
          description: |-

            :::x-description-i18n:
            eng: |-
              Group tag
            jpn: |-
              タグ

          example:
            - tag1
            - tag2
          type: array
          items:
            type: string
        custom_fields:
          description: |-

            :::x-description-i18n:
            eng: |-
              Free description fields
              ※Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目
              ※任意のkey、valueを設定可能（key、valueともに255文字以下）

          example:
            Label1: Value1
            Label2: Value2
          allOf:
            - $ref: '#/components/schemas/V2GetGroupsCustomFields'
        children:
          description: |-

            :::x-description-i18n:
            eng: |-
              Only shown if ```includes=children``` was provided
            jpn: |-
              リクエスト時に```includes=children```を与えた場合のみ表示

          type: array
          items:
            $ref: '#/components/schemas/V2GetGroupsGroupChildren'
      required:
        - id
        - parent_group_id
        - corporation_id
        - name
        - type
        - domain
        - phone_number
        - phone_number_2
        - address
        - tags
    V2GetGroups:
      type: object
      properties:
        total:
          type: number
          description: |-

            :::x-description-i18n:
            eng: |-
              Total number of items matched
              0 or more
            jpn: |-
              該当するデータの全件数
              グループの数

          example: 1
        groups:
          description: |-

            :::x-description-i18n:
            eng: |-
              List of groups
            jpn: |-
              該当するグループのリスト

          type: array
          items:
            $ref: '#/components/schemas/V2GetGroupsGroup'
      required:
        - total
        - groups
    V2GetGroupsGroupId:
      type: object
      properties:
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group ID
              Format UUID
            jpn: |-
              グループID
              UUID形式

          format: uuid
          example: c8a17724-caeb-4233-b8d8-ba38690a113d
        parent_group_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Parent Group ID
              Format UUID
            jpn: |-
              親グループのID
              UUID形式

          format: uuid
          nullable: true
          example: b18a99f0-4f07-40ff-94ad-b366623a84f4
        corporation_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Corporation ID
              Format UUID
            jpn: |-
              企業のID
              UUID形式

          format: uuid
          nullable: true
          example: eb73e291-391f-4972-8617-01613b1d9831
        name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group Name
              ※ Corporation name if the group is a corporation
            jpn: |-
              グループの名前
              ※ 企業の場合は企業名

          example: |

            :::x-example-i18n:
            eng: |-
              Sales Department
            jpn: |-
              営業部
        type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group Type

              * ```Group```： Group has type is ```Group```
              * ```Corporation```： Group has type is ```Corporation```
            jpn: |-
              グループのタイプ

              * ```Group```： グループのタイプは次のとおりです ```Group```
              * ```Corporation```： グループのタイプは次のとおりです ```Corporation```

          enum:
            - Group
            - Corporation
          example: Group
        domain:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Domain
            jpn: |-
              ドメイン

          nullable: true
          example: example.com
        phone_number:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Phone Number 1
            jpn: |-
              電話番号１

          pattern: .{1,255}
          nullable: true
          example: 03-1234-5678
        phone_number_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Phone Number 2
            jpn: |-
              電話番号２

          pattern: .{1,255}
          nullable: true
          example: 03-9876-543
        address:
          description: |-

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所

          allOf:
            - $ref: '#/components/schemas/V2GetGroupsGroupAddress'
        tags:
          description: |-

            :::x-description-i18n:
            eng: |-
              Group tag
            jpn: |-
              タグ

          example:
            - tag1
            - tag2
          type: array
          items:
            type: string
        custom_fields:
          description: |-

            :::x-description-i18n:
            eng: |-
              Free description fields
              ※Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目
              ※任意のkey、valueを設定可能（key、valueともに255文字以下）

          example:
            Label1: Value1
            Label2: Value2
          allOf:
            - $ref: '#/components/schemas/V2GetGroupsCustomFields'
        children:
          description: |-

            :::x-description-i18n:
            eng: |-
              Only shown if ```includes=children``` was provided
            jpn: |-
              リクエスト時に```includes=children```を与えた場合のみ表示

          type: array
          items:
            $ref: '#/components/schemas/V2GetGroupsGroupChildren'
      required:
        - id
        - parent_group_id
        - corporation_id
        - name
        - type
        - domain
        - phone_number
        - phone_number_2
        - address
        - tags
    V2PutGroupAddressDto:
      type: object
      properties:
        country:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国名コード

          example: JP
          format: ISO 3166-1 alpha-2
          nullable: true
          maxLength: 2
          minLength: 0
        zip_code:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号

          example: 105-0022
          nullable: true
          maxLength: 255
          minLength: 0
        state:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県

          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          nullable: true
          maxLength: 255
          minLength: 0
        city:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村

          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          nullable: true
          maxLength: 255
          minLength: 0
        address_1:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 1(e.g. Street no.)
            jpn: |-
              住所1（番地など）

          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
          maxLength: 255
          minLength: 0
        address_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 2(e.g. Building name)
            jpn: |-
              住所2（ビル名など）

          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          nullable: true
          maxLength: 255
          minLength: 0
    V2PutGroupsBodyDto:
      type: object
      properties:
        parent_group_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Parent group ID
            jpn: |-
              親グループID

          example: 68313db8-ce1d-4f35-a0aa-d836707c6b7c
          nullable: true
          format: uuid
        name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group name
            jpn: |-
              グループ名

          example: |

            :::x-example-i18n:
            eng: |-
              Sales department
            jpn: |-
              営業部
          maxLength: 255
          minLength: 1
        type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group type, ```Group```
            jpn: |-
              グループ種別, ```Group```

          example: Group
          nullable: true
        phone_number:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Primary phone number
            jpn: |-
              電話番号1

          example: 1-234-567-8900
          nullable: true
          maxLength: 255
          minLength: 0
        phone_number_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Secondary phone number
            jpn: |-
              電話番号2

          example: 1-987-654-3210
          nullable: true
          maxLength: 255
          minLength: 0
        address:
          description: |-

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所

          nullable: true
          allOf:
            - $ref: '#/components/schemas/V2PutGroupAddressDto'
        tags:
          description: |-

            :::x-description-i18n:
            eng: |-
              Group tag
            jpn: |-
              グループタグ

          example:
            - tag1
            - tag2
          nullable: true
          type: array
          items:
            type: string
            maxLength: 255
            minLength: 1
        custom_fields:
          description: |-

            :::x-description-i18n:
            eng: |-
              Custom fields, Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）

          example:
            labelA: valueB
            labelC: valueD
            labelE: valueF
          nullable: true
          allOf:
            - $ref: '#/components/schemas/CustomFields'
      required:
        - name
    V2PutGroupsAddress:
      type: object
      properties:
        country:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Country code
            jpn: |-
              国コード

          example: JP
          format: ISO 3166-1 alpha-2
          nullable: true
        zip_code:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Postal code
            jpn: |-
              郵便番号

          example: 105-0022
          nullable: true
        state:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              State
            jpn: |-
              都道府県

          example: |

            :::x-example-i18n:
            eng: |-
              Tokyo
            jpn: |-
              東京都
          nullable: true
        city:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              City/Town/Village
            jpn: |-
              市区町村

          example: |

            :::x-example-i18n:
            eng: |-
              Minato-ku
            jpn: |-
              港区
          nullable: true
        address_1:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 1(e.g. Street no.)
            jpn: |-
              住所1（番地など）

          example: |

            :::x-example-i18n:
            eng: |-
              1-2-20, Kaigan,
            jpn: |-
              海岸1-2-20
          nullable: true
        address_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Address 2(e.g. Building name)
            jpn: |-
              住所2（ビル名など）

          example: |

            :::x-example-i18n:
            eng: |-
              Shiodome Building
            jpn: |-
              汐留ビルディング
          nullable: true
      required:
        - country
        - zip_code
        - state
        - city
        - address_1
        - address_2
    V2PutGroups:
      type: object
      properties:
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group ID
            jpn: |-
              グループID

          example: c8a17724-caeb-4233-b8d8-ba38690a113d
          format: uuid
        corporation_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Corporation ID
            jpn: |-
              企業のID

          example: 6b8047bc-2298-4773-a431-78f7d412f56e
          nullable: true
        parent_group_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Parent group ID
            jpn: |-
              親グループのID

          example: 68313db8-ce1d-4f35-a0aa-d836707c6b7c
          format: uuid
          nullable: true
        type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group type

              * ```Group```: Group
              * ```Corporation```: Corporation
            jpn: |-
              グループのタイプ

              * ```Group```: グループ
              * ```Corporation```: 企業

          example: Group
          enum:
            - Group
            - Corporation
        name:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Group name
            jpn: |-
              グループ名

          example: |

            :::x-example-i18n:
            eng: |-
              Sales department
            jpn: |-
              営業部
        domain:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Domain
            jpn: |-
              ドメイン

          example: example.com
          nullable: true
        phone_number:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Primary phone number
            jpn: |-
              電話番号1

          example: 1-234-567-8900
          nullable: true
        phone_number_2:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Secondary phone number
            jpn: |-
              電話番号2

          example: 1-987-654-3210
          nullable: true
        address:
          description: |-

            :::x-description-i18n:
            eng: |-
              Address
            jpn: |-
              住所

          allOf:
            - $ref: '#/components/schemas/V2PutGroupsAddress'
        tags:
          description: |-

            :::x-description-i18n:
            eng: |-
              Group tag
            jpn: |-
              グループタグ

          example:
            - tag1
            - tag2
          type: array
          items:
            type: string
        custom_fields:
          description: |-

            :::x-description-i18n:
            eng: |-
              Custom fields, Key-Value (key and value both must be less than 255 characters)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）

          example:
            labelA: valueB
            labelC: valueD
            labelE: valueF
          allOf:
            - $ref: '#/components/schemas/CustomFields'
      required:
        - id
        - corporation_id
        - parent_group_id
        - type
        - name
        - domain
        - phone_number
        - phone_number_2
        - address
        - tags
    V2PostGroupsGroupIdInvitesBodyDto:
      type: object
      properties:
        email:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Email address
            jpn: |-
              メールアドレス
          example: taro.langlog@landlog.co.jp
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Permissions within the invited group, ```super_admin```, ```admin```, ```manager```, ```staff```, If unspecified, ```staff``` will be set
            jpn: |-
              招待するグループ内での権限、```super_admin```、```admin```、```manager```、```staff```、未指定の場合は ```staff``` が設定される
          enum:
            - super_admin
            - admin
            - manager
            - staff
          default: staff
      required:
        - email
    V2PostGroupsGroupIdInvites:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Group member ID
            jpn: |-
              グループメンバーID
        user_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              User ID of a group member
            jpn: |-
              グループメンバーになっているユーザーのID
        role:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Role of member in the group
            jpn: |-
              メンバーのグループ内での権限
          enum:
            - super_admin
            - admin
            - manager
            - staff
        category:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Group joining form
              * ```guest```: when joining a group
              * ```member```: when a user belongs to a group
            jpn: |-
              ユーザーの参加形態
              * ```guest```: グループに参加する場合
              * ```member```: ユーザーがグループに所属している場合
          enum:
            - member
            - guest
        invited:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation status
              * ```true```: pending
              * ```false```: Accepted invitation
            jpn: |-
              招待ステータス
              * ```true```: 招待中のとき
              * ```false```: 招待承諾済み
      required:
        - id
        - user_id
        - role
        - category
        - invited
    V2PatchGroupsGroupIdInvitesInviteCodeBodyDto:
      type: object
      properties:
        accept:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Approval flag, ```true``` is approved, ```false``` is rejected
            jpn: |-
              承認フラグ、```true```は承認、```false```は拒否
      required:
        - accept
    V2GetGroupsGroupIdInvitesInvite:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation ID
            jpn: |-
              招待ID
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        user_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              User ID
            jpn: |-
              ユーザーID
          example: a169451c-8525-4352-b8ca-070dd449a1a5
        status:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Invitation status
              * ```accept```: Accepted
              * ```pending```: On hold
              * ```expired```: Expired
            jpn: |-
              招待ステータス
              * ```accept```: 承認済み
              * ```pending```: 保留中
              * ```expired```: 期限切れ
          enum:
            - accept
            - pending
            - expired
          example: accept
      required:
        - id
        - user_id
        - status
    V2GetGroupsGroupIdInvites:
      type: object
      properties:
        total:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of applicable data
            jpn: |-
              該当するデータの全件数
          example: 1
        invites:
          description: |

            :::x-description-i18n:
            eng: |-
              List of applicable invitations
            jpn: |-
              該当する招待のリスト
          type: array
          items:
            $ref: '#/components/schemas/V2GetGroupsGroupIdInvitesInvite'
      required:
        - total
        - invites
    V2GetScopesEntity:
      type: object
      properties:
        all:
          type: array
          items:
            type: string
        client:
          type: array
          items:
            type: string
        web:
          type: array
          items:
            type: string
        device:
          type: array
          items:
            type: string
        native:
          type: array
          items:
            type: string
        js:
          type: array
          items:
            type: string
        webclient:
          type: array
          items:
            type: string
      required:
        - all
        - client
        - web
        - device
        - native
        - js
        - webclient
    V2PostClientBodyDto:
      type: object
      properties:
        display_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client display name
            jpn: |-
              クライアント表示名
          example: example display name
          minLength: 0
          maxLength: 255
        active:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Whether the client is active or not
              * ```true```: active
              * ```false```: inactive
            jpn: |-
              クライアントの有効/無効
              * ```true```: 有効
              * ```false```: 無効
        redirect_uris:
          description: |

            :::x-description-i18n:
            eng: |-
              Redirect URI, required unless application_types=device or client.
            jpn: |-
              リダイレクトURI。application_types=device or client の場合以外必須。
          example:
            - https://example/oauth2/callback
          nullable: true
          type: array
          items:
            type: string
        js_origins:
          description: |

            :::x-description-i18n:
            eng: |-
              For JavaScript apps, specify Origin; required if application_types=js.
            jpn: |-
              JavaScriptアプリの場合、Originを指定。application_types=js の場合必須。
          example: []
          nullable: true
          type: array
          items:
            type: string
        application_types:
          example:
            - web
          description: |

            :::x-description-i18n:
            eng: |-
              Application type
            jpn: |-
              アプリケーションタイプ
          type: array
          items:
            type: string
        public_key:
          type: string
          example: |
            -----BEGIN PUBLIC KEY...END PUBLIC KEY-----
          description: |

            :::x-description-i18n:
            eng: |-
              Public key, can be specified if application_types=device.
            jpn: |-
              公開鍵。application_types=device の場合に指定可能。
          nullable: true
        scope:
          example:
            - openid
            - user.read
            - user.write
          description: |

            :::x-description-i18n:
            eng: |-
              API scope required by the client
            jpn: |-
              クライアントが必要とするAPIスコープ
          nullable: true
          type: array
          items:
            type: string
        developer_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Developer Identifier
            jpn: |-
              デベロッパーの識別子
          example: 656994d3-ac39-406d-8e2b-4cdeb0692696
          minLength: 0
          maxLength: 255
        website:
          type: string
          example: https://www.example
          description: |

            :::x-description-i18n:
            eng: |-
              Web site URL of the application
            jpn: |-
              アプリケーションのWebサイトURL
          minLength: 0
          maxLength: 255
          nullable: true
        tos_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              URL for Terms of Use
            jpn: |-
              利用規約のURL
          example: https://www.example.co.jp
          minLength: 0
          maxLength: 255
        policy_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Privacy Policy URL
            jpn: |-
              プライバシーポリシーのURL
          example: https://www.example.co.jp/privacy
          minLength: 0
          maxLength: 255
          nullable: true
        icon:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Application Icon
            jpn: |-
              アプリケーションのアイコン
          example: VGhpcyBpcyBsaW5...lIG9uZQpUaGlzIG
        notification_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              URL to receive event notifications
            jpn: |-
              イベント通知を受けとるURL
          example: https://example/events
          minLength: 0
          maxLength: 255
          nullable: true
      required:
        - display_name
        - active
        - application_types
        - scope
        - developer_id
    V2PostClient:
      type: object
      properties:
        display_name:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              Client display name
            jpn: |-
              クライアント表示名
          example: example display name
        client_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID
          example: 7ce7399b-3fb5-4e4c-8f0e-75e9d5b256e4
        client_secret:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client secret
            jpn: |-
              クライアントシークレット
          example: 6c6cbda80d72644e0c3d1dc67462cc863b764933a3d3e5ced0863860f1d7b011
        active:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Whether the client is active or not
              * ```true```: active
              * ```false```: inactive
            jpn: |-
              クライアントの有効/無効
              * ```true```: 有効
              * ```false```: 無効
          example: 'true'
        redirect_uris:
          description: |

            :::x-description-i18n:
            eng: |-
              Redirect URI, required unless application_types=device or client.
            jpn: |-
              リダイレクトURI。application_types=device or client の場合以外必須。
          example:
            - https://example/oauth2/callback
          nullable: true
          type: array
          items:
            type: string
        js_origins:
          description: |

            :::x-description-i18n:
            eng: |-
              For JavaScript apps, specify Origin; required if application_types=js.
            jpn: |-
              JavaScriptアプリの場合、Originを指定。application_types=js の場合必須。
          example: []
          nullable: true
          type: array
          items:
            type: string
        application_types:
          description: |

            :::x-description-i18n:
            eng: |-
              Application type
            jpn: |-
              アプリケーションタイプ
          example:
            - web
          type: array
          items:
            type: string
        scope:
          description: |

            :::x-description-i18n:
            eng: |-
              API scope
            jpn: |-
              APIスコープ
          example:
            - openid
            - user.read
            - user.write
          type: array
          items:
            type: string
        developer_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Developer Identifier
            jpn: |-
              デベロッパーの識別子
          example: 656994d3-ac39-406d-8e2b-4cdeb0692696
        website:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              Web site URL of the application
            jpn: |-
              アプリケーションのWebサイトURL
          example: https://www.example
          nullable: true
        tos_url:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              URL for Terms of Use
            jpn: |-
              利用規約のURL
          example: https://www.example
          nullable: true
        policy_url:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              Privacy Policy URL
            jpn: |-
              プライバシーポリシーのURL
          example: https://www.privacy
          nullable: true
        icon_url:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              Application Icons
            jpn: |-
              アプリケーションのアイコン
          example: https://img.example/icon.png
          nullable: true
        pkey_fingerprint:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Public key, can be specified if application_types=device.
            jpn: |-
              公開鍵。application_types=device の場合に指定可能。
          example: 2b:d8:46:b3:6e:27:f6:23:2e:2b:da:64:e1:c9:f0:62
          nullable: true
        notification_url:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              URL to receive event notifications
            jpn: |-
              イベント通知を受けとるURL
          example: https://notification
          nullable: true
      required:
        - display_name
        - client_id
        - client_secret
        - active
        - redirect_uris
        - js_origins
        - application_types
        - scope
        - developer_id
        - website
        - tos_url
        - policy_url
        - icon_url
        - pkey_fingerprint
        - notification_url
    V2GetClientsClientId:
      type: object
      properties:
        display_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client display name
            jpn: |-
              クライアント表示名
          example: example display name
        client_id:
          type: string
          format: uuid
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID
          example: 7ce7399b-3fb5-4e4c-8f0e-75e9d5b256e4
        client_secret:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client secret
            jpn: |-
              クライアントシークレット
          example: 6c6cbda80d72644e0c3d1dc67462cc863b764933a3d3e5ced0863860f1d7b011
        active:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Whether the client is active or not
              * ```true```: active
              * ```false```: inactive
            jpn: |-
              クライアントの有効/無効
              * ```true```: 有効
              * ```false```: 無効
          example: 'true'
        redirect_uris:
          description: |

            :::x-description-i18n:
            eng: |-
              Redirect URI
            jpn: |-
              リダイレクトURI
          example:
            - https://example/oauth2/callback
          nullable: true
          type: array
          items:
            type: string
        js_origins:
          description: |

            :::x-description-i18n:
            eng: |-
              For JavaScript apps, specify the origin
            jpn: |-
              JavaScriptアプリの場合、Originを指定
          example: []
          nullable: true
          type: array
          items:
            type: string
        application_types:
          description: |

            :::x-description-i18n:
            eng: |-
              Application type
            jpn: |-
              アプリケーションタイプ
          example:
            - web
          type: array
          items:
            type: string
        pkey_fingerprint:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Public key
            jpn: |-
              公開鍵
          example: 2b:d8:46:b3:6e:27:f6:23:2e:2b:da:64:e1:c9:f0:62
          nullable: true
        scope:
          description: |

            :::x-description-i18n:
            eng: |-
              API scope required by client
            jpn: |-
              クライアントが必要とするAPIスコープ
          example:
            - openid
            - user.read
            - user.write
          type: array
          items:
            type: string
        developer_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Developer identifier
            jpn: |-
              デベロッパーの識別子
          example: 656994d3-ac39-406d-8e2b-4cdeb0692696
        website:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Application website URL
            jpn: |-
              アプリケーションのWebサイトURL
          example: https://www.example
          nullable: true
        tos_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Terms of Use URL
            jpn: |-
              利用規約のURL
          example: https://www.example
          nullable: true
        policy_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Privacy policy URL
            jpn: |-
              プライバシーポリシーのURL
          example: https://www.example/privacy
          nullable: true
        icon_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Application icon URL
            jpn: |-
              アプリケーションアイコンのURL
          example: https://img.example/icon.png
          nullable: true
        notification_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              URL to receive event notifications
            jpn: |-
              イベント通知を受けとるURL
          example: https://example
          nullable: true
      required:
        - display_name
        - client_id
        - client_secret
        - active
        - redirect_uris
        - js_origins
        - application_types
        - pkey_fingerprint
        - scope
        - developer_id
        - website
        - tos_url
        - policy_url
        - icon_url
        - notification_url
    V2PatchOauth2ClientsClientIdBodyDto:
      type: object
      properties:
        display_name:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client display name
            jpn: |-
              クライアント表示名
          example: example display name
          minLength: 0
          maxLength: 255
        active:
          type: boolean
          description: |

            :::x-description-i18n:
            eng: |-
              Whether the client is active or not
              * ```true```: active
              * ```false```: inactive
            jpn: |-
              クライアントの有効/無効
              * ```true```: 有効
              * ```false```: 無効
        redirect_uris:
          description: |

            :::x-description-i18n:
            eng: |-
              Redirect URI, required unless application_types=device or client.
            jpn: |-
              リダイレクトURI。application_types=device or client の場合以外必須。
          example:
            - https://example/oauth2/callback
          nullable: true
          type: array
          items:
            type: string
        js_origins:
          description: |

            :::x-description-i18n:
            eng: |-
              For JavaScript apps, specify Origin; required if application_types=js.
            jpn: |-
              JavaScriptアプリの場合、Originを指定。application_types=js の場合必須。
          example: []
          nullable: true
          type: array
          items:
            type: string
        application_types:
          description: |

            :::x-description-i18n:
            eng: |-
              Application type
            jpn: |-
              アプリケーションタイプ
          example:
            - web
          type: array
          items:
            type: string
        public_key:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Public key, can be specified if application_types=device.
            jpn: |-
              公開鍵。application_types=device の場合に指定可能。
          example: |
            -----BEGIN PUBLIC KEY...END PUBLIC KEY-----
          nullable: true
        scope:
          description: |

            :::x-description-i18n:
            eng: |-
              API scope required by the client
            jpn: |-
              クライアントが必要とするAPIスコープ
          example:
            - openid
            - user.read
            - user.write
          nullable: true
          type: array
          items:
            type: string
        developer_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Developer Identifier
            jpn: |-
              デベロッパーの識別子
          example: 656994d3-ac39-406d-8e2b-4cdeb0692696
          minLength: 0
          maxLength: 255
        website:
          type: string
          example: https://www.example
          description: |

            :::x-description-i18n:
            eng: |-
              Web site URL of the application
            jpn: |-
              アプリケーションのWebサイトURL
          minLength: 0
          maxLength: 255
          nullable: true
        tos_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              URL for Terms of Use
            jpn: |-
              利用規約のURL
          example: https://www.example
          minLength: 0
          maxLength: 255
        policy_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Privacy Policy URL
            jpn: |-
              プライバシーポリシーのURL
          example: https://www.example/privacy
          minLength: 0
          maxLength: 255
          nullable: true
        icon:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Application Icons
            jpn: |-
              アプリケーションのアイコン
          example: VGhpcyBpcyBsaW5...lIG9uZQpUaGlzIG
        notification_url:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              URL to receive event notifications
            jpn: |-
              イベント通知を受けとるURL
          example: https://example/events
          minLength: 0
          maxLength: 255
          nullable: true
    V2PatchClientsClientId:
      type: object
      properties:
        display_name:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              Client display name
            jpn: |-
              クライアント表示名
          example: example display name
        client_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID
          example: 7ce7399b-3fb5-4e4c-8f0e-75e9d5b256e4
        client_secret:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client secret
            jpn: |-
              クライアントシークレット
          example: 6c6cbda80d72644e0c3d1dc67462cc863b764933a3d3e5ced0863860f1d7b011
        active:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Whether the client is active or not
              * ```true```: active
              * ```false```: inactive
            jpn: |-
              クライアントの有効/無効
              * ```true```: 有効
              * ```false```: 無効
          example: 'true'
        redirect_uris:
          description: |

            :::x-description-i18n:
            eng: |-
              Redirect URI, required unless application_types=device or client.
            jpn: |-
              リダイレクトURI。application_types=device or client の場合以外必須。
          example:
            - https://example/oauth2/callback
          nullable: true
          type: array
          items:
            type: string
        js_origins:
          description: |

            :::x-description-i18n:
            eng: |-
              For JavaScript apps, specify Origin; required if application_types=js.
            jpn: |-
              JavaScriptアプリの場合、Originを指定。application_types=js の場合必須。
          example: []
          nullable: true
          type: array
          items:
            type: string
        application_types:
          description: |

            :::x-description-i18n:
            eng: |-
              Application type
            jpn: |-
              アプリケーションタイプ
          example:
            - web
          type: array
          items:
            type: string
        scope:
          description: |

            :::x-description-i18n:
            eng: |-
              API scope
            jpn: |-
              APIスコープ
          example:
            - openid
            - user.read
            - user.write
          type: array
          items:
            type: string
        developer_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Developer Identifier
            jpn: |-
              デベロッパーの識別子
          example: 656994d3-ac39-406d-8e2b-4cdeb0692696
        website:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              Web site URL of the application
            jpn: |-
              アプリケーションのWebサイトURL
          example: https://www.example
          nullable: true
        tos_url:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              URL for Terms of Use
            jpn: |-
              利用規約のURL
          example: https://www.example
          nullable: true
        policy_url:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              Privacy Policy URL
            jpn: |-
              プライバシーポリシーのURL
          example: https://www.example/privacy
          nullable: true
        icon_url:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              Application Icons
            jpn: |-
              アプリケーションのアイコン
          example: https://img.example/icon.png
          nullable: true
        pkey_fingerprint:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Public key, can be specified if application_types=device.
            jpn: |-
              公開鍵。application_types=device の場合に指定可能。
          example: 2b:d8:46:b3:6e:27:f6:23:2e:2b:da:64:e1:c9:f0:62
          nullable: true
        notification_url:
          type: string
          pattern: .{1,255}
          description: |

            :::x-description-i18n:
            eng: |-
              URL to receive event notifications
            jpn: |-
              イベント通知を受けとるURL
          example: https://example
          nullable: true
      required:
        - display_name
        - client_id
        - client_secret
        - active
        - redirect_uris
        - js_origins
        - application_types
        - scope
        - developer_id
        - website
        - tos_url
        - policy_url
        - icon_url
        - pkey_fingerprint
        - notification_url
    V2ListOauth2Clients:
      type: object
      properties:
        total:
          type: number
          description: |-

            :::x-description-i18n:
            eng: |-
              Total number of applicable data
            jpn: |-
              該当するデータの全件数

          example: 1
        clients:
          description: |-

            :::x-description-i18n:
            eng: |-
              List of client
            jpn: |-
              クライアントのリスト

          type: array
          items:
            $ref: '#/components/schemas/V2GetClientsClientId'
      required:
        - total
        - clients
    V2PostSubscriptionsOwnerDto:
      type: object
      properties:
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Owner type, Corporation: Corporation, User: User

            jpn: |-
              オーナー種別, Corporation: 企業 User: ユーザー
          enum:
            - Corporation
            - User
          example: Corporation
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Owner ID, UUID of ```Corporation```, or ```User```

            jpn: |-
              オーナーID, ```Corporation```または```User```のUUID
          format: uuid
      required:
        - type
        - id
    V2PostSubscriptionsItemDto:
      type: object
      properties:
        item_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Item ID, less than 255 characters

            jpn: |-
              商材ID, 255文字以下
          example: a0b8a1ff-5587-433e-bb07-6a5fb4589780
          maxLength: 255
          minLength: 1
        plan_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Plan ID, less than 255 characters

            jpn: |-
              プランID, 255文字以下
          example: a0b8a1ff-5587-433e-bb07-6a5fb4589781
          maxLength: 255
          minLength: 1
        client_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID

            jpn: |-
              クライアントID
          example: 7ce7399b-3fb5-4e4c-8f0e-75e9d5b256e4
          nullable: true
          format: string
          maxLength: 255
          minLength: 0
      required:
        - item_id
        - plan_id
    V2PostSubscriptionsBodyDto:
      type: object
      properties:
        owner:
          description: |

            :::x-description-i18n:
            eng: |-
              Owner

            jpn: |-
              オーナー
          allOf:
            - $ref: '#/components/schemas/V2PostSubscriptionsOwnerDto'
        provider_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Provider ID

            jpn: |-
              プロバイダID
          example: cf221ab7-9272-48e9-b8ce-433397744185
          nullable: true
          format: uuid
        quantity:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              Quantity, either ```quantity``` or ```unit``` is required 2147483647 or less, if ```contract_type``` is outright, ```quantity``` is checked, so ```quantity``` is required

            jpn: |-
              数量, ```quantity```もしくは```unit```のどちらかが必須 2147483647以下, ```contract_type```が```outright```の場合は数量チェックを行うので```quantity```が必須
          nullable: true
          maximum: 2147483647
          minimum: 0
        unit:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Unit, either ```quantity``` or ```unit``` is required, 255 characters or less

            jpn: |-
              単位, ```quantity```もしくは```unit```のどちらかが必須, 255文字以下
          example: number
          nullable: true
          maxLength: 255
          minLength: 0
        contract_type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contract type

              * ```outright```: outright purchase,
              * ```prepaid```: prepaid,
              * ```automatic_updating_flat_rate```: Automatic continuation (fixed),
              * ```automatic_updating_measured_rate```: Automatic continuation (measured)


            jpn: |-
              契約の種別

              * ```outright```: 買い切り,
              * ```prepaid```: プリペイド,
              * ```automatic_updating_flat_rate```: 自動継続(固定),
              * ```automatic_updating_measured_rate```: 自動継続(従量)
          example: outright
          enum:
            - outright
            - prepaid
            - automatic_updating_flat_rate
            - automatic_updating_measured_rate
        license_type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License type

              * ```Corporation```: Corporation,
              * ```User```: User,
              * ```Device```: Device,
              * ```Assignless```: No license assignment required

            jpn: |-
              ライセンス種別

              * Corporation```: 企業,
              * ```User```: ユーザー,
              * ```Device```: デバイス,
              * ```Assignless```: ライセンス割当て不要
          example: Corporation
          enum:
            - Corporation
            - User
            - Device
            - Assignless
        span_type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Automatic update span type

              * ```daily```, ```weekly```, ```monthl```", ```yearly``` Required if ```contract_type``` is automatic continuation

            jpn: |-
              自動更新スパンの種別

              * ```daily```,```weekly```,```monthly```,```yearly``` ```contract_type```が自動継続の場合は必須
          example: monthly
          nullable: true
          enum:
            - daily
            - weekly
            - monthly
            - yearly
        span_number:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              Period of automatic renewal span, required if ```contract_type``` is automatic renewal

            jpn: |-
              自動更新スパンの期間, ```contract_type```が自動継続の場合は必須
          example: 1
          nullable: true
          maximum: 2147483647
          minimum: 0
        status:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              status

              * ```active```: active
              * ```inactive```: inactive
              * ```owner_absent```: owner absent
              * ```suspend```: suspend
            jpn: |-
              ステータス

              * ```active```: 有効
              * ```inactive```: 無効
              * ```owner_absent```: 所有者不在
              * ```suspend```: 一時停止
          enum:
            - active
            - inactive
            - owner_absent
            - suspend
        purchased_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Purchase date and time

            jpn: |-
              購入日時
          example: 2017-01-01T00:00:00z
          format: ISO8601
        issued_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Publication date and time

            jpn: |-
              発行日時
          example: 2017-01-01T00:00:00z
          format: ISO8601
        expires_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Expiration date and time

            jpn: |-
              期限切れ日時
          example: 2017-01-01T00:00:00z
          format: ISO8601
          nullable: true
        custom_fields:
          type: array
          description: |

            :::x-description-i18n:
            eng: |-
              It is possible to set arbitrary key-value pairs in free-form fields (both key and value must be 255 characters or less)

            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）
          nullable: true
        items:
          description: |

            :::x-description-i18n:
            eng: |-
              Product information

            jpn: |-
              商材情報
          type: array
          items:
            $ref: '#/components/schemas/V2PostSubscriptionsItemDto'
      required:
        - owner
        - contract_type
        - license_type
        - status
        - purchased_at
        - issued_at
        - items
    V2PostSubscriptionsOwner:
      type: object
      properties:
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Owner type

            jpn: |-
              オーナー種別
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Owner ID

            jpn: |-
              オーナーID
          format: uuid
          nullable: true
      required:
        - type
        - id
    V2PostSubscriptionsItem:
      type: object
      properties:
        item_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Item ID

            jpn: |-
              商材ID
        plan_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Plan ID

            jpn: |-
              プランID
        client_id:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID

            jpn: |-
              クライアントID
          format: uuid
      required:
        - item_id
        - plan_id
        - client_id
    V2PostSubscriptions:
      type: object
      properties:
        id:
          type: string
          description: ID
          format: uuid
        owner:
          description: |

            :::x-description-i18n:
            eng: |-
              Owner

            jpn: |-
              オーナー
          example:
            type: Corporation
            id: c8a17724-caeb-4233-b8d8-ba38690a113d
          allOf:
            - $ref: '#/components/schemas/V2PostSubscriptionsOwner'
        provider_id:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Provider ID

            jpn: |-
              プロバイダID
          format: uuid
        quantity:
          type: number
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Quantity

            jpn: |-
              数量
        unit:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Unit

            jpn: |-
              数量
          example: number
        contract_type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contract type

            jpn: |-
              契約の種別
          example: outright
        license_type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License type

            jpn: |-
              ライセンス種別
          example: Corporation
        span_type:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Automatic update span type

            jpn: |-
              自動更新スパンの種別
          example: monthly
        span_number:
          type: number
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Auto update span number

            jpn: |-
              自動更新スパンの期間
          example: 1
        status:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Status

              * ```active```: active
              * ```inactive```: inactive
              * ```owner_absent```: owner absent
              * ```suspend```: suspend
            jpn: |-
              ステータス

              * ```active```: 有効
              * ```inactive```: 無効
              * ```owner_absent```: 所有者不在
              * ```suspend```: 一時停止
          example: active
          enum:
            - active
            - inactive
            - owner_absent
            - suspend
        purchased_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Purchase date and time
            jpn: |-
              購入日時
          format: ISO8601
          example: 2017-01-01T00:00:00z
        issued_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Publication date and time

            jpn: |-
              発行日時
          example: 2017-01-01T00:00:00z
          format: ISO8601
        expires_at:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Expiration date and time

            jpn: |-
              期限切れ日時
          example: 2017-01-01T00:00:00z
          format: ISO8601
        status_change_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Status update date and time

            jpn: |-
              ステータス更新日時
          example: 2017-01-01T00:00:00z
          format: ISO8601
        custom_fields:
          type: array
          description: |

            :::x-description-i18n:
            eng: |-
              Free description field, arbitrary key and value can be set (both key and value 255 characters or less)

            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）
        items:
          description: |

            :::x-description-i18n:
            eng: |-
              Product information

            jpn: |-
              オーナー
          example:
            - item_id: a0b8a1ff-5587-433e-bb07-6a5fb4589780
              plan_id: 26c36962-ef6a-4f28-8857-ad9680acfb22
              client_id: 7ce7399b-3fb5-4e4c-8f0e-75e9d5b256e4
          type: array
          items:
            $ref: '#/components/schemas/V2PostSubscriptionsItem'
      required:
        - id
        - owner
        - provider_id
        - quantity
        - unit
        - contract_type
        - license_type
        - span_type
        - span_number
        - status
        - purchased_at
        - issued_at
        - expires_at
        - status_change_at
        - items
    V2PutSubscriptionsOwnerDto:
      type: object
      properties:
        type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Owner Type

              * ```Corporation```: Corporation
              * ```User```: User
            jpn: |-
              オーナー種別

              * ```Corporation```: 企業
              * ```User```: ユーザー

          example: Corporation
          enum:
            - Corporation
            - User
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Owner ID, UUID of ```Corporation``` or ```User```
            jpn: |-
              オーナーID, ```Corporation```または```User```のUUID

          example: c8a17724-caeb-4233-b8d8-ba38690a113d
          format: uuid
      required:
        - type
        - id
    V2PutSubscriptionsItemDto:
      type: object
      properties:
        item_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Item ID, less than 255 characters
            jpn: |-
              商材ID, 255文字以下

          example: a0b8a1ff-5587-433e-bb07-6a5fb4589780
          maxLength: 255
          minLength: 1
        plan_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Plan ID, less than 255 characters
            jpn: |-
              プランID, 255文字以下

          example: 26c36962-ef6a-4f28-8857-ad9680acfb22
          maxLength: 255
          minLength: 1
        client_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID

          example: 7ce7399b-3fb5-4e4c-8f0e-75e9d5b256e4
          nullable: true
          maxLength: 255
          minLength: 0
      required:
        - item_id
        - plan_id
    V2PutSubscriptionsBodyDto:
      type: object
      properties:
        owner:
          description: |-

            :::x-description-i18n:
            eng: |-
              Owner
            jpn: |-
              オーナー

          allOf:
            - $ref: '#/components/schemas/V2PutSubscriptionsOwnerDto'
        provider_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Provider ID
            jpn: |-
              プロバイダーID

          example: cf221ab7-9272-48e9-b8ce-433397744185
          nullable: true
          format: uuid
        quantity:
          type: number
          description: |-

            :::x-description-i18n:
            eng: |-
              Number
              ```quantity``` or ```unit``` is required 2147483647 or less
              if ```contract_type``` is ```outright```, ```quantity``` is required
            jpn: |-
              数量
              ```quantity```もしくは```unit```のどちらかが必須 2147483647以下
              ```contract_type```が```outright```の場合は数量チェックを行うので```quantity```が必須

          example: 1
          nullable: true
          maximum: 2147483647
          minimum: 0
        unit:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Unit, either ```quantity``` or ```unit``` is required, 255 characters or less
            jpn: |-
              単位, ```quantity```もしくは```unit```のどちらかが必須, 255文字以下

          example: '1'
          nullable: true
          maxLength: 255
          minLength: 0
        contract_type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Contract Type

              * ```outright```: outright purchase
              * ```prepaid```: prepaid
              * ```automatic_updating_flat_rate```: Automatic continuation (fixed)
              * ```automatic_updating_measured_rate```: Automatic continuation (measured)
            jpn: |-
              契約の種別

              * ```outright```: 買い切り
              * ```prepaid```: プリペイド
              * ```automatic_updating_flat_rate```: 自動継続(固定)
              * ```automatic_updating_measured_rate```: 自動継続(従量)

          example: outright
          enum:
            - outright
            - prepaid
            - automatic_updating_flat_rate
            - automatic_updating_measured_rate
        license_type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              License Type

              * ```Corporation```: Corporation
              * ```User```: User
              * ```Device```: Device
              * ```Assignless```: Assignless
            jpn: |-
              ライセンス種別

              * ```Corporation```: 企業
              * ```User```: ユーザー
              * ```Device```: デバイス
              * ```Assignless```: ライセンス割当て不要

          example: Corporation
          enum:
            - Corporation
            - User
            - Device
            - Assignless
        span_type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Automatic update span type

              * ```daily```: daily
              * ```weekly```: weekly
              * ```monthly```: monthly
              * ```yearly```: yearly

              ※ Required if ```contract_type``` is automatic renewal
            jpn: |-
              自動更新スパンの種別

              * ```daily```: 毎日
              * ```weekly```: 毎週
              * ```monthly```: 毎月
              * ```yearly```: 毎年

              ※ ```contract_type```が自動継続の場合は必須

          example: monthly
          nullable: true
          enum:
            - daily
            - weekly
            - monthly
            - yearly
        span_number:
          type: number
          description: |-

            :::x-description-i18n:
            eng: |-
              Period of automatic renewal span, required if ```contract_type``` is automatic renewal
            jpn: |-
              自動更新スパンの期間, contract_typeが自動継続の場合は必須

          example: 1
          nullable: true
          maximum: 2147483647
          minimum: 0
        status:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Status
              * ```active```: active
              * ```inactive```: inactive
              * ```owner_absent```: owner absent
              * ```suspend```: suspend
            jpn: |-
              ステータス
              * ```active```: 有効
              * ```inactive```: 無効
              * ```owner_absent```: 所有者不在
              * ```suspend```: 一時停止
          example: active
          enum:
            - active
            - inactive
            - owner_absent
            - suspend
        purchased_at:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Purchase date and time
            jpn: |-
              購入日時

          format: ISO8601
          example: 2017-01-01T00:00:00z
        issued_at:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Publication date and time
            jpn: |-
              発行日時

          format: ISO8601
          example: 2017-01-01T00:00:00z
        expires_at:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Expiration date and time
            jpn: |-
              期限切れ日時

          format: ISO8601
          example: string
          nullable: true
        items:
          description: |-

            :::x-description-i18n:
            eng: |-
              Product information
            jpn: |-
              商材情報

          type: array
          items:
            $ref: '#/components/schemas/V2PutSubscriptionsItemDto'
        custom_fields:
          description: |-

            :::x-description-i18n:
            eng: |-
              Custom fields
            jpn: |-
              自由記述項目

          example:
            label1: value1
            label2: value2
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
      required:
        - owner
        - contract_type
        - license_type
        - status
        - purchased_at
        - issued_at
        - items
    V2PutSubscriptionsOwner:
      type: object
      properties:
        type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Owner Type

              * ```Corporation```: Corporation
              * ```User```: User
            jpn: |-
              オーナー種別

              * ```Corporation```: 企業
              * ```User```: ユーザー

          example: Corporation
          enum:
            - Corporation
            - User
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Owner ID
            jpn: |-
              オーナーID

          example: c8a17724-caeb-4233-b8d8-ba38690a113d
          format: uuid
          nullable: true
      required:
        - type
        - id
    V2PutSubscriptionsItem:
      type: object
      properties:
        item_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Item ID
            jpn: |-
              商材ID

          example: a0b8a1ff-5587-433e-bb07-6a5fb4589780
        plan_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Plan ID
            jpn: |-
              プランID

          example: 26c36962-ef6a-4f28-8857-ad9680acfb22
        client_id:
          type: string
          nullable: true
          description: |-

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID

          example: 7ce7399b-3fb5-4e4c-8f0e-75e9d5b256e4
      required:
        - item_id
        - plan_id
        - client_id
    V2PutSubscriptions:
      type: object
      properties:
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプションID

          example: 9bf9c8fc-9f28-48d5-b2f9-e011aecdeb6e
          format: uuid
        owner:
          description: |-

            :::x-description-i18n:
            eng: |-
              Owner
            jpn: |-
              オーナー

          allOf:
            - $ref: '#/components/schemas/V2PutSubscriptionsOwner'
        provider_id:
          type: string
          nullable: true
          description: |-

            :::x-description-i18n:
            eng: |-
              Provider ID
            jpn: |-
              プロバイダID

          example: cf221ab7-9272-48e9-b8ce-433397744185
          format: uuid
        quantity:
          type: number
          nullable: true
          description: |-

            :::x-description-i18n:
            eng: |-
              Quantity
            jpn: |-
              数量

          example: '10'
        unit:
          type: string
          nullable: true
          description: |-

            :::x-description-i18n:
            eng: |-
              Unit
            jpn: |-
              単位

          example: number
        contract_type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Contract Type

              * ```outright```: outright purchase
              * ```prepaid```: prepaid
              * ```automatic_updating_flat_rate```: Automatic continuation (fixed)
              * ```automatic_updating_measured_rate```: Automatic continuation (measured)
            jpn: |-
              契約の種別

              * ```outright```: 買い切り
              * ```prepaid```: プリペイド
              * ```automatic_updating_flat_rate```: 自動継続(固定)
              * ```automatic_updating_measured_rate```: 自動継続(従量)

          example: outright
          enum:
            - outright
            - prepaid
            - automatic_updating_flat_rate
            - automatic_updating_measured_rate
        license_type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              License Type

              * ```Corporation```: Corporation
              * ```User```: User
              * ```Device```: Device
              * ```Assignless```: Assignless
            jpn: |-
              ライセンス種別

              * ```Corporation```: 企業
              * ```User```: ユーザー
              * ```Device```: デバイス
              * ```Assignless```: ライセンス割当て不要

          example: Corporation
          enum:
            - Corporation
            - User
            - Device
            - Assignless
        span_type:
          type: string
          nullable: true
          description: |-

            :::x-description-i18n:
            eng: |-
              Automatic update span type

              * ```daily```: daily
              * ```weekly```: weekly
              * ```monthly```: monthly
              * ```yearly```: yearly

              ※ Required if ```contract_type``` is automatic renewal
            jpn: |-
              自動更新スパンの種別

              * ```daily```: 毎日
              * ```weekly```: 毎週
              * ```monthly```: 毎月
              * ```yearly```: 毎年

              ※ ```contract_type```が自動継続の場合は必須

          example: monthly
          enum:
            - daily
            - weekly
            - monthly
            - yearly
            - ''
        span_number:
          type: number
          nullable: true
          description: |-

            :::x-description-i18n:
            eng: |-
              Period of automatic renewal span, required if ```contract_type``` is automatic renewal
            jpn: |-
              自動更新スパンの期間, contract_typeが自動継続の場合は必須

          example: 1
        status:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Status
              * ```active```: active
              * ```inactive```: inactive
              * ```owner_absent```: owner absent
              * ```suspend```: suspend
            jpn: |-
              ステータス
              * ```active```: 有効
              * ```inactive```: 無効
              * ```owner_absent```: 所有者不在
              * ```suspend```: 一時停止
          example: active
          enum:
            - active
            - inactive
            - owner_absent
            - suspend
        purchased_at:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Purchase date and time
            jpn: |-
              購入日時

          format: ISO8601
          example: 2017-01-01T00:00:00z
        issued_at:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Publication date and time
            jpn: |-
              発行日時

          format: ISO8601
          example: 2017-01-01T00:00:00z
        expires_at:
          type: string
          nullable: true
          description: |-

            :::x-description-i18n:
            eng: |-
              Expiration date and time
            jpn: |-
              期限切れ日時

          format: ISO8601
          example: '1518165596566320259'
        status_change_at:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Status update date and time
            jpn: |-
              ステータス更新日時

          format: ISO8601
          example: 2017-12-01T00:00:00z
        items:
          description: |-

            :::x-description-i18n:
            eng: |-
              Product information
            jpn: |-
              商材情報

          type: array
          items:
            $ref: '#/components/schemas/V2PutSubscriptionsItem'
        custom_fields:
          description: |-

            :::x-description-i18n:
            eng: |-
              Custom fields
            jpn: |-
              自由記述項目

          example:
            label1: value1
            label2: value2
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
      required:
        - id
        - owner
        - provider_id
        - quantity
        - unit
        - contract_type
        - license_type
        - span_type
        - span_number
        - status
        - purchased_at
        - issued_at
        - expires_at
        - status_change_at
        - items
    V2PatchSubscriptionsSubscriptionIdOwnerDto:
      type: object
      properties:
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Owner type
              * ```Corporation```: Corporation type
              * ```User```: User type
            jpn: |-
              オーナー種別
              * ```Corporation```: 企業
              * ```User```: ユーザー
          enum:
            - Corporation
            - User
          example: Corporation
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Owner ID, UUID of ```Corporation``` or ```User```
            jpn: |-
              オーナーID, ```Corporation```または```User```のUUID
          example: c8a17724-caeb-4233-b8d8-ba38690a113d
          format: uuid
    V2PatchSubscriptionsSubscriptionIdItemDto:
      type: object
      properties:
        item_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Item ID, less than 255 characters
            jpn: |-
              商材ID, 255文字以下
          maxLength: 255
          minLength: 1
          example: storage 1
        plan_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Plan ID, less than 255 characters
            jpn: |-
              プランID, 255文字以下
          maxLength: 255
          example: '1'
          minLength: 1
        client_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID
          nullable: true
          format: uuid
          maxLength: 255
          minLength: 0
          example: 7ce7399b-3fb5-4e4c-8f0e-75e9d5b256e4
      required:
        - item_id
        - plan_id
    V2PatchSubscriptionsSubscriptionIdBodyDto:
      type: object
      properties:
        owner:
          description: |

            :::x-description-i18n:
            eng: |-
              Owner
            jpn: |-
              オーナー
          allOf:
            - $ref: '#/components/schemas/V2PatchSubscriptionsSubscriptionIdOwnerDto'
        provider_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Provider ID
            jpn: |-
              プロバイダID
          nullable: true
          format: uuid
        quantity:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              In quantities, below 2147483647, it is not permissible to set both ```quantity``` and ```unit``` to ```null```
            jpn: |-
              数量, 2147483647以下, ```quantity```と```unit```の両方を```null```に設定不可
          nullable: true
          maximum: 2147483647
          minimum: 0
        unit:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Within 255 characters or less, it is not permissible to set both ```quantity``` and ```unit``` to ```null```
            jpn: |-
              単位, 255文字以下, ```quantity```と```unit```の両方を```null```に設定不可
          nullable: true
          maxLength: 255
          example: number
          minLength: 0
        contract_type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contract type
              * ```outright```: outright purchase
              * ```prepaid```: prepaid
              * ```automatic_updating_flat_rate```: Automatic continuation (fixed)
              * ```automatic_updating_measured_rate```: Automatic continuation (measured)
            jpn: |-
              契約の種別
              * ```outright```: 買い切り
              * ```prepaid```: プリペイド
              * ```automatic_updating_flat_rate```: 自動継続(固定)
              * ```automatic_updating_measured_rate```: 自動継続(従量)
          enum:
            - outright
            - prepaid
            - automatic_updating_flat_rate
            - automatic_updating_measured_rate
        license_type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License type
              * ```Corporation```: Corporation
              * ```User```: User
              * ```Device```: Device
              * ```Assignless```: No license assignment required
            jpn: |-
              ライセンス種別
              * ```Corporation```: 企業
              * ```User```: ユーザー
              * ```Device```: デバイス
              * ```Assignless```: ライセンス割当て不要
          enum:
            - Corporation
            - User
            - Device
            - Assignless
        span_type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Automatic update span type
              ```daily```,```weekly```,```monthly```,```yearly``` Required if ```contract_type``` is automatic continuation
            jpn: |-
              自動更新スパンの種別
              ```daily```,```weekly```,```monthly```,```yearly``` ```contract_type```が自動継続の場合は必須
          nullable: true
          enum:
            - daily
            - weekly
            - monthly
            - yearly
        span_number:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              When the automatic update span period is in effect, it is mandatory for the ```contract_type``` to be automatic renewal.
                In the case of ```contract_type``` being ```outright``` and ```license_type``` being other than ```Assignless``` subscription, you cannot reduce the assigned number of ```license``` below the allocated amount
            jpn: |-
              自動更新スパンの期間, ```contract_type```が自動継続の場合は必須。
                ```contract_type```が```outright```かつ```license_type```が```Assignless```以外の```subscription```で割り当て済みの```license```数よりも減らすことが出来ません
          nullable: true
          maximum: 2147483647
          minimum: 0
        status:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              status
              * ```active```: active
              * ```inactive```: inactive
              * ```owner_absent```: owner absent
              * ```suspend```: suspend
            jpn: |-
              ステータス
              * ```active```: 有効
              * ```inactive```: 無効
              * ```owner_absent```: 所有者不在
              * ```suspend```: 一時停止
          enum:
            - active
            - inactive
            - owner_absent
            - suspend
        purchased_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Purchase date and time
            jpn: |-
              購入日時
          example: 2017-01-01T00:00:00z
          format: ISO8601
        issued_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Publication date and time
            jpn: |-
              発行日時
          example: 2017-01-01T00:00:00z
          format: ISO8601
        expires_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Expiration date and time
            jpn: |-
              期限切れ日時
          example: 2017-01-01T00:00:00z
          format: ISO8601
          nullable: true
        custom_fields:
          type: array
          description: |

            :::x-description-i18n:
            eng: |-
              It is possible to set arbitrary key-value pairs in free-form fields (both key and value must be 255 characters or less)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）
          nullable: true
        items:
          description: |

            :::x-description-i18n:
            eng: |-
              Product information
            jpn: |-
              商材情報
          type: array
          items:
            $ref: '#/components/schemas/V2PatchSubscriptionsSubscriptionIdItemDto'
    V2PatchSubscriptionsSubscriptionIdOwner:
      type: object
      properties:
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Owner type
            jpn: |-
              オーナー種別
          example: Corporation
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Owner ID
            jpn: |-
              オーナーID
          example: c8a17724-caeb-4233-b8d8-ba38690a113d
          format: uuid
          nullable: true
      required:
        - type
        - id
    V2PatchSubscriptionsSubscriptionIdItem:
      type: object
      properties:
        item_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Item ID
            jpn: |-
              商材ID
        plan_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Plan ID
            jpn: |-
              プランID
        client_id:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID
          format: uuid
      required:
        - item_id
        - plan_id
        - client_id
    V2PatchSubscriptionsSubscriptionId:
      type: object
      properties:
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプションID

          format: uuid
        owner:
          description: |

            :::x-description-i18n:
            eng: |-
              Owner
            jpn: |-
              オーナー
          allOf:
            - $ref: '#/components/schemas/V2PatchSubscriptionsSubscriptionIdOwner'
        provider_id:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Provider ID
            jpn: |-
              プロバイダID
          format: uuid
        quantity:
          type: number
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Quantity
            jpn: |-
              数量
          example: 2147483647
        unit:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Unit
            jpn: |-
              単位
          example: number
        contract_type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contract type
            jpn: |-
              契約の種別
          example: outright
        license_type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License type
            jpn: |-
              ライセンス種別
          example: Corporation
        span_type:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Automatic update span type
            jpn: |-
              自動更新スパンの種別
          example: daily
        span_number:
          type: number
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Auto update span number
            jpn: |-
              自動更新スパンの期間
          example: 2147483647
        status:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Status
              * ```active```: active
              * ```inactive```: inactive
              * ```owner_absent```: owner absent
              * ```suspend```: suspend
            jpn: |-
              ステータス
              * ```active```: 有効
              * ```inactive```: 無効
              * ```owner_absent```: 所有者不在
              * ```suspend```: 一時停止
          example: active
          enum:
            - active
            - inactive
            - owner_absent
            - suspend
        purchased_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Purchase date and time
            jpn: |-
              購入日時
          format: ISO8601
          example: 2017-01-01T00:00:00z
        issued_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Publication date and time
            jpn: |-
              発行日時
          example: 2017-01-01T00:00:00z
          format: ISO8601
        expires_at:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Expiration date and time
            jpn: |-
              期限切れ日時
          example: 2017-01-01T00:00:00z
          format: ISO8601
        status_change_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Status update date and time
            jpn: |-
              ステータス更新日時
          example: 2017-01-01T00:00:00z
          format: ISO8601
        custom_fields:
          type: array
          description: |

            :::x-description-i18n:
            eng: |-
              Free description field, arbitrary key and value can be set (both key and value 255 characters or less)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）
        items:
          description: |

            :::x-description-i18n:
            eng: |-
              Product information
            jpn: |-
              オーナー
          example:
            - item_id: storage 1
              plan_id: '1'
              client_id: 7ce7399b-3fb5-4e4c-8f0e-75e9d5b256e4
          type: array
          items:
            $ref: '#/components/schemas/V2PatchSubscriptionsSubscriptionIdItem'
      required:
        - id
        - owner
        - provider_id
        - quantity
        - unit
        - contract_type
        - license_type
        - span_type
        - span_number
        - status
        - purchased_at
        - issued_at
        - expires_at
        - status_change_at
        - items
    V2GetSubscriptionsSubscriptionIdOwner:
      type: object
      properties:
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Owner type
              * ```Corporation```: Corporation type
              * ```User```: User type
            jpn: |-
              オーナー種別
              * ```Corporation```: 企業
              * ```User```: ユーザー
          enum:
            - Corporation
            - User
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Owner ID, UUID of ```Corporation``` or ```User```
            jpn: |-
              オーナーID, ```Corporation```または```User```のUUID
          format: uuid
          nullable: true
      required:
        - type
        - id
    V2GetSubscriptionsSubscriptionIdCustomFields:
      type: object
      properties: {}
    V2GetSubscriptionsSubscriptionIdItem:
      type: object
      properties:
        item_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Item ID, less than 255 characters
            jpn: |-
              商材ID, 255文字以下
          example: 5b3fa7ba-57d3-4017-a65b-d57dcd2db643
        plan_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Plan ID, less than 255 characters
            jpn: |-
              プランID, 255文字以下
          example: 5b3fa7ba-57d3-4017-a65b-d57dcd2db643
        client_id:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID
          format: uuid
      required:
        - item_id
        - plan_id
        - client_id
    V2GetSubscriptionsSubscriptionId:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプションID
          format: uuid
        owner:
          description: |

            :::x-description-i18n:
            eng: |-
              Owner
            jpn: |-
              オーナー
          allOf:
            - $ref: '#/components/schemas/V2GetSubscriptionsSubscriptionIdOwner'
        provider_id:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Provider ID
            jpn: |-
              プロバイダID
          format: uuid
        quantity:
          type: number
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Quantity, below 2147483647, it is not permissible to set both ```quantity``` and ```unit``` to ```null```
            jpn: |-
              数量, 2147483647以下, ```quantity```と```unit```の両方を```null```に設定不可
        unit:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Unit, within 255 characters or less, it is not permissible to set both ```quantity``` and ```unit``` to ```null```
            jpn: |-
              単位, 255文字以下, ```quantity```と```unit```の両方を```null```に設定不可
          example: number
        contract_type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contract type
              * ```outright```: outright purchase
              * ```prepaid```: prepaid
              * ```automatic_updating_flat_rate```: Automatic continuation (fixed)
              * ```automatic_updating_measured_rate```: Automatic continuation (measured)
            jpn: |-
              契約の種別
              * ```outright```: 買い切り
              * ```prepaid```: プリペイド
              * ```automatic_updating_flat_rate```: 自動継続(固定)
              * ```automatic_updating_measured_rate```: 自動継続(従量)
          enum:
            - outright
            - prepaid
            - automatic_updating_flat_rate
            - automatic_updating_measured_rate
        license_type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License type
              * ```Corporation```: Corporation
              * ```User```: User
              * ```Device```: Device
              * ```Assignless```: No license assignment required
            jpn: |-
              ライセンス種別
              * ```Corporation```: 企業
              * ```User```: ユーザー
              * ```Device```: デバイス
              * ```Assignless```: ライセンス割当て不要
          enum:
            - Corporation
            - User
            - Device
            - Assignless
        span_type:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Automatic update span type
                  ```daily```,```weekly```,```monthly```,```yearly``` Required if ```contract_type``` is automatic continuation
            jpn: |-
              自動更新スパンの種別
              ```daily```,```weekly```,```monthly```,```yearly``` ```contract_type```が自動継続の場合は必須
          enum:
            - daily
            - weekly
            - monthly
            - yearly
        span_number:
          type: number
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              When the automatic update span period is in effect, it is mandatory for the ```contract_type``` to be automatic renewal
                In the case of ```contract_type``` being ```outright``` and ```license_type``` being other than ```Assignless``` subscription, you cannot reduce the assigned number of ```license``` below the allocated amount
            jpn: |-
              自動更新スパンの期間, ```contract_type```が自動継続の場合は必須
              ```contract_type```が```outright```かつ```license_type```が```Assignless```以外の```subscription```で割り当て済みの```license```数よりも減らすことが出来ません
        status:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              status
              * ```active```: active
              * ```inactive```: inactive
              * ```owner_absent```: owner absent
              * ```suspend```: suspend
            jpn: |-
              ステータス
              * ```active```: 有効
              * ```inactive```: 無効
              * ```owner_absent```: 所有者不在
              * ```suspend```: 一時停止
          enum:
            - active
            - inactive
            - owner_absent
            - suspend
        purchased_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Purchase date and time
            jpn: |-
              購入日時
          example: 2017-01-01T00:00:00z
          format: ISO8601
        issued_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Publication date and time
            jpn: |-
              発行日時
          example: 2017-01-01T00:00:00z
          format: ISO8601
        expires_at:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Expiration date and time
            jpn: |-
              期限切れ日時
          example: 2017-01-01T00:00:00z
          format: ISO8601
        status_change_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Status update date and time
            jpn: |-
              ステータス更新日時
          example: 2017-01-01T00:00:00z
          format: ISO8601
        custom_fields:
          description: |-

            :::x-description-i18n:
            eng: |-
              It is possible to set arbitrary key-value pairs in free-form fields (both key and value must be 255 characters or less)
            jpn: |-
              自由記述項目、任意のkey、valueを設定可能（key、valueともに255文字以下）

          example:
            label1: valueA
            label2: valueB
          type: array
          items:
            $ref: '#/components/schemas/V2GetSubscriptionsSubscriptionIdCustomFields'
        items:
          description: |

            :::x-description-i18n:
            eng: |-
              Product information
            jpn: |-
              商材情報
          type: array
          items:
            $ref: '#/components/schemas/V2GetSubscriptionsSubscriptionIdItem'
    V2GetSubscriptionsOwner:
      type: object
      properties:
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Owner type
              * ```Corporation```: Corporation type
              * ```User```: User type
            jpn: |-
              オーナー種別
              * ```Corporation```: 企業
              * ```User```: ユーザー
          enum:
            - Corporation
            - User
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Owner ID, UUID of ```Corporation``` or ```User```
            jpn: |-
              オーナーID, ```Corporation```または```User```のUUID
          format: uuid
          nullable: true
      required:
        - type
        - id
    V2GetSubscriptionsCustomFields:
      type: object
      properties: {}
    V2GetSubscriptionsItem:
      type: object
      properties:
        item_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Item ID, less than 255 characters
            jpn: |-
              商材ID, 255文字以下
          example: 5b3fa7ba-57d3-4017-a65b-d57dcd2db643
        plan_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Plan ID, less than 255 characters
            jpn: |-
              プランID, 255文字以下
          example: 5b3fa7ba-57d3-4017-a65b-d57dcd2db643
        client_id:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Client ID
            jpn: |-
              クライアントID
          format: uuid
      required:
        - item_id
        - plan_id
        - client_id
    V2GetSubscriptionsSubscription:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプションID
          format: uuid
        owner:
          description: |

            :::x-description-i18n:
            eng: |-
              Owner
            jpn: |-
              オーナー
          allOf:
            - $ref: '#/components/schemas/V2GetSubscriptionsOwner'
        provider_id:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Provider ID
            jpn: |-
              プロバイダID
          format: uuid
        quantity:
          type: number
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Quantity, In quantities below 2147483647, it is not permissible to set both quantity and unit to null
            jpn: |-
              数量, 2147483647以下, quantityとunitの両方をnullに設定不可
        unit:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Unit, Within 255 characters or less, it is not permissible to set both quantity and unit to null
            jpn: |-
              単位, 255文字以下, quantityとunitの両方をnullに設定不可
        license_type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License type
              * ```Corporation```: Corporation
              * ```User```: User
              * ```Device```: Device
              * ```Assignless```: No license assignment required
            jpn: |-
              ライセンス種別
              * ```Corporation```: 企業
              * ```User```: ユーザー
              * ```Device```: デバイス
              * ```Assignless```: ライセンス割当て不要
          enum:
            - Corporation
            - User
            - Device
            - Assignless
        contract_type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Contract type
              * ```outright```: outright purchase
              * ```prepaid```: prepaid
              * ```automatic_updating_flat_rate```: Automatic continuation (fixed)
              * ```automatic_updating_measured_rate```: Automatic continuation (measured)
            jpn: |-
              契約の種別
              * ```outright```: 買い切り
              * ```prepaid```: プリペイド
              * ```automatic_updating_flat_rate```: 自動継続(固定)
              * ```automatic_updating_measured_rate```: 自動継続(従量)
          enum:
            - outright
            - prepaid
            - automatic_updating_flat_rate
            - automatic_updating_measured_rate
        span_type:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Automatic update span type
                  ```daily```,```weekly```,```monthly```,```yearly``` Required if ```contract_type``` is automatic continuation
            jpn: |-
              自動更新スパンの種別
              ```daily```,```weekly```,```monthly```,```yearly``` ```contract_type```が自動継続の場合は必須
          enum:
            - daily
            - weekly
            - monthly
            - yearly
        span_number:
          type: number
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              When the automatic update span period is in effect, it is mandatory for the ```contract_type``` to be automatic renewal
                In the case of ```contract_type``` being ```outright``` and ```license_type``` being other than ```Assignless``` subscription, you cannot reduce the assigned number of licenses below the allocated amount
            jpn: |-
              自動更新スパンの期間, ```contract_type```が自動継続の場合は必須
              ```contract_type```が```outright```かつ```license_type```が```Assignless```以外の```subscription```で割り当て済みの```license```数よりも減らすことが出来ません
        status:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              status
              * ```active```: active
              * ```inactive```: inactive
              * ```owner_absent```: owner absent
              * ```suspend```: suspend
            jpn: |-
              ステータス
              * ```active```: 有効
              * ```inactive```: 無効
              * ```owner_absent```: 所有者不在
              * ```suspend```: 一時停止
          enum:
            - active
            - inactive
            - owner_absent
            - suspend
        purchased_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Purchase date and time
            jpn: |-
              購入日時
          format: ISO8601
        issued_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Publication date and time
            jpn: |-
              発行日時
          format: ISO8601
        expires_at:
          type: string
          nullable: true
          description: |

            :::x-description-i18n:
            eng: |-
              Expiration date and time
            jpn: |-
              期限切れ日時
          format: ISO8601
        status_change_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Status update date and time
            jpn: |-
              ステータス更新日時
          format: ISO8601
        custom_fields:
          description: |

            :::x-description-i18n:
            eng: |-
              Free text field (display only if value exists)
            jpn: |-
              自由記述項目 (値が存在する場合のみ表示する)
          type: array
          items:
            $ref: '#/components/schemas/V2GetSubscriptionsCustomFields'
        items:
          description: |

            :::x-description-i18n:
            eng: |-
              Product information
            jpn: |-
              オーナー
          type: array
          items:
            $ref: '#/components/schemas/V2GetSubscriptionsItem'
      required:
        - id
        - owner
        - provider_id
        - quantity
        - unit
        - license_type
        - contract_type
        - span_type
        - span_number
        - status
        - purchased_at
        - issued_at
        - expires_at
        - status_change_at
        - items
    V2GetSubscriptions:
      type: object
      properties:
        subscriptions:
          description: |

            :::x-description-i18n:
            eng: |-
              Subscriptions
            jpn: |-
              サブスクリプション
          example:
            - id: 9bf9c8fc-9f28-48d5-b2f9-e011aecdeb6e
              owner:
                type: Corporation
                id: c8a17724-caeb-4233-b8d8-ba38690a113d
              items:
                - item_id: 5b3fa7ba-57d3-4017-a65b-d57dcd2db643
                  plan_id: 5b3fa7ba-57d3-4017-a65b-d57dcd2db643
                  client_id: 7ce7399b-3fb5-4e4c-8f0e-75e9d5b256e4
              provider_id: cf221ab7-9272-48e9-b8ce-433397744185
              quantity: 10
              unit: number
              license_type: Corporation
              contract_type: outright
              span_type: monthly
              span_number: 1
              status: active
              purchased_at: 2017-01-01T00:00:00z
              issued_at: 2017-01-01T00:00:00z
              expires_at: 2017-01-01T00:00:00z
              status_change_at: 2017-01-01T00:00:00z
          type: array
          items:
            $ref: '#/components/schemas/V2GetSubscriptionsSubscription'
        total:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              Total number of applicable data
            jpn: |-
              該当するデータの全件数
          example: 1
      required:
        - subscriptions
        - total
    V2PutSubscriptionsSubscriptionIDLicensesLicenseIDSubjectDto:
      type: object
      properties:
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License type
              ```Corporation```: Corporation type
              ```User```: User type
              ```Device```: Device type
            jpn: |-
              ライセンス種別
              ```Corporation```: 企業
              ```User```: ユーザー
              ```Device```: デバイス
          enum:
            - Corporation
            - User
            - Device
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Identifier for license assignment
            jpn: |-
              ライセンス割当対象の識別子

          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
      required:
        - type
        - id
    V2PutSubscriptionsSubscriptionIDLicensesLicenseIDBodyDto:
      type: object
      properties:
        subject:
          description: |-

            :::x-description-i18n:
            eng: |-
              Additional information of license
            jpn: |-
              ライセンスの追加情報

          allOf:
            - $ref: >-
                #/components/schemas/V2PutSubscriptionsSubscriptionIDLicensesLicenseIDSubjectDto
        issued_at:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Publication date and time
            jpn: |-
              発行日時

          example: '2017-01-01T00:00:00Z'
          format: ISO8601
        expires_at:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Expiration date and time
            jpn: |-
              発行日時

          example: '2017-01-01T00:00:00Z'
          format: ISO8601
      required:
        - subject
        - issued_at
        - expires_at
    V2PutSubscriptionsSubscriptionIDLicensesLicenseIDSubject:
      type: object
      properties:
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License type
            jpn: |-
              ライセンス種別
          example: Corporation
        id:
          type: string
          nullable: true
          description: |-

            :::x-description-i18n:
            eng: |-
              Identifier for license assignment
            jpn: |-
              ライセンス割当対象の識別子

          format: uuid
      required:
        - type
        - id
    V2PutSubscriptionsSubscriptionIDLicensesLicenseID:
      type: object
      properties:
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              License ID
            jpn: |-
              ライセンスID
          format: uuid
        subscription_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプションID
          format: uuid
        subject:
          description: |-

            :::x-description-i18n:
            eng: |-
              Additional information of license
            jpn: |-
              ライセンスの追加情報

          allOf:
            - $ref: >-
                #/components/schemas/V2PutSubscriptionsSubscriptionIDLicensesLicenseIDSubject
        issued_at:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Publication date and time
            jpn: |-
              発行日時

          format: ISO8601
          example: '2017-01-01T00:00:00Z'
        expires_at:
          type: string
          nullable: true
          description: |-

            :::x-description-i18n:
            eng: |-
              Expiration date and time
            jpn: |-
              発行日時

          format: ISO8601
          example: '2017-01-01T00:00:00Z'
      required:
        - id
        - subscription_id
        - subject
        - issued_at
        - expires_at
    V2PostSubscriptionsSubscriptionIdLicensesSubjectDto:
      type: object
      properties:
        type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              License Type
              * ```Corporation```: Corporation
              * ```User```: User
              * ```Device```: Device
            jpn: |-
              ライセンス種別
              * ```Corporation```: 企業
              * ```User```: ユーザー
              * ```Device```: デバイス

          example: User
          enum:
            - Corporation
            - User
            - Device
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              ID for license assignment, UUID of ```Corporation``` or ```User``` or ```Device```
            jpn: |-
              ライセンス割当対象の識別子, ```Corporation```または```User```または```Device```のUUID

          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
          format: uuid
      required:
        - type
        - id
    V2PostSubscriptionsSubscriptionIdLicensesBodyDto:
      type: object
      properties:
        subject:
          description: |-

            :::x-description-i18n:
            eng: |-
              Additional information of license
            jpn: |-
              ライセンスの追加情報

          allOf:
            - $ref: >-
                #/components/schemas/V2PostSubscriptionsSubscriptionIdLicensesSubjectDto
        issued_at:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Publication date and time
            jpn: |-
              発行日時

          format: ISO8601
          example: '2017-01-01T00:00:00Z'
        expires_at:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Expiration date and time
            jpn: |-
              期限切れ日時

          format: ISO8601
          example: '2018-01-01T00:00:00Z'
      required:
        - subject
        - issued_at
        - expires_at
    V2PostSubscriptionsSubscriptionIdLicensesSubject:
      type: object
      properties:
        type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              License Type
              * ```Corporation```: Corporation
              * ```User```: User
              * ```Device```: Device
            jpn: |-
              ライセンス種別
              * ```Corporation```: 企業
              * ```User```: ユーザー
              * ```Device```: デバイス

          example: User
          enum:
            - User
            - Corporation
            - Device
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              ID for license assignment
            jpn: |-
              ライセンス割当対象の識別子

          example: 37ff0077-6319-4e80-af49-b8b2f2d26cfd
          format: uuid
      required:
        - type
        - id
    V2PostSubscriptionsSubscriptionIdLicenses:
      type: object
      properties:
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              License ID
            jpn: |-
              ライセンスID

          example: 78dc7c16-8272-4eaf-b822-8976cbedc2c4
          format: uuid
        subscription_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプションID

          example: 9bf9c8fc-9f28-48d5-b2f9-e011aecdeb6e
          format: uuid
        subject:
          description: |-

            :::x-description-i18n:
            eng: |-
              Additional information of license
            jpn: |-
              ライセンスの追加情報

          allOf:
            - $ref: >-
                #/components/schemas/V2PostSubscriptionsSubscriptionIdLicensesSubject
        issued_at:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Publication date and time
            jpn: |-
              発行日時

          format: ISO8601
          example: '2017-01-01T00:00:00Z'
        expires_at:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Expiration date and time
            jpn: |-
              期限切れ日時

          format: ISO8601
          example: '2018-01-01T00:00:00Z'
      required:
        - id
        - subscription_id
        - subject
        - issued_at
        - expires_at
    V2PatchSubscriptionsSubscriptionIdLicensesLicenseIdSubjectDto:
      type: object
      properties:
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License type
              * ```Corporation```: Corporation
              * ```User```: User
              * ```Device```: Device
            jpn: |-
              ライセンス種別
              * ```Corporation```: 企業
              * ```User```: ユーザー
              * ```Device```: デバイス
          enum:
            - Corporation
            - User
            - Device
          example: Corporation
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              The identifier eligible for license allocation

            jpn: |-
              ライセンス割当対象の識別子
          format: uuid
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
    V2PatchSubscriptionsSubscriptionIdLicensesLicenseIdBodyDto:
      type: object
      properties:
        subject:
          description: |-

            :::x-description-i18n:
            eng: |-
              Additional information of license
            jpn: |-
              ライセンスの追加情報

          allOf:
            - $ref: >-
                #/components/schemas/V2PatchSubscriptionsSubscriptionIdLicensesLicenseIdSubjectDto
        issued_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Issuance date and time
            jpn: |-
              発行日時
          format: ISO8601
          example: '2018-01-01T00:00:00Z'
        expires_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Expiration date and time

            jpn: |-
              期限切れ日時
          format: ISO8601
          example: '2018-01-01T00:00:00Z'
    V2PatchSubscriptionsSubscriptionIdLicensesLicenseIdSubject:
      type: object
      properties:
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License type

              * ```Corporation```: Corporation
              * ```User```: User
              * ```Device```: Device

            jpn: |-
              ライセンス種別

              * ```Corporation```: 企業
              * ```User```: ユーザー
              * ```Device```: デバイス
          enum:
            - Corporation
            - User
            - Device
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              The identifier eligible for license allocation

            jpn: |-
              ライセンス割当対象の識別子
          format: uuid
          nullable: true
      required:
        - type
        - id
    V2PatchSubscriptionsSubscriptionIdLicensesLicenseId:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License ID

            jpn: |-
              ライセンスID
          format: uuid
        subscription_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription ID

            jpn: |-
              サブスクリプションID
          format: uuid
        subject:
          description: |-

            :::x-description-i18n:
            eng: |-
              Additional information of license
            jpn: |-
              ライセンスの追加情報

          allOf:
            - $ref: >-
                #/components/schemas/V2PatchSubscriptionsSubscriptionIdLicensesLicenseIdSubject
        issued_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Issuance date and time

            jpn: |-
              発行日時
          example: '2018-01-01T00:00:00Z'
          format: ISO8601
        expires_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Expiration date and time

            jpn: |-
              期限切れ日時
          format: ISO8601
          example: '2018-01-01T00:00:00Z'
      required:
        - id
        - subscription_id
        - subject
        - issued_at
        - expires_at
    V2DeleteSubscriptionsSubscriptionIdLicensesBodyDto:
      type: object
      properties:
        licenses:
          description: |-

            :::x-description-i18n:
            eng: |-
              License ID
            jpn: |-
              ライセンスID

          example:
            - 497f6eca-6276-4993-bfeb-53cbbbba6f08
          type: array
          items:
            type: string
      required:
        - licenses
    V2GetSubscriptionsSubscriptionIdLicensesLicenseSubject:
      type: object
      properties:
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License type
            jpn: |-
              ライセンス種別
          enum:
            - User
            - Corporation
            - Device
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Identifier for license assignment
            jpn: |-
              ライセンス割当対象の識別子
          format: uuid
          nullable: true
    V2GetSubscriptionsSubscriptionIdLicensesLicenseId:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License ID
            jpn: |-
              ライセンスID
          example: 324f8aea-7578-401c-9927-41f27818f5c9
          format: uuid
        subscription_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプションID
          example: d15a53b0-0302-43a3-bd44-49eebb41e76f
          format: uuid
        subject:
          description: |-

            :::x-description-i18n:
            eng: |-
              Additional information of license
            jpn: |-
              ライセンスの追加情報

          allOf:
            - $ref: >-
                #/components/schemas/V2GetSubscriptionsSubscriptionIdLicensesLicenseSubject
        issued_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Publication date and time
            jpn: |-
              発行日時
          format: ISO8601
          example: '2017-01-01T00:00:00Z'
        expires_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Expiration date and time
            jpn: |-
              期限切れ日時
          format: ISO8601
          example: '2017-01-01T00:00:00Z'
    V2GetSubscriptionsSubscriptionIdLicensesSubject:
      type: object
      properties:
        type:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License type
            jpn: |-
              ライセンス種別
          enum:
            - Corporation
            - User
            - Device
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Identifier for license assignment, UUID of ```Corporation```, ```User``` or ```Device```
            jpn: |-
              ライセンス割当対象の識別子, ```Corporation```または```User```または```Device```のUUID
          format: uuid
          nullable: true
      required:
        - type
        - id
    V2GetSubscriptionsSubscriptionIdLicensesLicense:
      type: object
      properties:
        id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              License ID
            jpn: |-
              ライセンスID
          format: uuid
        subscription_id:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Subscription ID
            jpn: |-
              サブスクリプションID
          format: uuid
        subject:
          description: |-

            :::x-description-i18n:
            eng: |-
              Additional information of license
            jpn: |-
              ライセンスの追加情報

          allOf:
            - $ref: >-
                #/components/schemas/V2GetSubscriptionsSubscriptionIdLicensesSubject
        issued_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Publication date and time
            jpn: |-
              発行日時
          example: '2017-01-01T00:00:00Z'
          format: ISO8601
        expires_at:
          type: string
          description: |

            :::x-description-i18n:
            eng: |-
              Expiration date and time
            jpn: |-
              期限切れ日時
          example: '2018-01-01T00:00:00Z'
          format: ISO8601
      required:
        - id
        - subscription_id
        - subject
        - issued_at
        - expires_at
    V2GetSubscriptionsSubscriptionIdLicenses:
      type: object
      properties:
        licenses:
          description: Licenses
          type: array
          items:
            $ref: >-
              #/components/schemas/V2GetSubscriptionsSubscriptionIdLicensesLicense
        total:
          type: number
          description: |

            :::x-description-i18n:
            eng: |-
              The total number of relevant data entries
            jpn: |-
              該当するデータの全件数
          example: 1
      required:
        - licenses
        - total
    V2PostAclsPublic:
      type: object
      properties:
        enable:
          type: boolean
          description: |-

            :::x-description-i18n:
            eng: |-
              Publication status (defined for each Resource)

              * true: public
              * false: private
            jpn: |-
              公開状態(Resourceごとに定義)

              * true: 公開
              * false: 非公開

          example: true
        deprecated_to:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              End date and time of grace period until publication (defined for each Resource)
            jpn: |-
              非公開までの猶予の終了日時(Resourceごとに定義)

          example: '2016-08-15T16:04:33+00:00'
    V2PostAclsLocation:
      type: object
      properties:
        from_latitude:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Starting position of allowed latitude range (defined per Resource)
              ※Maximum 11 digits (3 digits integer, 8 digits after decimal point)
            jpn: |-
              許可する緯度範囲の開始位置(Resourceごとに定義)
              ※最大11桁（整数 3桁、小数点以下 8桁）

          example: '35.65702795'
        from_longitude:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Starting position of allowed longitude range (defined per Resource)
              ※Maximum 11 digits (3 digits integer, 8 digits after decimal point)
            jpn: |-
              許可する経度範囲の開始位置(Resourceごとに定義)
              ※最大11桁（整数 3桁、小数点以下 8桁）

          example: '139.7626623'
        from_altitude:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Starting position of allowed altitude range (defined for each Resource)
              ※Maximum 11 digits
            jpn: |-
              許可する高度範囲の開始位置(Resourceごとに定義)
              ※最大11桁

          example: '230'
        to_latitude:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Ending position of allowed latitude range (defined for each Resource)
              ※Maximum 11 digits (3 digits integer, 8 digits after decimal point)
            jpn: |-
              許可する緯度範囲の終了位置(Resourceごとに定義)
              ※最大11桁（整数 3桁、小数点以下 8桁）

          example: '36.65702795'
        to_longitude:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Ending position of allowed longitude range (defined for each Resource)
              ※Maximum 11 digits (3 digits integer, 8 digits after decimal point)
            jpn: |-
              許可する経度範囲の終了位置(Resourceごとに定義)
              ※最大11桁（整数 3桁、小数点以下 8桁）

          example: '149.7626623'
        to_altitude:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              End position of allowed altitude range (defined for each Resource)
              ※Maximum 11 digits
            jpn: |-
              許可する高度範囲の終了位置(Resourceごとに定義)
              ※最大11桁

          example: '350'
    V2PostAclsTime:
      type: object
      properties:
        from:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Start date and time of allowed date and time range (defined for each Resource)
              ※In ISO8601 format
            jpn: |-
              許可する日時範囲の開始日時(Resourceごとに定義)
              ※ISO8601形式

          format: ISO8601
          example: '2016-08-15T16:04:33+00:00'
        to:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              End date and time of allowed date and time range (defined for each Resource)
              ※In ISO8601 format
            jpn: |-
              許可する日時範囲の終了日時(Resourceごとに定義)
              ※ISO8601形式

          format: ISO8601
          example: '2018-11-15T16:04:33+00:00'
    V2PostAclsDate:
      type: object
      properties:
        day_of_weeks:
          description: |-

            :::x-description-i18n:
            eng: |-
              Start list of permitted schedule ranges (defined for each Resource)

              ※Specify the days of the week in JSON array format
              ※Value is one of
              * ```monday```: Monday
              * ```tuesday```: Tuesday
              * ```wednesday```: Wednesday
              * ```thursday```: Thursday
              * ```friday```: Friday
              * ```saturday```: Saturday
              * ```sunday```: Sunday
            jpn: |-
              許可するスケジュール範囲の開始一覧(Resourceごとに定義)。

              ※曜日をJSONの配列形式で指定。
              ※選択肢は
              * ```monday```: 月曜日
              * ```tuesday```: 火曜日
              * ```wednesday```: 水曜日
              * ```thursday```: 木曜日
              * ```friday```: 金曜日
              * ```saturday```: 土曜日
              * ```sunday```: 日曜日

          example:
            - monday
            - sunday
          type: array
          items:
            type: string
        from:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              List of allowed schedule ranges (defined for each Resource)

              ※Specified in Time format (HH:MM:SS)
            jpn: |-
              許可するスケジュール範囲の一覧(Resourceごとに定義)

              ※Time形式（HH:MM:SS）で指定

          example: '16:00:00'
        to:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              List of allowed schedule ranges (defined for each Resource)

              ※Specified in Time format (HH:MM:SS)
            jpn: |-
              許可するスケジュール範囲の一覧(Resourceごとに定義)

              ※Time形式（HH:MM:SS）で指定

          example: '18:30:00'
    V2PostAclsFilters:
      type: object
      properties:
        users:
          description: |-

            :::x-description-i18n:
            eng: |-
              List of permitted users

              ※Specify UUID in JSON array format
            jpn: |-
              許可するuser一覧

              ※UUIDをJSONの配列形式で指定

          example:
            - a3lgakee-4c2b-4932-8a40-8210fc0637bf
          type: array
          items:
            type: string
        groups:
          description: |-

            :::x-description-i18n:
            eng: |-
              List of allowed groups

              ※Specify UUID in JSON array format
            jpn: |-
              許可するgroup一覧

              ※UUIDをJSONの配列形式で指定

          example:
            - c3lgakee-4c2b-4932-8a40-8210fc0637bf
          type: array
          items:
            type: string
        roles:
          description: |-

            :::x-description-i18n:
            eng: |-
              List of permitted role

              ※Specify UUID in JSON array format
            jpn: |-
              許可するrole一覧

              ※UUIDをJSONの配列形式で指定

          example:
            - c3lgakee-4c2b-4932-8a40-8210fc0637bf
          type: array
          items:
            type: string
        clients:
          description: |-

            :::x-description-i18n:
            eng: |-
              List of permitted client

              ※Specify UUID in JSON array format
            jpn: |-
              許可するclient一覧

              ※UUIDをJSONの配列形式で指定

          example:
            - d3lgakee-4c2b-4932-8a40-8210fc0637bf
          type: array
          items:
            type: string
        public:
          description: |-

            :::x-description-i18n:
            eng: |-
              Public
            jpn: |-
              パブリック

          allOf:
            - $ref: '#/components/schemas/V2PostAclsPublic'
        ip_addresses:
          description: |-

            :::x-description-i18n:
            eng: |-
              List of allowed IP addresses (defined for each Resource)
            jpn: |-
              許可するIPアドレス一覧(Resourceごとに定義)

          example:
            - 192.168.0.1
          type: array
          items:
            type: string
        locations:
          description: |-

            :::x-description-i18n:
            eng: |-
              Location
            jpn: |-
              ロケーション

          type: array
          items:
            $ref: '#/components/schemas/V2PostAclsLocation'
        times:
          description: |-

            :::x-description-i18n:
            eng: |-
              Time
            jpn: |-
              タイム

          type: array
          items:
            $ref: '#/components/schemas/V2PostAclsTime'
        dates:
          description: |-

            :::x-description-i18n:
            eng: |-
              Date
            jpn: |-
              デイト

          type: array
          items:
            $ref: '#/components/schemas/V2PostAclsDate'
    V2PostAclsBodyDto:
      type: object
      properties:
        owner_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              ResourceOwner foreign key
            jpn: |-
              ResourceOwnerの外部キー

          example: d7ca2a48-4c2b-4932-8a40-8210fc0637bf
          format: uuid
        resource_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Resource foreign key
            jpn: |-
              Resourceの外部キー

          example: 7ce7399b-3fb5-4e4c-8f0e-75e9d5b256e4
          format: uuid
        resource_type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Identifier for each resource
            jpn: |-
              Resourceごとの識別子

          example: oauth2_client
        actions:
          description: |-

            :::x-description-i18n:
            eng: |-
              List of allowed actions
            jpn: |-
              許可するaction一覧

          example:
            - oauth2_clients:read
            - oauth2_clients:create
          type: array
          items:
            type: string
        priority:
          type: number
          description: |-

            :::x-description-i18n:
            eng: |-
              Priority
            jpn: |-
              優先度

          example: 5
        reason:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Reason
            jpn: |-
              理由

        filters:
          description: |-

            :::x-description-i18n:
            eng: |-
              Filter
            jpn: |-
              フィルター

          allOf:
            - $ref: '#/components/schemas/V2PostAclsFilters'
    V2PostAcls:
      type: object
      properties:
        id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Primary key
            jpn: |-
              主キー

          format: uuid
        owner_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              ResourceOwner foreign key
            jpn: |-
              ResourceOwnerの外部キー

          example: d7ca2a48-4c2b-4932-8a40-8210fc0637bf
          format: uuid
        resource_id:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Resource foreign key
            jpn: |-
              Resourceの外部キー

          example: 7ce7399b-3fb5-4e4c-8f0e-75e9d5b256e4
          format: uuid
        resource_type:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Identifier for each resource
            jpn: |-
              Resourceごとの識別子

          example: oauth2_client
        actions:
          description: |-

            :::x-description-i18n:
            eng: |-
              List of allowed actions
            jpn: |-
              許可するaction一覧

          example:
            - oauth2_clients:read
            - oauth2_clients:create
          type: array
          items:
            type: string
        priority:
          type: number
          description: |-

            :::x-description-i18n:
            eng: |-
              Priority
            jpn: |-
              優先度

          example: 5
        reason:
          type: string
          description: |-

            :::x-description-i18n:
            eng: |-
              Reason
            jpn: |-
              理由

          example: ''
        filters:
          description: |-

            :::x-description-i18n:
            eng: |-
              Filter
            jpn: |-
              フィルター

          allOf:
            - $ref: '#/components/schemas/V2PostAclsFilters'
      required:
        - id
    V2GetAcls:
      type: object
      properties:
        total:
          type: number
          description: |-

            :::x-description-i18n:
            eng: |-
              Total, 0 or more
            jpn: |-
              合計、0以上

          example: 1
          minimum: 0
          default: 1
        acls:
          description: |-

            :::x-description-i18n:
            eng: |-
              Access control list
            jpn: |-
              アクセスコントロール一覧

          default: []
          type: array
          items:
            type: array
      required:
        - total
        - acls
    V2GetAgreementsAgreementId:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: 利用規約ID
        version:
          type: string
          description: 版
          example: 22020801#b2c
        statement_of_agreement:
          type: string
          description: 利用規約本文
          example: <p>sample statement of agreement</p>
          nullable: true
      required:
        - id
        - version
        - statement_of_agreement
    V2PostDatastoreChannelsChannelIdObjectsChannelProtocol:
      type: object
      properties:
        id:
          type: string
          description: チャネルプロトコルID
          example: 9m4e2mr0ui3r8a215n4g
        version:
          type: number
          description: チャネルプロトコルのバージョン
          example: 1
        validated:
          type: boolean
          description: チャネルプロトコルのバリデーション
      required:
        - id
        - version
        - validated
    V2PostDatastoreChannelsChannelIdObjectsLocation:
      type: object
      properties:
        latitude:
          type: number
          description: 緯度
          example: 35.656917
          nullable: true
        longitude:
          type: number
          description: 経度
          example: 139.7595
          nullable: true
        altitude:
          type: number
          description: 高度
          example: 45
          nullable: true
      required:
        - latitude
        - longitude
        - altitude
    V2PostDatastoreChannelsChannelIdObjects:
      type: object
      properties:
        id:
          type: string
          description: オブジェクトのID
          example: 5y4e2mr0ui3r8a215n4g
        channel_protocols:
          description: チャネルプロトコル
          type: array
          items:
            $ref: >-
              #/components/schemas/V2PostDatastoreChannelsChannelIdObjectsChannelProtocol
        labels:
          type: object
          description: ラベル情報
          example:
            label1: value1
            label2: value2
          nullable: true
        location:
          description: オブジェクトの位置情報
          nullable: true
          allOf:
            - $ref: >-
                #/components/schemas/V2PostDatastoreChannelsChannelIdObjectsLocation
        mime_type:
          type: string
          description: ペイロード(データ本体)のMIMETYPE情報
          example: application/json
        session_id:
          type: string
          description: セッションID。
          example: session_1
          nullable: true
        timestamp:
          type: string
          description: >-
            サーバのデータ受信時刻 ※1。UNIX時間(ナノ秒) ※1 packer
            formatでtimestampを指定した場合は、クライアントで指定された値が設定されます。
          example: '1518165596566320259'
      required:
        - id
        - channel_protocols
        - labels
        - location
        - mime_type
        - session_id
        - timestamp
    V2PostDatastoreChannelsChannelIdObjectsResponse:
      type: object
      properties:
        object:
          description: オブジェクト(データ)のメタデータ
          allOf:
            - $ref: '#/components/schemas/V2PostDatastoreChannelsChannelIdObjects'
      required:
        - object
    V2GetDatastoreChannelsChannelIdObjectsChannelProtocol:
      type: object
      properties:
        id:
          type: string
          description: チャネルプロトコルID
          example: 5y4e2mr0ui3r8a215n4g
        version:
          type: number
          description: チャネルプロトコルのバージョン
          example: 1
        validated:
          type: boolean
          description: チャネルプロトコルのバリデーション
      required:
        - id
        - version
        - validated
    V2GetDatastoreChannelsChannelIdObjectsLocation:
      type: object
      properties:
        latitude:
          type: number
          description: 緯度情報
          example: 35.656917
          format: float
          nullable: true
        longitude:
          type: number
          description: 経度情報
          example: 139.7595
          format: float
          nullable: true
        altitude:
          type: number
          description: 経度情報
          example: 45
          format: float
          nullable: true
      required:
        - latitude
        - longitude
        - altitude
    V2GetDatastoreChannelsChannelIdObjectsEntity:
      type: object
      properties:
        id:
          type: string
          description: オブジェクトのID
          example: 9m4e2mr0ui3r8a215n4g
        channel_protocols:
          description: チャネルプロトコル
          type: array
          items:
            $ref: >-
              #/components/schemas/V2GetDatastoreChannelsChannelIdObjectsChannelProtocol
        mime_type:
          type: string
          description: ペイロード(データ本体)のMIMETYPE情報
          example: application/json
        timestamp:
          type: string
          description: サーバのデータ受信時刻 ※1
          example: '1675222667898003416'
        location:
          description: オブジェクトの位置情報
          nullable: true
          allOf:
            - $ref: >-
                #/components/schemas/V2GetDatastoreChannelsChannelIdObjectsLocation
        session_id:
          type: string
          description: セッションID
          example: session_1
          nullable: true
        labels:
          type: object
          description: ラベル情報
          example:
            label1: value1
            label2: value2
          nullable: true
      required:
        - id
        - channel_protocols
        - mime_type
        - timestamp
        - location
        - session_id
        - labels
    V2GetDatastoreChannelsChannelIdObjectsResponseEntity:
      type: object
      properties:
        total:
          type: number
          description: フィルタに引っかかった全件数
          example: 1
        objects:
          description: オブジェクト(データ)のメタデータ
          type: array
          items:
            $ref: '#/components/schemas/V2GetDatastoreChannelsChannelIdObjectsEntity'
      required:
        - total
        - objects
    V2GetEmailsEnable:
      type: object
      properties:
        enable:
          type: boolean
          description: メールアドレスの使用可否
      required:
        - enable
